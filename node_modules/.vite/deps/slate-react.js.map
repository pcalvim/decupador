{
  "version": 3,
  "sources": ["../../direction/index.js", "../../lodash/isObject.js", "../../lodash/_freeGlobal.js", "../../lodash/_root.js", "../../lodash/now.js", "../../lodash/_trimmedEndIndex.js", "../../lodash/_baseTrim.js", "../../lodash/_Symbol.js", "../../lodash/_getRawTag.js", "../../lodash/_objectToString.js", "../../lodash/_baseGetTag.js", "../../lodash/isObjectLike.js", "../../lodash/isSymbol.js", "../../lodash/toNumber.js", "../../lodash/debounce.js", "../../lodash/throttle.js", "../../is-hotkey/lib/index.js", "../../compute-scroll-into-view/src/index.ts", "../../scroll-into-view-if-needed/es/index.js", "../../@juggle/resize-observer/lib/utils/resizeObservers.js", "../../@juggle/resize-observer/lib/algorithms/hasActiveObservations.js", "../../@juggle/resize-observer/lib/algorithms/hasSkippedObservations.js", "../../@juggle/resize-observer/lib/algorithms/deliverResizeLoopError.js", "../../@juggle/resize-observer/lib/ResizeObserverBoxOptions.js", "../../@juggle/resize-observer/lib/utils/freeze.js", "../../@juggle/resize-observer/lib/ResizeObserverSize.js", "../../@juggle/resize-observer/lib/DOMRectReadOnly.js", "../../@juggle/resize-observer/lib/utils/element.js", "../../@juggle/resize-observer/lib/utils/global.js", "../../@juggle/resize-observer/lib/algorithms/calculateBoxSize.js", "../../@juggle/resize-observer/lib/ResizeObserverEntry.js", "../../@juggle/resize-observer/lib/algorithms/calculateDepthForNode.js", "../../@juggle/resize-observer/lib/algorithms/broadcastActiveObservations.js", "../../@juggle/resize-observer/lib/algorithms/gatherActiveObservationsAtDepth.js", "../../@juggle/resize-observer/lib/utils/process.js", "../../@juggle/resize-observer/lib/utils/queueMicroTask.js", "../../@juggle/resize-observer/lib/utils/queueResizeObserver.js", "../../@juggle/resize-observer/lib/utils/scheduler.js", "../../@juggle/resize-observer/lib/ResizeObservation.js", "../../@juggle/resize-observer/lib/ResizeObserverDetail.js", "../../@juggle/resize-observer/lib/ResizeObserverController.js", "../../@juggle/resize-observer/lib/ResizeObserver.js", "../../../.yarn/cache/@babel-runtime-npm-7.15.3-6333c71362-2f0b8d2d4e.zip/node_modules/@babel/runtime/helpers/esm/defineProperty.js", "../../../.yarn/cache/@babel-runtime-npm-7.15.3-6333c71362-2f0b8d2d4e.zip/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js", "../../../.yarn/cache/@babel-runtime-npm-7.15.3-6333c71362-2f0b8d2d4e.zip/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js", "../../slate-react/src/utils/key.ts", "../../slate-react/src/utils/weak-maps.ts", "../../slate-react/src/utils/dom.ts", "../../slate-react/src/utils/environment.ts", "../../slate-react/src/plugin/react-editor.ts", "../../slate-react/src/utils/range-list.ts", "../../slate-react/src/hooks/use-isomorphic-layout-effect.ts", "../../slate-react/src/components/string.tsx", "../../slate-react/src/hooks/use-slate-static.tsx", "../../slate-react/src/components/leaf.tsx", "../../slate-react/src/components/text.tsx", "../../slate-react/src/components/element.tsx", "../../slate-react/src/hooks/use-decorate.ts", "../../slate-react/src/hooks/use-selected.ts", "../../slate-react/src/hooks/use-children.tsx", "../../slate-react/src/hooks/use-read-only.ts", "../../slate-react/src/hooks/use-slate.tsx", "../../slate-react/src/utils/constants.ts", "../../slate-react/src/utils/hotkeys.ts", "../../slate-react/src/components/restore-dom/restore-dom-manager.ts", "../../slate-react/src/components/restore-dom/restore-dom.tsx", "../../slate-react/src/utils/diff-text.ts", "../../slate-react/src/hooks/android-input-manager/android-input-manager.ts", "../../slate-react/src/hooks/use-is-mounted.tsx", "../../slate-react/src/hooks/use-mutation-observer.ts", "../../slate-react/src/hooks/android-input-manager/use-android-input-manager.ts", "../../slate-react/src/hooks/use-track-user-input.ts", "../../slate-react/src/components/editable.tsx", "../../slate-react/src/hooks/use-focused.ts", "../../slate-react/src/hooks/use-slate-selector.tsx", "../../slate-react/src/components/slate.tsx", "../../slate-react/src/hooks/use-editor.tsx", "../../slate-react/src/hooks/use-slate-selection.tsx", "../../slate-react/src/utils/lines.ts", "../../slate-react/src/plugin/with-react.ts"],
  "sourcesContent": ["'use strict'\n\nmodule.exports = direction\n\nvar RTL = '\\u0591-\\u07FF\\uFB1D-\\uFDFD\\uFE70-\\uFEFC'\nvar LTR =\n  'A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6' +\n  '\\u00F8-\\u02B8\\u0300-\\u0590\\u0800-\\u1FFF\\u200E\\u2C00-\\uFB1C' +\n  '\\uFE00-\\uFE6F\\uFEFD-\\uFFFF'\n\nvar rtl = new RegExp('^[^' + LTR + ']*[' + RTL + ']')\nvar ltr = new RegExp('^[^' + RTL + ']*[' + LTR + ']')\n\nfunction direction(value) {\n  value = String(value || '')\n\n  if (rtl.test(value)) {\n    return 'rtl'\n  }\n\n  if (ltr.test(value)) {\n    return 'ltr'\n  }\n\n  return 'neutral'\n}\n", "/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n", "/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n", "var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n", "var root = require('./_root');\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nmodule.exports = now;\n", "/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n", "var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n", "var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n", "var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n", "/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n", "var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n", "/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n", "var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n", "var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n", "var isObject = require('./isObject'),\n    now = require('./now'),\n    toNumber = require('./toNumber');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nmodule.exports = debounce;\n", "var debounce = require('./debounce'),\n    isObject = require('./isObject');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\nmodule.exports = throttle;\n", "'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\n/**\n * Constants.\n */\n\nvar IS_MAC = typeof window != 'undefined' && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);\n\nvar MODIFIERS = {\n  alt: 'altKey',\n  control: 'ctrlKey',\n  meta: 'metaKey',\n  shift: 'shiftKey'\n};\n\nvar ALIASES = {\n  add: '+',\n  break: 'pause',\n  cmd: 'meta',\n  command: 'meta',\n  ctl: 'control',\n  ctrl: 'control',\n  del: 'delete',\n  down: 'arrowdown',\n  esc: 'escape',\n  ins: 'insert',\n  left: 'arrowleft',\n  mod: IS_MAC ? 'meta' : 'control',\n  opt: 'alt',\n  option: 'alt',\n  return: 'enter',\n  right: 'arrowright',\n  space: ' ',\n  spacebar: ' ',\n  up: 'arrowup',\n  win: 'meta',\n  windows: 'meta'\n};\n\nvar CODES = {\n  backspace: 8,\n  tab: 9,\n  enter: 13,\n  shift: 16,\n  control: 17,\n  alt: 18,\n  pause: 19,\n  capslock: 20,\n  escape: 27,\n  ' ': 32,\n  pageup: 33,\n  pagedown: 34,\n  end: 35,\n  home: 36,\n  arrowleft: 37,\n  arrowup: 38,\n  arrowright: 39,\n  arrowdown: 40,\n  insert: 45,\n  delete: 46,\n  meta: 91,\n  numlock: 144,\n  scrolllock: 145,\n  ';': 186,\n  '=': 187,\n  ',': 188,\n  '-': 189,\n  '.': 190,\n  '/': 191,\n  '`': 192,\n  '[': 219,\n  '\\\\': 220,\n  ']': 221,\n  '\\'': 222\n};\n\nfor (var f = 1; f < 20; f++) {\n  CODES['f' + f] = 111 + f;\n}\n\n/**\n * Is hotkey?\n */\n\nfunction isHotkey(hotkey, options, event) {\n  if (options && !('byKey' in options)) {\n    event = options;\n    options = null;\n  }\n\n  if (!Array.isArray(hotkey)) {\n    hotkey = [hotkey];\n  }\n\n  var array = hotkey.map(function (string) {\n    return parseHotkey(string, options);\n  });\n  var check = function check(e) {\n    return array.some(function (object) {\n      return compareHotkey(object, e);\n    });\n  };\n  var ret = event == null ? check : check(event);\n  return ret;\n}\n\nfunction isCodeHotkey(hotkey, event) {\n  return isHotkey(hotkey, event);\n}\n\nfunction isKeyHotkey(hotkey, event) {\n  return isHotkey(hotkey, { byKey: true }, event);\n}\n\n/**\n * Parse.\n */\n\nfunction parseHotkey(hotkey, options) {\n  var byKey = options && options.byKey;\n  var ret = {};\n\n  // Special case to handle the `+` key since we use it as a separator.\n  hotkey = hotkey.replace('++', '+add');\n  var values = hotkey.split('+');\n  var length = values.length;\n\n  // Ensure that all the modifiers are set to false unless the hotkey has them.\n\n  for (var k in MODIFIERS) {\n    ret[MODIFIERS[k]] = false;\n  }\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = values[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var value = _step.value;\n\n      var optional = value.endsWith('?') && value.length > 1;\n\n      if (optional) {\n        value = value.slice(0, -1);\n      }\n\n      var name = toKeyName(value);\n      var modifier = MODIFIERS[name];\n\n      if (length === 1 || !modifier) {\n        if (byKey) {\n          ret.key = name;\n        } else {\n          ret.which = toKeyCode(value);\n        }\n      }\n\n      if (modifier) {\n        ret[modifier] = optional ? null : true;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return ret;\n}\n\n/**\n * Compare.\n */\n\nfunction compareHotkey(object, event) {\n  for (var key in object) {\n    var expected = object[key];\n    var actual = void 0;\n\n    if (expected == null) {\n      continue;\n    }\n\n    if (key === 'key' && event.key != null) {\n      actual = event.key.toLowerCase();\n    } else if (key === 'which') {\n      actual = expected === 91 && event.which === 93 ? 91 : event.which;\n    } else {\n      actual = event[key];\n    }\n\n    if (actual == null && expected === false) {\n      continue;\n    }\n\n    if (actual !== expected) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Utils.\n */\n\nfunction toKeyCode(name) {\n  name = toKeyName(name);\n  var code = CODES[name] || name.toUpperCase().charCodeAt(0);\n  return code;\n}\n\nfunction toKeyName(name) {\n  name = name.toLowerCase();\n  name = ALIASES[name] || name;\n  return name;\n}\n\n/**\n * Export.\n */\n\nexports.default = isHotkey;\nexports.isHotkey = isHotkey;\nexports.isCodeHotkey = isCodeHotkey;\nexports.isKeyHotkey = isKeyHotkey;\nexports.parseHotkey = parseHotkey;\nexports.compareHotkey = compareHotkey;\nexports.toKeyCode = toKeyCode;\nexports.toKeyName = toKeyName;", "// Compute what scrolling needs to be done on required scrolling boxes for target to be in view\n\n// The type names here are named after the spec to make it easier to find more information around what they mean:\n// To reduce churn and reduce things that need be maintained things from the official TS DOM library is used here\n// https://drafts.csswg.org/cssom-view/\n\n// For a definition on what is \"block flow direction\" exactly, check this: https://drafts.csswg.org/css-writing-modes-4/#block-flow-direction\n\n// add support for visualViewport object currently implemented in chrome\ninterface visualViewport {\n  height: number\n  width: number\n}\n\ntype ScrollLogicalPosition = 'start' | 'center' | 'end' | 'nearest'\n// This new option is tracked in this PR, which is the most likely candidate at the time: https://github.com/w3c/csswg-drafts/pull/1805\ntype ScrollMode = 'always' | 'if-needed'\n// New option that skips auto-scrolling all nodes with overflow: hidden set\n// See FF implementation: https://hg.mozilla.org/integration/fx-team/rev/c48c3ec05012#l7.18\ntype SkipOverflowHiddenElements = boolean\n\ninterface Options {\n  block?: ScrollLogicalPosition\n  inline?: ScrollLogicalPosition\n  scrollMode?: ScrollMode\n  boundary?: CustomScrollBoundary\n  skipOverflowHiddenElements?: SkipOverflowHiddenElements\n}\n\n// Custom behavior, not in any spec\ntype CustomScrollBoundaryCallback = (parent: Element) => boolean\ntype CustomScrollBoundary = Element | CustomScrollBoundaryCallback | null\ninterface CustomScrollAction {\n  el: Element\n  top: number\n  left: number\n}\n\n// @TODO better shadowdom test, 11 = document fragment\nfunction isElement(el: any): el is Element {\n  return typeof el === 'object' && el != null && el.nodeType === 1\n}\n\nfunction canOverflow(\n  overflow: string | null,\n  skipOverflowHiddenElements?: boolean\n) {\n  if (skipOverflowHiddenElements && overflow === 'hidden') {\n    return false\n  }\n\n  return overflow !== 'visible' && overflow !== 'clip'\n}\n\nfunction getFrameElement(el: Element) {\n  if (!el.ownerDocument || !el.ownerDocument.defaultView) {\n    return null\n  }\n\n  try {\n    return el.ownerDocument.defaultView.frameElement\n  } catch (e) {\n    return null\n  }\n}\n\nfunction isHiddenByFrame(el: Element): boolean {\n  const frame = getFrameElement(el)\n  if (!frame) {\n    return false\n  }\n\n  return (\n    frame.clientHeight < el.scrollHeight || frame.clientWidth < el.scrollWidth\n  )\n}\n\nfunction isScrollable(el: Element, skipOverflowHiddenElements?: boolean) {\n  if (el.clientHeight < el.scrollHeight || el.clientWidth < el.scrollWidth) {\n    const style = getComputedStyle(el, null)\n    return (\n      canOverflow(style.overflowY, skipOverflowHiddenElements) ||\n      canOverflow(style.overflowX, skipOverflowHiddenElements) ||\n      isHiddenByFrame(el)\n    )\n  }\n\n  return false\n}\n/**\n * Find out which edge to align against when logical scroll position is \"nearest\"\n * Interesting fact: \"nearest\" works similarily to \"if-needed\", if the element is fully visible it will not scroll it\n *\n * Legends:\n * ┌────────┐ ┏ ━ ━ ━ ┓\n * │ target │   frame\n * └────────┘ ┗ ━ ━ ━ ┛\n */\nfunction alignNearest(\n  scrollingEdgeStart: number,\n  scrollingEdgeEnd: number,\n  scrollingSize: number,\n  scrollingBorderStart: number,\n  scrollingBorderEnd: number,\n  elementEdgeStart: number,\n  elementEdgeEnd: number,\n  elementSize: number\n) {\n  /**\n   * If element edge A and element edge B are both outside scrolling box edge A and scrolling box edge B\n   *\n   *          ┌──┐\n   *        ┏━│━━│━┓\n   *          │  │\n   *        ┃ │  │ ┃        do nothing\n   *          │  │\n   *        ┗━│━━│━┛\n   *          └──┘\n   *\n   *  If element edge C and element edge D are both outside scrolling box edge C and scrolling box edge D\n   *\n   *    ┏ ━ ━ ━ ━ ┓\n   *   ┌───────────┐\n   *   │┃         ┃│        do nothing\n   *   └───────────┘\n   *    ┗ ━ ━ ━ ━ ┛\n   */\n  if (\n    (elementEdgeStart < scrollingEdgeStart &&\n      elementEdgeEnd > scrollingEdgeEnd) ||\n    (elementEdgeStart > scrollingEdgeStart && elementEdgeEnd < scrollingEdgeEnd)\n  ) {\n    return 0\n  }\n\n  /**\n   * If element edge A is outside scrolling box edge A and element height is less than scrolling box height\n   *\n   *          ┌──┐\n   *        ┏━│━━│━┓         ┏━┌━━┐━┓\n   *          └──┘             │  │\n   *  from  ┃      ┃     to  ┃ └──┘ ┃\n   *\n   *        ┗━ ━━ ━┛         ┗━ ━━ ━┛\n   *\n   * If element edge B is outside scrolling box edge B and element height is greater than scrolling box height\n   *\n   *        ┏━ ━━ ━┓         ┏━┌━━┐━┓\n   *                           │  │\n   *  from  ┃ ┌──┐ ┃     to  ┃ │  │ ┃\n   *          │  │             │  │\n   *        ┗━│━━│━┛         ┗━│━━│━┛\n   *          │  │             └──┘\n   *          │  │\n   *          └──┘\n   *\n   * If element edge C is outside scrolling box edge C and element width is less than scrolling box width\n   *\n   *       from                 to\n   *    ┏ ━ ━ ━ ━ ┓         ┏ ━ ━ ━ ━ ┓\n   *  ┌───┐                 ┌───┐\n   *  │ ┃ │       ┃         ┃   │     ┃\n   *  └───┘                 └───┘\n   *    ┗ ━ ━ ━ ━ ┛         ┗ ━ ━ ━ ━ ┛\n   *\n   * If element edge D is outside scrolling box edge D and element width is greater than scrolling box width\n   *\n   *       from                 to\n   *    ┏ ━ ━ ━ ━ ┓         ┏ ━ ━ ━ ━ ┓\n   *        ┌───────────┐   ┌───────────┐\n   *    ┃   │     ┃     │   ┃         ┃ │\n   *        └───────────┘   └───────────┘\n   *    ┗ ━ ━ ━ ━ ┛         ┗ ━ ━ ━ ━ ┛\n   */\n  if (\n    (elementEdgeStart <= scrollingEdgeStart && elementSize <= scrollingSize) ||\n    (elementEdgeEnd >= scrollingEdgeEnd && elementSize >= scrollingSize)\n  ) {\n    return elementEdgeStart - scrollingEdgeStart - scrollingBorderStart\n  }\n\n  /**\n   * If element edge B is outside scrolling box edge B and element height is less than scrolling box height\n   *\n   *        ┏━ ━━ ━┓         ┏━ ━━ ━┓\n   *\n   *  from  ┃      ┃     to  ┃ ┌──┐ ┃\n   *          ┌──┐             │  │\n   *        ┗━│━━│━┛         ┗━└━━┘━┛\n   *          └──┘\n   *\n   * If element edge A is outside scrolling box edge A and element height is greater than scrolling box height\n   *\n   *          ┌──┐\n   *          │  │\n   *          │  │             ┌──┐\n   *        ┏━│━━│━┓         ┏━│━━│━┓\n   *          │  │             │  │\n   *  from  ┃ └──┘ ┃     to  ┃ │  │ ┃\n   *                           │  │\n   *        ┗━ ━━ ━┛         ┗━└━━┘━┛\n   *\n   * If element edge C is outside scrolling box edge C and element width is greater than scrolling box width\n   *\n   *           from                 to\n   *        ┏ ━ ━ ━ ━ ┓         ┏ ━ ━ ━ ━ ┓\n   *  ┌───────────┐           ┌───────────┐\n   *  │     ┃     │   ┃       │ ┃         ┃\n   *  └───────────┘           └───────────┘\n   *        ┗ ━ ━ ━ ━ ┛         ┗ ━ ━ ━ ━ ┛\n   *\n   * If element edge D is outside scrolling box edge D and element width is less than scrolling box width\n   *\n   *           from                 to\n   *        ┏ ━ ━ ━ ━ ┓         ┏ ━ ━ ━ ━ ┓\n   *                ┌───┐             ┌───┐\n   *        ┃       │ ┃ │       ┃     │   ┃\n   *                └───┘             └───┘\n   *        ┗ ━ ━ ━ ━ ┛         ┗ ━ ━ ━ ━ ┛\n   *\n   */\n  if (\n    (elementEdgeEnd > scrollingEdgeEnd && elementSize < scrollingSize) ||\n    (elementEdgeStart < scrollingEdgeStart && elementSize > scrollingSize)\n  ) {\n    return elementEdgeEnd - scrollingEdgeEnd + scrollingBorderEnd\n  }\n\n  return 0\n}\n\nfunction getParentElement(element: Node): Element | null {\n  const parent = element.parentElement\n  if (parent == null) {\n    return (element.getRootNode() as ShadowRoot).host || null\n  }\n  return parent\n}\n\nexport default (target: Element, options: Options): CustomScrollAction[] => {\n  //TODO: remove this hack when microbundle will support typescript >= 4.0\n  const windowWithViewport = window as unknown as Window & {\n    visualViewport: visualViewport\n  }\n\n  const { scrollMode, block, inline, boundary, skipOverflowHiddenElements } =\n    options\n  // Allow using a callback to check the boundary\n  // The default behavior is to check if the current target matches the boundary element or not\n  // If undefined it'll check that target is never undefined (can happen as we recurse up the tree)\n  const checkBoundary =\n    typeof boundary === 'function' ? boundary : (node: any) => node !== boundary\n\n  if (!isElement(target)) {\n    throw new TypeError('Invalid target')\n  }\n\n  // Used to handle the top most element that can be scrolled\n  const scrollingElement = document.scrollingElement || document.documentElement\n\n  // Collect all the scrolling boxes, as defined in the spec: https://drafts.csswg.org/cssom-view/#scrolling-box\n  const frames: Element[] = []\n  let cursor: Element | null = target\n  while (isElement(cursor) && checkBoundary(cursor)) {\n    // Move cursor to parent\n    cursor = getParentElement(cursor)\n\n    // Stop when we reach the viewport\n    if (cursor === scrollingElement) {\n      frames.push(cursor)\n      break\n    }\n\n    // Skip document.body if it's not the scrollingElement and documentElement isn't independently scrollable\n    if (\n      cursor != null &&\n      cursor === document.body &&\n      isScrollable(cursor) &&\n      !isScrollable(document.documentElement)\n    ) {\n      continue\n    }\n\n    // Now we check if the element is scrollable, this code only runs if the loop haven't already hit the viewport or a custom boundary\n    if (cursor != null && isScrollable(cursor, skipOverflowHiddenElements)) {\n      frames.push(cursor)\n    }\n  }\n\n  // Support pinch-zooming properly, making sure elements scroll into the visual viewport\n  // Browsers that don't support visualViewport will report the layout viewport dimensions on document.documentElement.clientWidth/Height\n  // and viewport dimensions on window.innerWidth/Height\n  // https://www.quirksmode.org/mobile/viewports2.html\n  // https://bokand.github.io/viewport/index.html\n  const viewportWidth = windowWithViewport.visualViewport\n    ? windowWithViewport.visualViewport.width\n    : innerWidth\n  const viewportHeight = windowWithViewport.visualViewport\n    ? windowWithViewport.visualViewport.height\n    : innerHeight\n\n  // Newer browsers supports scroll[X|Y], page[X|Y]Offset is\n  const viewportX = window.scrollX || pageXOffset\n  const viewportY = window.scrollY || pageYOffset\n\n  const {\n    height: targetHeight,\n    width: targetWidth,\n    top: targetTop,\n    right: targetRight,\n    bottom: targetBottom,\n    left: targetLeft,\n  } = target.getBoundingClientRect()\n\n  // These values mutate as we loop through and generate scroll coordinates\n  let targetBlock: number =\n    block === 'start' || block === 'nearest'\n      ? targetTop\n      : block === 'end'\n      ? targetBottom\n      : targetTop + targetHeight / 2 // block === 'center\n  let targetInline: number =\n    inline === 'center'\n      ? targetLeft + targetWidth / 2\n      : inline === 'end'\n      ? targetRight\n      : targetLeft // inline === 'start || inline === 'nearest\n\n  // Collect new scroll positions\n  const computations: CustomScrollAction[] = []\n  // In chrome there's no longer a difference between caching the `frames.length` to a var or not, so we don't in this case (size > speed anyways)\n  for (let index = 0; index < frames.length; index++) {\n    const frame = frames[index]\n\n    // @TODO add a shouldScroll hook here that allows userland code to take control\n\n    const { height, width, top, right, bottom, left } =\n      frame.getBoundingClientRect()\n\n    // If the element is already visible we can end it here\n    // @TODO targetBlock and targetInline should be taken into account to be compliant with https://github.com/w3c/csswg-drafts/pull/1805/files#diff-3c17f0e43c20f8ecf89419d49e7ef5e0R1333\n    if (\n      scrollMode === 'if-needed' &&\n      targetTop >= 0 &&\n      targetLeft >= 0 &&\n      targetBottom <= viewportHeight &&\n      targetRight <= viewportWidth &&\n      targetTop >= top &&\n      targetBottom <= bottom &&\n      targetLeft >= left &&\n      targetRight <= right\n    ) {\n      // Break the loop and return the computations for things that are not fully visible\n      return computations\n    }\n\n    const frameStyle = getComputedStyle(frame)\n    const borderLeft = parseInt(frameStyle.borderLeftWidth as string, 10)\n    const borderTop = parseInt(frameStyle.borderTopWidth as string, 10)\n    const borderRight = parseInt(frameStyle.borderRightWidth as string, 10)\n    const borderBottom = parseInt(frameStyle.borderBottomWidth as string, 10)\n\n    let blockScroll: number = 0\n    let inlineScroll: number = 0\n\n    // The property existance checks for offfset[Width|Height] is because only HTMLElement objects have them, but any Element might pass by here\n    // @TODO find out if the \"as HTMLElement\" overrides can be dropped\n    const scrollbarWidth =\n      'offsetWidth' in frame\n        ? (frame as HTMLElement).offsetWidth -\n          (frame as HTMLElement).clientWidth -\n          borderLeft -\n          borderRight\n        : 0\n    const scrollbarHeight =\n      'offsetHeight' in frame\n        ? (frame as HTMLElement).offsetHeight -\n          (frame as HTMLElement).clientHeight -\n          borderTop -\n          borderBottom\n        : 0\n\n    const scaleX =\n      'offsetWidth' in frame\n        ? (frame as HTMLElement).offsetWidth === 0\n          ? 0\n          : width / (frame as HTMLElement).offsetWidth\n        : 0\n    const scaleY =\n      'offsetHeight' in frame\n        ? (frame as HTMLElement).offsetHeight === 0\n          ? 0\n          : height / (frame as HTMLElement).offsetHeight\n        : 0\n\n    if (scrollingElement === frame) {\n      // Handle viewport logic (document.documentElement or document.body)\n\n      if (block === 'start') {\n        blockScroll = targetBlock\n      } else if (block === 'end') {\n        blockScroll = targetBlock - viewportHeight\n      } else if (block === 'nearest') {\n        blockScroll = alignNearest(\n          viewportY,\n          viewportY + viewportHeight,\n          viewportHeight,\n          borderTop,\n          borderBottom,\n          viewportY + targetBlock,\n          viewportY + targetBlock + targetHeight,\n          targetHeight\n        )\n      } else {\n        // block === 'center' is the default\n        blockScroll = targetBlock - viewportHeight / 2\n      }\n\n      if (inline === 'start') {\n        inlineScroll = targetInline\n      } else if (inline === 'center') {\n        inlineScroll = targetInline - viewportWidth / 2\n      } else if (inline === 'end') {\n        inlineScroll = targetInline - viewportWidth\n      } else {\n        // inline === 'nearest' is the default\n        inlineScroll = alignNearest(\n          viewportX,\n          viewportX + viewportWidth,\n          viewportWidth,\n          borderLeft,\n          borderRight,\n          viewportX + targetInline,\n          viewportX + targetInline + targetWidth,\n          targetWidth\n        )\n      }\n\n      // Apply scroll position offsets and ensure they are within bounds\n      // @TODO add more test cases to cover this 100%\n      blockScroll = Math.max(0, blockScroll + viewportY)\n      inlineScroll = Math.max(0, inlineScroll + viewportX)\n    } else {\n      // Handle each scrolling frame that might exist between the target and the viewport\n\n      if (block === 'start') {\n        blockScroll = targetBlock - top - borderTop\n      } else if (block === 'end') {\n        blockScroll = targetBlock - bottom + borderBottom + scrollbarHeight\n      } else if (block === 'nearest') {\n        blockScroll = alignNearest(\n          top,\n          bottom,\n          height,\n          borderTop,\n          borderBottom + scrollbarHeight,\n          targetBlock,\n          targetBlock + targetHeight,\n          targetHeight\n        )\n      } else {\n        // block === 'center' is the default\n        blockScroll = targetBlock - (top + height / 2) + scrollbarHeight / 2\n      }\n\n      if (inline === 'start') {\n        inlineScroll = targetInline - left - borderLeft\n      } else if (inline === 'center') {\n        inlineScroll = targetInline - (left + width / 2) + scrollbarWidth / 2\n      } else if (inline === 'end') {\n        inlineScroll = targetInline - right + borderRight + scrollbarWidth\n      } else {\n        // inline === 'nearest' is the default\n        inlineScroll = alignNearest(\n          left,\n          right,\n          width,\n          borderLeft,\n          borderRight + scrollbarWidth,\n          targetInline,\n          targetInline + targetWidth,\n          targetWidth\n        )\n      }\n\n      const { scrollLeft, scrollTop } = frame\n      // Ensure scroll coordinates are not out of bounds while applying scroll offsets\n      blockScroll = Math.max(\n        0,\n        Math.min(\n          scrollTop + blockScroll / scaleY,\n          frame.scrollHeight - height / scaleY + scrollbarHeight\n        )\n      )\n      inlineScroll = Math.max(\n        0,\n        Math.min(\n          scrollLeft + inlineScroll / scaleX,\n          frame.scrollWidth - width / scaleX + scrollbarWidth\n        )\n      )\n\n      // Cache the offset so that parent frames can scroll this into view correctly\n      targetBlock += scrollTop - blockScroll\n      targetInline += scrollLeft - inlineScroll\n    }\n\n    computations.push({ el: frame, top: blockScroll, left: inlineScroll })\n  }\n\n  return computations\n}\n", "import compute from 'compute-scroll-into-view';\nfunction isOptionsObject(options) {\n  return options === Object(options) && Object.keys(options).length !== 0;\n}\nfunction defaultBehavior(actions, behavior) {\n  if (behavior === void 0) {\n    behavior = 'auto';\n  }\n  var canSmoothScroll = ('scrollBehavior' in document.body.style);\n  actions.forEach(function (_ref) {\n    var el = _ref.el,\n      top = _ref.top,\n      left = _ref.left;\n    if (el.scroll && canSmoothScroll) {\n      el.scroll({\n        top: top,\n        left: left,\n        behavior: behavior\n      });\n    } else {\n      el.scrollTop = top;\n      el.scrollLeft = left;\n    }\n  });\n}\nfunction getOptions(options) {\n  if (options === false) {\n    return {\n      block: 'end',\n      inline: 'nearest'\n    };\n  }\n  if (isOptionsObject(options)) {\n    return options;\n  }\n  return {\n    block: 'start',\n    inline: 'nearest'\n  };\n}\nfunction scrollIntoView(target, options) {\n  var isTargetAttached = target.isConnected || target.ownerDocument.documentElement.contains(target);\n  if (isOptionsObject(options) && typeof options.behavior === 'function') {\n    return options.behavior(isTargetAttached ? compute(target, options) : []);\n  }\n  if (!isTargetAttached) {\n    return;\n  }\n  var computeOptions = getOptions(options);\n  return defaultBehavior(compute(target, computeOptions), computeOptions.behavior);\n}\nexport default scrollIntoView;", "var resizeObservers = [];\nexport { resizeObservers };\n", "import { resizeObservers } from '../utils/resizeObservers';\nvar hasActiveObservations = function () {\n    return resizeObservers.some(function (ro) { return ro.activeTargets.length > 0; });\n};\nexport { hasActiveObservations };\n", "import { resizeObservers } from '../utils/resizeObservers';\nvar hasSkippedObservations = function () {\n    return resizeObservers.some(function (ro) { return ro.skippedTargets.length > 0; });\n};\nexport { hasSkippedObservations };\n", "var msg = 'ResizeObserver loop completed with undelivered notifications.';\nvar deliverResizeLoopError = function () {\n    var event;\n    if (typeof ErrorEvent === 'function') {\n        event = new ErrorEvent('error', {\n            message: msg\n        });\n    }\n    else {\n        event = document.createEvent('Event');\n        event.initEvent('error', false, false);\n        event.message = msg;\n    }\n    window.dispatchEvent(event);\n};\nexport { deliverResizeLoopError };\n", "var ResizeObserverBoxOptions;\n(function (ResizeObserverBoxOptions) {\n    ResizeObserverBoxOptions[\"BORDER_BOX\"] = \"border-box\";\n    ResizeObserverBoxOptions[\"CONTENT_BOX\"] = \"content-box\";\n    ResizeObserverBoxOptions[\"DEVICE_PIXEL_CONTENT_BOX\"] = \"device-pixel-content-box\";\n})(ResizeObserverBoxOptions || (ResizeObserverBoxOptions = {}));\nexport { ResizeObserverBoxOptions };\n", "export var freeze = function (obj) { return Object.freeze(obj); };\n", "import { freeze } from './utils/freeze';\nvar ResizeObserverSize = (function () {\n    function ResizeObserverSize(inlineSize, blockSize) {\n        this.inlineSize = inlineSize;\n        this.blockSize = blockSize;\n        freeze(this);\n    }\n    return ResizeObserverSize;\n}());\nexport { ResizeObserverSize };\n", "import { freeze } from './utils/freeze';\nvar DOMRectReadOnly = (function () {\n    function DOMRectReadOnly(x, y, width, height) {\n        this.x = x;\n        this.y = y;\n        this.width = width;\n        this.height = height;\n        this.top = this.y;\n        this.left = this.x;\n        this.bottom = this.top + this.height;\n        this.right = this.left + this.width;\n        return freeze(this);\n    }\n    DOMRectReadOnly.prototype.toJSON = function () {\n        var _a = this, x = _a.x, y = _a.y, top = _a.top, right = _a.right, bottom = _a.bottom, left = _a.left, width = _a.width, height = _a.height;\n        return { x: x, y: y, top: top, right: right, bottom: bottom, left: left, width: width, height: height };\n    };\n    DOMRectReadOnly.fromRect = function (rectangle) {\n        return new DOMRectReadOnly(rectangle.x, rectangle.y, rectangle.width, rectangle.height);\n    };\n    return DOMRectReadOnly;\n}());\nexport { DOMRectReadOnly };\n", "var isSVG = function (target) { return target instanceof SVGElement && 'getBBox' in target; };\nvar isHidden = function (target) {\n    if (isSVG(target)) {\n        var _a = target.getBBox(), width = _a.width, height = _a.height;\n        return !width && !height;\n    }\n    var _b = target, offsetWidth = _b.offsetWidth, offsetHeight = _b.offsetHeight;\n    return !(offsetWidth || offsetHeight || target.getClientRects().length);\n};\nvar isElement = function (obj) {\n    var _a;\n    if (obj instanceof Element) {\n        return true;\n    }\n    var scope = (_a = obj === null || obj === void 0 ? void 0 : obj.ownerDocument) === null || _a === void 0 ? void 0 : _a.defaultView;\n    return !!(scope && obj instanceof scope.Element);\n};\nvar isReplacedElement = function (target) {\n    switch (target.tagName) {\n        case 'INPUT':\n            if (target.type !== 'image') {\n                break;\n            }\n        case 'VIDEO':\n        case 'AUDIO':\n        case 'EMBED':\n        case 'OBJECT':\n        case 'CANVAS':\n        case 'IFRAME':\n        case 'IMG':\n            return true;\n    }\n    return false;\n};\nexport { isSVG, isHidden, isElement, isReplacedElement };\n", "export var global = typeof window !== 'undefined' ? window : {};\n", "import { ResizeObserverBoxOptions } from '../ResizeObserverBoxOptions';\nimport { ResizeObserverSize } from '../ResizeObserverSize';\nimport { DOMRectReadOnly } from '../DOMRectReadOnly';\nimport { isSVG, isHidden } from '../utils/element';\nimport { freeze } from '../utils/freeze';\nimport { global } from '../utils/global';\nvar cache = new WeakMap();\nvar scrollRegexp = /auto|scroll/;\nvar verticalRegexp = /^tb|vertical/;\nvar IE = (/msie|trident/i).test(global.navigator && global.navigator.userAgent);\nvar parseDimension = function (pixel) { return parseFloat(pixel || '0'); };\nvar size = function (inlineSize, blockSize, switchSizes) {\n    if (inlineSize === void 0) { inlineSize = 0; }\n    if (blockSize === void 0) { blockSize = 0; }\n    if (switchSizes === void 0) { switchSizes = false; }\n    return new ResizeObserverSize((switchSizes ? blockSize : inlineSize) || 0, (switchSizes ? inlineSize : blockSize) || 0);\n};\nvar zeroBoxes = freeze({\n    devicePixelContentBoxSize: size(),\n    borderBoxSize: size(),\n    contentBoxSize: size(),\n    contentRect: new DOMRectReadOnly(0, 0, 0, 0)\n});\nvar calculateBoxSizes = function (target, forceRecalculation) {\n    if (forceRecalculation === void 0) { forceRecalculation = false; }\n    if (cache.has(target) && !forceRecalculation) {\n        return cache.get(target);\n    }\n    if (isHidden(target)) {\n        cache.set(target, zeroBoxes);\n        return zeroBoxes;\n    }\n    var cs = getComputedStyle(target);\n    var svg = isSVG(target) && target.ownerSVGElement && target.getBBox();\n    var removePadding = !IE && cs.boxSizing === 'border-box';\n    var switchSizes = verticalRegexp.test(cs.writingMode || '');\n    var canScrollVertically = !svg && scrollRegexp.test(cs.overflowY || '');\n    var canScrollHorizontally = !svg && scrollRegexp.test(cs.overflowX || '');\n    var paddingTop = svg ? 0 : parseDimension(cs.paddingTop);\n    var paddingRight = svg ? 0 : parseDimension(cs.paddingRight);\n    var paddingBottom = svg ? 0 : parseDimension(cs.paddingBottom);\n    var paddingLeft = svg ? 0 : parseDimension(cs.paddingLeft);\n    var borderTop = svg ? 0 : parseDimension(cs.borderTopWidth);\n    var borderRight = svg ? 0 : parseDimension(cs.borderRightWidth);\n    var borderBottom = svg ? 0 : parseDimension(cs.borderBottomWidth);\n    var borderLeft = svg ? 0 : parseDimension(cs.borderLeftWidth);\n    var horizontalPadding = paddingLeft + paddingRight;\n    var verticalPadding = paddingTop + paddingBottom;\n    var horizontalBorderArea = borderLeft + borderRight;\n    var verticalBorderArea = borderTop + borderBottom;\n    var horizontalScrollbarThickness = !canScrollHorizontally ? 0 : target.offsetHeight - verticalBorderArea - target.clientHeight;\n    var verticalScrollbarThickness = !canScrollVertically ? 0 : target.offsetWidth - horizontalBorderArea - target.clientWidth;\n    var widthReduction = removePadding ? horizontalPadding + horizontalBorderArea : 0;\n    var heightReduction = removePadding ? verticalPadding + verticalBorderArea : 0;\n    var contentWidth = svg ? svg.width : parseDimension(cs.width) - widthReduction - verticalScrollbarThickness;\n    var contentHeight = svg ? svg.height : parseDimension(cs.height) - heightReduction - horizontalScrollbarThickness;\n    var borderBoxWidth = contentWidth + horizontalPadding + verticalScrollbarThickness + horizontalBorderArea;\n    var borderBoxHeight = contentHeight + verticalPadding + horizontalScrollbarThickness + verticalBorderArea;\n    var boxes = freeze({\n        devicePixelContentBoxSize: size(Math.round(contentWidth * devicePixelRatio), Math.round(contentHeight * devicePixelRatio), switchSizes),\n        borderBoxSize: size(borderBoxWidth, borderBoxHeight, switchSizes),\n        contentBoxSize: size(contentWidth, contentHeight, switchSizes),\n        contentRect: new DOMRectReadOnly(paddingLeft, paddingTop, contentWidth, contentHeight)\n    });\n    cache.set(target, boxes);\n    return boxes;\n};\nvar calculateBoxSize = function (target, observedBox, forceRecalculation) {\n    var _a = calculateBoxSizes(target, forceRecalculation), borderBoxSize = _a.borderBoxSize, contentBoxSize = _a.contentBoxSize, devicePixelContentBoxSize = _a.devicePixelContentBoxSize;\n    switch (observedBox) {\n        case ResizeObserverBoxOptions.DEVICE_PIXEL_CONTENT_BOX:\n            return devicePixelContentBoxSize;\n        case ResizeObserverBoxOptions.BORDER_BOX:\n            return borderBoxSize;\n        default:\n            return contentBoxSize;\n    }\n};\nexport { calculateBoxSize, calculateBoxSizes };\n", "import { calculateBoxSizes } from './algorithms/calculateBoxSize';\nimport { freeze } from './utils/freeze';\nvar ResizeObserverEntry = (function () {\n    function ResizeObserverEntry(target) {\n        var boxes = calculateBoxSizes(target);\n        this.target = target;\n        this.contentRect = boxes.contentRect;\n        this.borderBoxSize = freeze([boxes.borderBoxSize]);\n        this.contentBoxSize = freeze([boxes.contentBoxSize]);\n        this.devicePixelContentBoxSize = freeze([boxes.devicePixelContentBoxSize]);\n    }\n    return ResizeObserverEntry;\n}());\nexport { ResizeObserverEntry };\n", "import { isHidden } from '../utils/element';\nvar calculateDepthForNode = function (node) {\n    if (isHidden(node)) {\n        return Infinity;\n    }\n    var depth = 0;\n    var parent = node.parentNode;\n    while (parent) {\n        depth += 1;\n        parent = parent.parentNode;\n    }\n    return depth;\n};\nexport { calculateDepthForNode };\n", "import { resizeObservers } from '../utils/resizeObservers';\nimport { ResizeObserverEntry } from '../ResizeObserverEntry';\nimport { calculateDepthForNode } from './calculateDepthForNode';\nimport { calculateBoxSize } from './calculateBoxSize';\nvar broadcastActiveObservations = function () {\n    var shallowestDepth = Infinity;\n    var callbacks = [];\n    resizeObservers.forEach(function processObserver(ro) {\n        if (ro.activeTargets.length === 0) {\n            return;\n        }\n        var entries = [];\n        ro.activeTargets.forEach(function processTarget(ot) {\n            var entry = new ResizeObserverEntry(ot.target);\n            var targetDepth = calculateDepthForNode(ot.target);\n            entries.push(entry);\n            ot.lastReportedSize = calculateBoxSize(ot.target, ot.observedBox);\n            if (targetDepth < shallowestDepth) {\n                shallowestDepth = targetDepth;\n            }\n        });\n        callbacks.push(function resizeObserverCallback() {\n            ro.callback.call(ro.observer, entries, ro.observer);\n        });\n        ro.activeTargets.splice(0, ro.activeTargets.length);\n    });\n    for (var _i = 0, callbacks_1 = callbacks; _i < callbacks_1.length; _i++) {\n        var callback = callbacks_1[_i];\n        callback();\n    }\n    return shallowestDepth;\n};\nexport { broadcastActiveObservations };\n", "import { resizeObservers } from '../utils/resizeObservers';\nimport { calculateDepthForNode } from './calculateDepthForNode';\nvar gatherActiveObservationsAtDepth = function (depth) {\n    resizeObservers.forEach(function processObserver(ro) {\n        ro.activeTargets.splice(0, ro.activeTargets.length);\n        ro.skippedTargets.splice(0, ro.skippedTargets.length);\n        ro.observationTargets.forEach(function processTarget(ot) {\n            if (ot.isActive()) {\n                if (calculateDepthForNode(ot.target) > depth) {\n                    ro.activeTargets.push(ot);\n                }\n                else {\n                    ro.skippedTargets.push(ot);\n                }\n            }\n        });\n    });\n};\nexport { gatherActiveObservationsAtDepth };\n", "import { hasActiveObservations } from '../algorithms/hasActiveObservations';\nimport { hasSkippedObservations } from '../algorithms/hasSkippedObservations';\nimport { deliverResizeLoopError } from '../algorithms/deliverResizeLoopError';\nimport { broadcastActiveObservations } from '../algorithms/broadcastActiveObservations';\nimport { gatherActiveObservationsAtDepth } from '../algorithms/gatherActiveObservationsAtDepth';\nvar process = function () {\n    var depth = 0;\n    gatherActiveObservationsAtDepth(depth);\n    while (hasActiveObservations()) {\n        depth = broadcastActiveObservations();\n        gatherActiveObservationsAtDepth(depth);\n    }\n    if (hasSkippedObservations()) {\n        deliverResizeLoopError();\n    }\n    return depth > 0;\n};\nexport { process };\n", "var trigger;\nvar callbacks = [];\nvar notify = function () { return callbacks.splice(0).forEach(function (cb) { return cb(); }); };\nvar queueMicroTask = function (callback) {\n    if (!trigger) {\n        var toggle_1 = 0;\n        var el_1 = document.createTextNode('');\n        var config = { characterData: true };\n        new MutationObserver(function () { return notify(); }).observe(el_1, config);\n        trigger = function () { el_1.textContent = \"\".concat(toggle_1 ? toggle_1-- : toggle_1++); };\n    }\n    callbacks.push(callback);\n    trigger();\n};\nexport { queueMicroTask };\n", "import { queueMicroTask } from './queueMicroTask';\nvar queueResizeObserver = function (cb) {\n    queueMicroTask(function ResizeObserver() {\n        requestAnimationFrame(cb);\n    });\n};\nexport { queueResizeObserver };\n", "import { process } from './process';\nimport { global } from './global';\nimport { queueResizeObserver } from './queueResizeObserver';\nvar watching = 0;\nvar isWatching = function () { return !!watching; };\nvar CATCH_PERIOD = 250;\nvar observerConfig = { attributes: true, characterData: true, childList: true, subtree: true };\nvar events = [\n    'resize',\n    'load',\n    'transitionend',\n    'animationend',\n    'animationstart',\n    'animationiteration',\n    'keyup',\n    'keydown',\n    'mouseup',\n    'mousedown',\n    'mouseover',\n    'mouseout',\n    'blur',\n    'focus'\n];\nvar time = function (timeout) {\n    if (timeout === void 0) { timeout = 0; }\n    return Date.now() + timeout;\n};\nvar scheduled = false;\nvar Scheduler = (function () {\n    function Scheduler() {\n        var _this = this;\n        this.stopped = true;\n        this.listener = function () { return _this.schedule(); };\n    }\n    Scheduler.prototype.run = function (timeout) {\n        var _this = this;\n        if (timeout === void 0) { timeout = CATCH_PERIOD; }\n        if (scheduled) {\n            return;\n        }\n        scheduled = true;\n        var until = time(timeout);\n        queueResizeObserver(function () {\n            var elementsHaveResized = false;\n            try {\n                elementsHaveResized = process();\n            }\n            finally {\n                scheduled = false;\n                timeout = until - time();\n                if (!isWatching()) {\n                    return;\n                }\n                if (elementsHaveResized) {\n                    _this.run(1000);\n                }\n                else if (timeout > 0) {\n                    _this.run(timeout);\n                }\n                else {\n                    _this.start();\n                }\n            }\n        });\n    };\n    Scheduler.prototype.schedule = function () {\n        this.stop();\n        this.run();\n    };\n    Scheduler.prototype.observe = function () {\n        var _this = this;\n        var cb = function () { return _this.observer && _this.observer.observe(document.body, observerConfig); };\n        document.body ? cb() : global.addEventListener('DOMContentLoaded', cb);\n    };\n    Scheduler.prototype.start = function () {\n        var _this = this;\n        if (this.stopped) {\n            this.stopped = false;\n            this.observer = new MutationObserver(this.listener);\n            this.observe();\n            events.forEach(function (name) { return global.addEventListener(name, _this.listener, true); });\n        }\n    };\n    Scheduler.prototype.stop = function () {\n        var _this = this;\n        if (!this.stopped) {\n            this.observer && this.observer.disconnect();\n            events.forEach(function (name) { return global.removeEventListener(name, _this.listener, true); });\n            this.stopped = true;\n        }\n    };\n    return Scheduler;\n}());\nvar scheduler = new Scheduler();\nvar updateCount = function (n) {\n    !watching && n > 0 && scheduler.start();\n    watching += n;\n    !watching && scheduler.stop();\n};\nexport { scheduler, updateCount };\n", "import { ResizeObserverBoxOptions } from './ResizeObserverBoxOptions';\nimport { calculateBoxSize } from './algorithms/calculateBoxSize';\nimport { isSVG, isReplacedElement } from './utils/element';\nvar skipNotifyOnElement = function (target) {\n    return !isSVG(target)\n        && !isReplacedElement(target)\n        && getComputedStyle(target).display === 'inline';\n};\nvar ResizeObservation = (function () {\n    function ResizeObservation(target, observedBox) {\n        this.target = target;\n        this.observedBox = observedBox || ResizeObserverBoxOptions.CONTENT_BOX;\n        this.lastReportedSize = {\n            inlineSize: 0,\n            blockSize: 0\n        };\n    }\n    ResizeObservation.prototype.isActive = function () {\n        var size = calculateBoxSize(this.target, this.observedBox, true);\n        if (skipNotifyOnElement(this.target)) {\n            this.lastReportedSize = size;\n        }\n        if (this.lastReportedSize.inlineSize !== size.inlineSize\n            || this.lastReportedSize.blockSize !== size.blockSize) {\n            return true;\n        }\n        return false;\n    };\n    return ResizeObservation;\n}());\nexport { ResizeObservation };\n", "var ResizeObserverDetail = (function () {\n    function ResizeObserverDetail(resizeObserver, callback) {\n        this.activeTargets = [];\n        this.skippedTargets = [];\n        this.observationTargets = [];\n        this.observer = resizeObserver;\n        this.callback = callback;\n    }\n    return ResizeObserverDetail;\n}());\nexport { ResizeObserverDetail };\n", "import { scheduler, updateCount } from './utils/scheduler';\nimport { ResizeObservation } from './ResizeObservation';\nimport { ResizeObserverDetail } from './ResizeObserverDetail';\nimport { resizeObservers } from './utils/resizeObservers';\nvar observerMap = new WeakMap();\nvar getObservationIndex = function (observationTargets, target) {\n    for (var i = 0; i < observationTargets.length; i += 1) {\n        if (observationTargets[i].target === target) {\n            return i;\n        }\n    }\n    return -1;\n};\nvar ResizeObserverController = (function () {\n    function ResizeObserverController() {\n    }\n    ResizeObserverController.connect = function (resizeObserver, callback) {\n        var detail = new ResizeObserverDetail(resizeObserver, callback);\n        observerMap.set(resizeObserver, detail);\n    };\n    ResizeObserverController.observe = function (resizeObserver, target, options) {\n        var detail = observerMap.get(resizeObserver);\n        var firstObservation = detail.observationTargets.length === 0;\n        if (getObservationIndex(detail.observationTargets, target) < 0) {\n            firstObservation && resizeObservers.push(detail);\n            detail.observationTargets.push(new ResizeObservation(target, options && options.box));\n            updateCount(1);\n            scheduler.schedule();\n        }\n    };\n    ResizeObserverController.unobserve = function (resizeObserver, target) {\n        var detail = observerMap.get(resizeObserver);\n        var index = getObservationIndex(detail.observationTargets, target);\n        var lastObservation = detail.observationTargets.length === 1;\n        if (index >= 0) {\n            lastObservation && resizeObservers.splice(resizeObservers.indexOf(detail), 1);\n            detail.observationTargets.splice(index, 1);\n            updateCount(-1);\n        }\n    };\n    ResizeObserverController.disconnect = function (resizeObserver) {\n        var _this = this;\n        var detail = observerMap.get(resizeObserver);\n        detail.observationTargets.slice().forEach(function (ot) { return _this.unobserve(resizeObserver, ot.target); });\n        detail.activeTargets.splice(0, detail.activeTargets.length);\n    };\n    return ResizeObserverController;\n}());\nexport { ResizeObserverController };\n", "import { ResizeObserverController } from './ResizeObserverController';\nimport { isElement } from './utils/element';\nvar ResizeObserver = (function () {\n    function ResizeObserver(callback) {\n        if (arguments.length === 0) {\n            throw new TypeError(\"Failed to construct 'ResizeObserver': 1 argument required, but only 0 present.\");\n        }\n        if (typeof callback !== 'function') {\n            throw new TypeError(\"Failed to construct 'ResizeObserver': The callback provided as parameter 1 is not a function.\");\n        }\n        ResizeObserverController.connect(this, callback);\n    }\n    ResizeObserver.prototype.observe = function (target, options) {\n        if (arguments.length === 0) {\n            throw new TypeError(\"Failed to execute 'observe' on 'ResizeObserver': 1 argument required, but only 0 present.\");\n        }\n        if (!isElement(target)) {\n            throw new TypeError(\"Failed to execute 'observe' on 'ResizeObserver': parameter 1 is not of type 'Element\");\n        }\n        ResizeObserverController.observe(this, target, options);\n    };\n    ResizeObserver.prototype.unobserve = function (target) {\n        if (arguments.length === 0) {\n            throw new TypeError(\"Failed to execute 'unobserve' on 'ResizeObserver': 1 argument required, but only 0 present.\");\n        }\n        if (!isElement(target)) {\n            throw new TypeError(\"Failed to execute 'unobserve' on 'ResizeObserver': parameter 1 is not of type 'Element\");\n        }\n        ResizeObserverController.unobserve(this, target);\n    };\n    ResizeObserver.prototype.disconnect = function () {\n        ResizeObserverController.disconnect(this);\n    };\n    ResizeObserver.toString = function () {\n        return 'function ResizeObserver () { [polyfill code] }';\n    };\n    return ResizeObserver;\n}());\nexport { ResizeObserver };\n", "export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}", "export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}", "import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}", "/**\n * An auto-incrementing identifier for keys.\n */\n\nlet n = 0\n\n/**\n * A class that keeps track of a key string. We use a full class here because we\n * want to be able to use them as keys in `WeakMap` objects.\n */\n\nexport class Key {\n  id: string\n\n  constructor() {\n    this.id = `${n++}`\n  }\n}\n", "import { Ancestor, Editor, Node, Range, RangeRef, Text } from 'slate'\nimport { Action } from '../hooks/android-input-manager/android-input-manager'\nimport { TextDiff } from './diff-text'\nimport { Key } from './key'\n\n/**\n * Two weak maps that allow us rebuild a path given a node. They are populated\n * at render time such that after a render occurs we can always backtrack.\n */\n\nexport const NODE_TO_INDEX: WeakMap<Node, number> = new WeakMap()\nexport const NODE_TO_PARENT: WeakMap<Node, Ancestor> = new WeakMap()\n\n/**\n * Weak maps that allow us to go between Slate nodes and DOM nodes. These\n * are used to resolve DOM event-related logic into Slate actions.\n */\nexport const EDITOR_TO_WINDOW: WeakMap<Editor, Window> = new WeakMap()\nexport const EDITOR_TO_ELEMENT: WeakMap<Editor, HTMLElement> = new WeakMap()\nexport const EDITOR_TO_PLACEHOLDER: WeakMap<Editor, string> = new WeakMap()\nexport const EDITOR_TO_PLACEHOLDER_ELEMENT: WeakMap<\n  Editor,\n  HTMLElement\n> = new WeakMap()\nexport const ELEMENT_TO_NODE: WeakMap<HTMLElement, Node> = new WeakMap()\nexport const NODE_TO_ELEMENT: WeakMap<Node, HTMLElement> = new WeakMap()\nexport const NODE_TO_KEY: WeakMap<Node, Key> = new WeakMap()\nexport const EDITOR_TO_KEY_TO_ELEMENT: WeakMap<\n  Editor,\n  WeakMap<Key, HTMLElement>\n> = new WeakMap()\n\n/**\n * Weak maps for storing editor-related state.\n */\n\nexport const IS_READ_ONLY: WeakMap<Editor, boolean> = new WeakMap()\nexport const IS_FOCUSED: WeakMap<Editor, boolean> = new WeakMap()\nexport const IS_COMPOSING: WeakMap<Editor, boolean> = new WeakMap()\n\nexport const EDITOR_TO_USER_SELECTION: WeakMap<\n  Editor,\n  RangeRef | null\n> = new WeakMap()\n\n/**\n * Weak map for associating the context `onChange` context with the plugin.\n */\n\nexport const EDITOR_TO_ON_CHANGE = new WeakMap<Editor, () => void>()\n\n/**\n * Weak maps for saving pending state on composition stage.\n */\n\nexport const EDITOR_TO_SCHEDULE_FLUSH: WeakMap<\n  Editor,\n  () => void\n> = new WeakMap()\n\nexport const EDITOR_TO_PENDING_INSERTION_MARKS: WeakMap<\n  Editor,\n  Partial<Text> | null\n> = new WeakMap()\n\nexport const EDITOR_TO_USER_MARKS: WeakMap<\n  Editor,\n  Partial<Text> | null\n> = new WeakMap()\n\n/**\n * Android input handling specific weak-maps\n */\n\nexport const EDITOR_TO_PENDING_DIFFS: WeakMap<\n  Editor,\n  TextDiff[]\n> = new WeakMap()\n\nexport const EDITOR_TO_PENDING_ACTION: WeakMap<\n  Editor,\n  Action | null\n> = new WeakMap()\n\nexport const EDITOR_TO_PENDING_SELECTION: WeakMap<\n  Editor,\n  Range | null\n> = new WeakMap()\n\nexport const EDITOR_TO_FORCE_RENDER: WeakMap<Editor, () => void> = new WeakMap()\n\n/**\n * Symbols.\n */\n\nexport const PLACEHOLDER_SYMBOL = (Symbol('placeholder') as unknown) as string\nexport const MARK_PLACEHOLDER_SYMBOL = (Symbol(\n  'mark-placeholder'\n) as unknown) as string\n", "/**\n * Types.\n */\n\n// COMPAT: This is required to prevent TypeScript aliases from doing some very\n// weird things for Slate's types with the same name as globals. (2019/11/27)\n// https://github.com/microsoft/TypeScript/issues/35002\nimport DOMNode = globalThis.Node\nimport DOMComment = globalThis.Comment\nimport DOMElement = globalThis.Element\nimport DOMText = globalThis.Text\nimport DOMRange = globalThis.Range\nimport DOMSelection = globalThis.Selection\nimport DOMStaticRange = globalThis.StaticRange\nimport { ReactEditor } from '../plugin/react-editor'\n\nexport {\n  DOMNode,\n  DOMComment,\n  DOMElement,\n  DOMText,\n  DOMRange,\n  DOMSelection,\n  DOMStaticRange,\n}\n\ndeclare global {\n  interface Window {\n    Selection: typeof Selection['constructor']\n    DataTransfer: typeof DataTransfer['constructor']\n    Node: typeof Node['constructor']\n  }\n}\n\nexport type DOMPoint = [Node, number]\n\n/**\n * Returns the host window of a DOM node\n */\n\nexport const getDefaultView = (value: any): Window | null => {\n  return (\n    (value && value.ownerDocument && value.ownerDocument.defaultView) || null\n  )\n}\n\n/**\n * Check if a DOM node is a comment node.\n */\n\nexport const isDOMComment = (value: any): value is DOMComment => {\n  return isDOMNode(value) && value.nodeType === 8\n}\n\n/**\n * Check if a DOM node is an element node.\n */\n\nexport const isDOMElement = (value: any): value is DOMElement => {\n  return isDOMNode(value) && value.nodeType === 1\n}\n\n/**\n * Check if a value is a DOM node.\n */\n\nexport const isDOMNode = (value: any): value is DOMNode => {\n  const window = getDefaultView(value)\n  return !!window && value instanceof window.Node\n}\n\n/**\n * Check if a value is a DOM selection.\n */\n\nexport const isDOMSelection = (value: any): value is DOMSelection => {\n  const window = value && value.anchorNode && getDefaultView(value.anchorNode)\n  return !!window && value instanceof window.Selection\n}\n\n/**\n * Check if a DOM node is an element node.\n */\n\nexport const isDOMText = (value: any): value is DOMText => {\n  return isDOMNode(value) && value.nodeType === 3\n}\n\n/**\n * Checks whether a paste event is a plaintext-only event.\n */\n\nexport const isPlainTextOnlyPaste = (event: ClipboardEvent) => {\n  return (\n    event.clipboardData &&\n    event.clipboardData.getData('text/plain') !== '' &&\n    event.clipboardData.types.length === 1\n  )\n}\n\n/**\n * Normalize a DOM point so that it always refers to a text node.\n */\n\nexport const normalizeDOMPoint = (domPoint: DOMPoint): DOMPoint => {\n  let [node, offset] = domPoint\n\n  // If it's an element node, its offset refers to the index of its children\n  // including comment nodes, so try to find the right text child node.\n  if (isDOMElement(node) && node.childNodes.length) {\n    let isLast = offset === node.childNodes.length\n    let index = isLast ? offset - 1 : offset\n    ;[node, index] = getEditableChildAndIndex(\n      node,\n      index,\n      isLast ? 'backward' : 'forward'\n    )\n    // If the editable child found is in front of input offset, we instead seek to its end\n    isLast = index < offset\n\n    // If the node has children, traverse until we have a leaf node. Leaf nodes\n    // can be either text nodes, or other void DOM nodes.\n    while (isDOMElement(node) && node.childNodes.length) {\n      const i = isLast ? node.childNodes.length - 1 : 0\n      node = getEditableChild(node, i, isLast ? 'backward' : 'forward')\n    }\n\n    // Determine the new offset inside the text node.\n    offset = isLast && node.textContent != null ? node.textContent.length : 0\n  }\n\n  // Return the node and offset.\n  return [node, offset]\n}\n\n/**\n * Determines wether the active element is nested within a shadowRoot\n */\n\nexport const hasShadowRoot = (node: Node | null) => {\n  let parent = node && node.parentNode\n  while (parent) {\n    if (parent.toString() === '[object ShadowRoot]') {\n      return true\n    }\n    parent = parent.parentNode\n  }\n  return false\n}\n\n/**\n * Get the nearest editable child and index at `index` in a `parent`, preferring\n * `direction`.\n */\n\nexport const getEditableChildAndIndex = (\n  parent: DOMElement,\n  index: number,\n  direction: 'forward' | 'backward'\n): [DOMNode, number] => {\n  const { childNodes } = parent\n  let child = childNodes[index]\n  let i = index\n  let triedForward = false\n  let triedBackward = false\n\n  // While the child is a comment node, or an element node with no children,\n  // keep iterating to find a sibling non-void, non-comment node.\n  while (\n    isDOMComment(child) ||\n    (isDOMElement(child) && child.childNodes.length === 0) ||\n    (isDOMElement(child) && child.getAttribute('contenteditable') === 'false')\n  ) {\n    if (triedForward && triedBackward) {\n      break\n    }\n\n    if (i >= childNodes.length) {\n      triedForward = true\n      i = index - 1\n      direction = 'backward'\n      continue\n    }\n\n    if (i < 0) {\n      triedBackward = true\n      i = index + 1\n      direction = 'forward'\n      continue\n    }\n\n    child = childNodes[i]\n    index = i\n    i += direction === 'forward' ? 1 : -1\n  }\n\n  return [child, index]\n}\n\n/**\n * Get the nearest editable child at `index` in a `parent`, preferring\n * `direction`.\n */\n\nexport const getEditableChild = (\n  parent: DOMElement,\n  index: number,\n  direction: 'forward' | 'backward'\n): DOMNode => {\n  const [child] = getEditableChildAndIndex(parent, index, direction)\n  return child\n}\n\n/**\n * Get a plaintext representation of the content of a node, accounting for block\n * elements which get a newline appended.\n *\n * The domNode must be attached to the DOM.\n */\n\nexport const getPlainText = (domNode: DOMNode) => {\n  let text = ''\n\n  if (isDOMText(domNode) && domNode.nodeValue) {\n    return domNode.nodeValue\n  }\n\n  if (isDOMElement(domNode)) {\n    for (const childNode of Array.from(domNode.childNodes)) {\n      text += getPlainText(childNode)\n    }\n\n    const display = getComputedStyle(domNode).getPropertyValue('display')\n\n    if (display === 'block' || display === 'list' || domNode.tagName === 'BR') {\n      text += '\\n'\n    }\n  }\n\n  return text\n}\n\n/**\n * Get x-slate-fragment attribute from data-slate-fragment\n */\nconst catchSlateFragment = /data-slate-fragment=\"(.+?)\"/m\nexport const getSlateFragmentAttribute = (\n  dataTransfer: DataTransfer\n): string | void => {\n  const htmlData = dataTransfer.getData('text/html')\n  const [, fragment] = htmlData.match(catchSlateFragment) || []\n  return fragment\n}\n\n/**\n * Get the x-slate-fragment attribute that exist in text/html data\n * and append it to the DataTransfer object\n */\nexport const getClipboardData = (\n  dataTransfer: DataTransfer,\n  clipboardFormatKey = 'x-slate-fragment'\n): DataTransfer => {\n  if (!dataTransfer.getData(`application/${clipboardFormatKey}`)) {\n    const fragment = getSlateFragmentAttribute(dataTransfer)\n    if (fragment) {\n      const clipboardData = new DataTransfer()\n      dataTransfer.types.forEach(type => {\n        clipboardData.setData(type, dataTransfer.getData(type))\n      })\n      clipboardData.setData(`application/${clipboardFormatKey}`, fragment)\n      return clipboardData\n    }\n  }\n  return dataTransfer\n}\n\n/**\n * Check whether a mutation originates from a editable element inside the editor.\n */\n\nexport const isTrackedMutation = (\n  editor: ReactEditor,\n  mutation: MutationRecord,\n  batch: MutationRecord[]\n): boolean => {\n  const { target } = mutation\n  if (isDOMElement(target) && target.matches('[contentEditable=\"false\"]')) {\n    return false\n  }\n\n  const { document } = ReactEditor.getWindow(editor)\n  if (document.contains(target)) {\n    return ReactEditor.hasDOMNode(editor, target, { editable: true })\n  }\n\n  const parentMutation = batch.find(({ addedNodes, removedNodes }) => {\n    for (const node of addedNodes) {\n      if (node === target || node.contains(target)) {\n        return true\n      }\n    }\n\n    for (const node of removedNodes) {\n      if (node === target || node.contains(target)) {\n        return true\n      }\n    }\n  })\n\n  if (!parentMutation || parentMutation === mutation) {\n    return false\n  }\n\n  // Target add/remove is tracked. Track the mutation if we track the parent mutation.\n  return isTrackedMutation(editor, parentMutation, batch)\n}\n", "import React from 'react'\n\nexport const IS_REACT_VERSION_17_OR_ABOVE =\n  parseInt(React.version.split('.')[0], 10) >= 17\n\nexport const IS_IOS =\n  typeof navigator !== 'undefined' &&\n  typeof window !== 'undefined' &&\n  /iPad|iPhone|iPod/.test(navigator.userAgent) &&\n  !window.MSStream\n\nexport const IS_APPLE =\n  typeof navigator !== 'undefined' && /Mac OS X/.test(navigator.userAgent)\n\nexport const IS_ANDROID =\n  typeof navigator !== 'undefined' && /Android/.test(navigator.userAgent)\n\nexport const IS_FIREFOX =\n  typeof navigator !== 'undefined' &&\n  /^(?!.*Seamonkey)(?=.*Firefox).*/i.test(navigator.userAgent)\n\nexport const IS_SAFARI =\n  typeof navigator !== 'undefined' &&\n  /Version\\/[\\d\\.]+.*Safari/.test(navigator.userAgent)\n\n// \"modern\" Edge was released at 79.x\nexport const IS_EDGE_LEGACY =\n  typeof navigator !== 'undefined' &&\n  /Edge?\\/(?:[0-6][0-9]|[0-7][0-8])(?:\\.)/i.test(navigator.userAgent)\n\nexport const IS_CHROME =\n  typeof navigator !== 'undefined' && /Chrome/i.test(navigator.userAgent)\n\n// Native `beforeInput` events don't work well with react on Chrome 75\n// and older, Chrome 76+ can use `beforeInput` though.\nexport const IS_CHROME_LEGACY =\n  typeof navigator !== 'undefined' &&\n  /Chrome?\\/(?:[0-7][0-5]|[0-6][0-9])(?:\\.)/i.test(navigator.userAgent)\n\nexport const IS_ANDROID_CHROME_LEGACY =\n  IS_ANDROID &&\n  typeof navigator !== 'undefined' &&\n  /Chrome?\\/(?:[0-5]?\\d)(?:\\.)/i.test(navigator.userAgent)\n\n// Firefox did not support `beforeInput` until `v87`.\nexport const IS_FIREFOX_LEGACY =\n  typeof navigator !== 'undefined' &&\n  /^(?!.*Seamonkey)(?=.*Firefox\\/(?:[0-7][0-9]|[0-8][0-6])(?:\\.)).*/i.test(\n    navigator.userAgent\n  )\n\n// UC mobile browser\nexport const IS_UC_MOBILE =\n  typeof navigator !== 'undefined' && /.*UCBrowser/.test(navigator.userAgent)\n\n// Wechat browser\nexport const IS_WECHATBROWSER =\n  typeof navigator !== 'undefined' && /.*Wechat/.test(navigator.userAgent)\n\n// Check if DOM is available as React does internally.\n// https://github.com/facebook/react/blob/master/packages/shared/ExecutionEnvironment.js\nexport const CAN_USE_DOM = !!(\n  typeof window !== 'undefined' &&\n  typeof window.document !== 'undefined' &&\n  typeof window.document.createElement !== 'undefined'\n)\n\n// COMPAT: Firefox/Edge Legacy don't support the `beforeinput` event\n// Chrome Legacy doesn't support `beforeinput` correctly\nexport const HAS_BEFORE_INPUT_SUPPORT =\n  (!IS_CHROME_LEGACY || !IS_ANDROID_CHROME_LEGACY) &&\n  !IS_EDGE_LEGACY &&\n  // globalThis is undefined in older browsers\n  typeof globalThis !== 'undefined' &&\n  globalThis.InputEvent &&\n  // @ts-ignore The `getTargetRanges` property isn't recognized.\n  typeof globalThis.InputEvent.prototype.getTargetRanges === 'function'\n", "import {\n  BaseEditor,\n  Editor,\n  Node,\n  Path,\n  Point,\n  Range,\n  Scrubber,\n  Transforms,\n  Element,\n} from 'slate'\n\nimport { Key } from '../utils/key'\nimport {\n  EDITOR_TO_ELEMENT,\n  ELEMENT_TO_NODE,\n  IS_FOCUSED,\n  IS_READ_ONLY,\n  NODE_TO_INDEX,\n  NODE_TO_KEY,\n  NODE_TO_PARENT,\n  EDITOR_TO_WINDOW,\n  EDITOR_TO_KEY_TO_ELEMENT,\n  IS_COMPOSING,\n  EDITOR_TO_SCHEDULE_FLUSH,\n  EDITOR_TO_PENDING_DIFFS,\n} from '../utils/weak-maps'\nimport {\n  DOMElement,\n  DOMNode,\n  DOMPoint,\n  DOMRange,\n  DOMSelection,\n  DOMStaticRange,\n  isDOMElement,\n  isDOMSelection,\n  isDOMNode,\n  normalizeDOMPoint,\n  hasShadowRoot,\n  DOMText,\n} from '../utils/dom'\nimport { IS_CHROME, IS_FIREFOX, IS_ANDROID } from '../utils/environment'\n\n/**\n * A React and DOM-specific version of the `Editor` interface.\n */\n\nexport interface ReactEditor extends BaseEditor {\n  insertData: (data: DataTransfer) => void\n  insertFragmentData: (data: DataTransfer) => boolean\n  insertTextData: (data: DataTransfer) => boolean\n  setFragmentData: (\n    data: DataTransfer,\n    originEvent?: 'drag' | 'copy' | 'cut'\n  ) => void\n  hasRange: (editor: ReactEditor, range: Range) => boolean\n  hasTarget: (\n    editor: ReactEditor,\n    target: EventTarget | null\n  ) => target is DOMNode\n  hasEditableTarget: (\n    editor: ReactEditor,\n    target: EventTarget | null\n  ) => target is DOMNode\n  hasSelectableTarget: (\n    editor: ReactEditor,\n    target: EventTarget | null\n  ) => boolean\n  isTargetInsideNonReadonlyVoid: (\n    editor: ReactEditor,\n    target: EventTarget | null\n  ) => boolean\n}\n\n// eslint-disable-next-line no-redeclare\nexport const ReactEditor = {\n  /**\n   * Check if the user is currently composing inside the editor.\n   */\n\n  isComposing(editor: ReactEditor): boolean {\n    return !!IS_COMPOSING.get(editor)\n  },\n\n  /**\n   * Return the host window of the current editor.\n   */\n\n  getWindow(editor: ReactEditor): Window {\n    const window = EDITOR_TO_WINDOW.get(editor)\n    if (!window) {\n      throw new Error('Unable to find a host window element for this editor')\n    }\n    return window\n  },\n\n  /**\n   * Find a key for a Slate node.\n   */\n\n  findKey(editor: ReactEditor, node: Node): Key {\n    let key = NODE_TO_KEY.get(node)\n\n    if (!key) {\n      key = new Key()\n      NODE_TO_KEY.set(node, key)\n    }\n\n    return key\n  },\n\n  /**\n   * Find the path of Slate node.\n   */\n\n  findPath(editor: ReactEditor, node: Node): Path {\n    const path: Path = []\n    let child = node\n\n    while (true) {\n      const parent = NODE_TO_PARENT.get(child)\n\n      if (parent == null) {\n        if (Editor.isEditor(child)) {\n          return path\n        } else {\n          break\n        }\n      }\n\n      const i = NODE_TO_INDEX.get(child)\n\n      if (i == null) {\n        break\n      }\n\n      path.unshift(i)\n      child = parent\n    }\n\n    throw new Error(\n      `Unable to find the path for Slate node: ${Scrubber.stringify(node)}`\n    )\n  },\n\n  /**\n   * Find the DOM node that implements DocumentOrShadowRoot for the editor.\n   */\n\n  findDocumentOrShadowRoot(editor: ReactEditor): Document | ShadowRoot {\n    const el = ReactEditor.toDOMNode(editor, editor)\n    const root = el.getRootNode()\n\n    if (\n      (root instanceof Document || root instanceof ShadowRoot) &&\n      root.getSelection != null\n    ) {\n      return root\n    }\n\n    return el.ownerDocument\n  },\n\n  /**\n   * Check if the editor is focused.\n   */\n\n  isFocused(editor: ReactEditor): boolean {\n    return !!IS_FOCUSED.get(editor)\n  },\n\n  /**\n   * Check if the editor is in read-only mode.\n   */\n\n  isReadOnly(editor: ReactEditor): boolean {\n    return !!IS_READ_ONLY.get(editor)\n  },\n\n  /**\n   * Blur the editor.\n   */\n\n  blur(editor: ReactEditor): void {\n    const el = ReactEditor.toDOMNode(editor, editor)\n    const root = ReactEditor.findDocumentOrShadowRoot(editor)\n    IS_FOCUSED.set(editor, false)\n\n    if (root.activeElement === el) {\n      el.blur()\n    }\n  },\n\n  /**\n   * Focus the editor.\n   */\n\n  focus(editor: ReactEditor): void {\n    const el = ReactEditor.toDOMNode(editor, editor)\n    const root = ReactEditor.findDocumentOrShadowRoot(editor)\n    IS_FOCUSED.set(editor, true)\n\n    if (root.activeElement !== el) {\n      el.focus({ preventScroll: true })\n    }\n  },\n\n  /**\n   * Deselect the editor.\n   */\n\n  deselect(editor: ReactEditor): void {\n    const { selection } = editor\n    const root = ReactEditor.findDocumentOrShadowRoot(editor)\n    const domSelection = root.getSelection()\n\n    if (domSelection && domSelection.rangeCount > 0) {\n      domSelection.removeAllRanges()\n    }\n\n    if (selection) {\n      Transforms.deselect(editor)\n    }\n  },\n\n  /**\n   * Check if a DOM node is within the editor.\n   */\n\n  hasDOMNode(\n    editor: ReactEditor,\n    target: DOMNode,\n    options: { editable?: boolean } = {}\n  ): boolean {\n    const { editable = false } = options\n    const editorEl = ReactEditor.toDOMNode(editor, editor)\n    let targetEl\n\n    // COMPAT: In Firefox, reading `target.nodeType` will throw an error if\n    // target is originating from an internal \"restricted\" element (e.g. a\n    // stepper arrow on a number input). (2018/05/04)\n    // https://github.com/ianstormtaylor/slate/issues/1819\n    try {\n      targetEl = (isDOMElement(target)\n        ? target\n        : target.parentElement) as HTMLElement\n    } catch (err) {\n      if (\n        !err.message.includes('Permission denied to access property \"nodeType\"')\n      ) {\n        throw err\n      }\n    }\n\n    if (!targetEl) {\n      return false\n    }\n\n    return (\n      targetEl.closest(`[data-slate-editor]`) === editorEl &&\n      (!editable || targetEl.isContentEditable\n        ? true\n        : (typeof targetEl.isContentEditable === 'boolean' && // isContentEditable exists only on HTMLElement, and on other nodes it will be undefined\n            // this is the core logic that lets you know you got the right editor.selection instead of null when editor is contenteditable=\"false\"(readOnly)\n            targetEl.closest('[contenteditable=\"false\"]') === editorEl) ||\n          !!targetEl.getAttribute('data-slate-zero-width'))\n    )\n  },\n\n  /**\n   * Insert data from a `DataTransfer` into the editor.\n   */\n\n  insertData(editor: ReactEditor, data: DataTransfer): void {\n    editor.insertData(data)\n  },\n\n  /**\n   * Insert fragment data from a `DataTransfer` into the editor.\n   */\n\n  insertFragmentData(editor: ReactEditor, data: DataTransfer): boolean {\n    return editor.insertFragmentData(data)\n  },\n\n  /**\n   * Insert text data from a `DataTransfer` into the editor.\n   */\n\n  insertTextData(editor: ReactEditor, data: DataTransfer): boolean {\n    return editor.insertTextData(data)\n  },\n\n  /**\n   * Sets data from the currently selected fragment on a `DataTransfer`.\n   */\n\n  setFragmentData(\n    editor: ReactEditor,\n    data: DataTransfer,\n    originEvent?: 'drag' | 'copy' | 'cut'\n  ): void {\n    editor.setFragmentData(data, originEvent)\n  },\n\n  /**\n   * Find the native DOM element from a Slate node.\n   */\n\n  toDOMNode(editor: ReactEditor, node: Node): HTMLElement {\n    const KEY_TO_ELEMENT = EDITOR_TO_KEY_TO_ELEMENT.get(editor)\n    const domNode = Editor.isEditor(node)\n      ? EDITOR_TO_ELEMENT.get(editor)\n      : KEY_TO_ELEMENT?.get(ReactEditor.findKey(editor, node))\n\n    if (!domNode) {\n      throw new Error(\n        `Cannot resolve a DOM node from Slate node: ${Scrubber.stringify(node)}`\n      )\n    }\n\n    return domNode\n  },\n\n  /**\n   * Find a native DOM selection point from a Slate point.\n   */\n\n  toDOMPoint(editor: ReactEditor, point: Point): DOMPoint {\n    const [node] = Editor.node(editor, point.path)\n    const el = ReactEditor.toDOMNode(editor, node)\n    let domPoint: DOMPoint | undefined\n\n    // If we're inside a void node, force the offset to 0, otherwise the zero\n    // width spacing character will result in an incorrect offset of 1\n    if (Editor.void(editor, { at: point })) {\n      point = { path: point.path, offset: 0 }\n    }\n\n    // For each leaf, we need to isolate its content, which means filtering\n    // to its direct text and zero-width spans. (We have to filter out any\n    // other siblings that may have been rendered alongside them.)\n    const selector = `[data-slate-string], [data-slate-zero-width]`\n    const texts = Array.from(el.querySelectorAll(selector))\n    let start = 0\n\n    for (let i = 0; i < texts.length; i++) {\n      const text = texts[i]\n      const domNode = text.childNodes[0] as HTMLElement\n\n      if (domNode == null || domNode.textContent == null) {\n        continue\n      }\n\n      const { length } = domNode.textContent\n      const attr = text.getAttribute('data-slate-length')\n      const trueLength = attr == null ? length : parseInt(attr, 10)\n      const end = start + trueLength\n\n      // Prefer putting the selection inside the mark placeholder to ensure\n      // composed text is displayed with the correct marks.\n      const nextText = texts[i + 1]\n      if (\n        point.offset === end &&\n        nextText?.hasAttribute('data-slate-mark-placeholder')\n      ) {\n        const domText = nextText.childNodes[0]\n\n        domPoint = [\n          // COMPAT: If we don't explicity set the dom point to be on the actual\n          // dom text element, chrome will put the selection behind the actual dom\n          // text element, causing domRange.getBoundingClientRect() calls on a collapsed\n          // selection to return incorrect zero values (https://bugs.chromium.org/p/chromium/issues/detail?id=435438)\n          // which will cause issues when scrolling to it.\n          domText instanceof DOMText ? domText : nextText,\n          nextText.textContent?.startsWith('\\uFEFF') ? 1 : 0,\n        ]\n        break\n      }\n\n      if (point.offset <= end) {\n        const offset = Math.min(length, Math.max(0, point.offset - start))\n        domPoint = [domNode, offset]\n        break\n      }\n\n      start = end\n    }\n\n    if (!domPoint) {\n      throw new Error(\n        `Cannot resolve a DOM point from Slate point: ${Scrubber.stringify(\n          point\n        )}`\n      )\n    }\n\n    return domPoint\n  },\n\n  /**\n   * Find a native DOM range from a Slate `range`.\n   *\n   * Notice: the returned range will always be ordinal regardless of the direction of Slate `range` due to DOM API limit.\n   *\n   * there is no way to create a reverse DOM Range using Range.setStart/setEnd\n   * according to https://dom.spec.whatwg.org/#concept-range-bp-set.\n   */\n\n  toDOMRange(editor: ReactEditor, range: Range): DOMRange {\n    const { anchor, focus } = range\n    const isBackward = Range.isBackward(range)\n    const domAnchor = ReactEditor.toDOMPoint(editor, anchor)\n    const domFocus = Range.isCollapsed(range)\n      ? domAnchor\n      : ReactEditor.toDOMPoint(editor, focus)\n\n    const window = ReactEditor.getWindow(editor)\n    const domRange = window.document.createRange()\n    const [startNode, startOffset] = isBackward ? domFocus : domAnchor\n    const [endNode, endOffset] = isBackward ? domAnchor : domFocus\n\n    // A slate Point at zero-width Leaf always has an offset of 0 but a native DOM selection at\n    // zero-width node has an offset of 1 so we have to check if we are in a zero-width node and\n    // adjust the offset accordingly.\n    const startEl = (isDOMElement(startNode)\n      ? startNode\n      : startNode.parentElement) as HTMLElement\n    const isStartAtZeroWidth = !!startEl.getAttribute('data-slate-zero-width')\n    const endEl = (isDOMElement(endNode)\n      ? endNode\n      : endNode.parentElement) as HTMLElement\n    const isEndAtZeroWidth = !!endEl.getAttribute('data-slate-zero-width')\n\n    domRange.setStart(startNode, isStartAtZeroWidth ? 1 : startOffset)\n    domRange.setEnd(endNode, isEndAtZeroWidth ? 1 : endOffset)\n    return domRange\n  },\n\n  /**\n   * Find a Slate node from a native DOM `element`.\n   */\n\n  toSlateNode(editor: ReactEditor, domNode: DOMNode): Node {\n    let domEl = isDOMElement(domNode) ? domNode : domNode.parentElement\n\n    if (domEl && !domEl.hasAttribute('data-slate-node')) {\n      domEl = domEl.closest(`[data-slate-node]`)\n    }\n\n    const node = domEl ? ELEMENT_TO_NODE.get(domEl as HTMLElement) : null\n\n    if (!node) {\n      throw new Error(`Cannot resolve a Slate node from DOM node: ${domEl}`)\n    }\n\n    return node\n  },\n\n  /**\n   * Get the target range from a DOM `event`.\n   */\n\n  findEventRange(editor: ReactEditor, event: any): Range {\n    if ('nativeEvent' in event) {\n      event = event.nativeEvent\n    }\n\n    const { clientX: x, clientY: y, target } = event\n\n    if (x == null || y == null) {\n      throw new Error(`Cannot resolve a Slate range from a DOM event: ${event}`)\n    }\n\n    const node = ReactEditor.toSlateNode(editor, event.target)\n    const path = ReactEditor.findPath(editor, node)\n\n    // If the drop target is inside a void node, move it into either the\n    // next or previous node, depending on which side the `x` and `y`\n    // coordinates are closest to.\n    if (Element.isElement(node) && Editor.isVoid(editor, node)) {\n      const rect = target.getBoundingClientRect()\n      const isPrev = editor.isInline(node)\n        ? x - rect.left < rect.left + rect.width - x\n        : y - rect.top < rect.top + rect.height - y\n\n      const edge = Editor.point(editor, path, {\n        edge: isPrev ? 'start' : 'end',\n      })\n      const point = isPrev\n        ? Editor.before(editor, edge)\n        : Editor.after(editor, edge)\n\n      if (point) {\n        const range = Editor.range(editor, point)\n        return range\n      }\n    }\n\n    // Else resolve a range from the caret position where the drop occured.\n    let domRange\n    const { document } = ReactEditor.getWindow(editor)\n\n    // COMPAT: In Firefox, `caretRangeFromPoint` doesn't exist. (2016/07/25)\n    if (document.caretRangeFromPoint) {\n      domRange = document.caretRangeFromPoint(x, y)\n    } else {\n      const position = document.caretPositionFromPoint(x, y)\n\n      if (position) {\n        domRange = document.createRange()\n        domRange.setStart(position.offsetNode, position.offset)\n        domRange.setEnd(position.offsetNode, position.offset)\n      }\n    }\n\n    if (!domRange) {\n      throw new Error(`Cannot resolve a Slate range from a DOM event: ${event}`)\n    }\n\n    // Resolve a Slate range from the DOM range.\n    const range = ReactEditor.toSlateRange(editor, domRange, {\n      exactMatch: false,\n      suppressThrow: false,\n    })\n    return range\n  },\n\n  /**\n   * Find a Slate point from a DOM selection's `domNode` and `domOffset`.\n   */\n\n  toSlatePoint<T extends boolean>(\n    editor: ReactEditor,\n    domPoint: DOMPoint,\n    options: {\n      exactMatch: boolean\n      suppressThrow: T\n    }\n  ): T extends true ? Point | null : Point {\n    const { exactMatch, suppressThrow } = options\n    const [nearestNode, nearestOffset] = exactMatch\n      ? domPoint\n      : normalizeDOMPoint(domPoint)\n    const parentNode = nearestNode.parentNode as DOMElement\n    let textNode: DOMElement | null = null\n    let offset = 0\n\n    if (parentNode) {\n      const editorEl = ReactEditor.toDOMNode(editor, editor)\n      const potentialVoidNode = parentNode.closest('[data-slate-void=\"true\"]')\n      // Need to ensure that the closest void node is actually a void node\n      // within this editor, and not a void node within some parent editor. This can happen\n      // if this editor is within a void node of another editor (\"nested editors\", like in\n      // the \"Editable Voids\" example on the docs site).\n      const voidNode =\n        potentialVoidNode && editorEl.contains(potentialVoidNode)\n          ? potentialVoidNode\n          : null\n      let leafNode = parentNode.closest('[data-slate-leaf]')\n      let domNode: DOMElement | null = null\n\n      // Calculate how far into the text node the `nearestNode` is, so that we\n      // can determine what the offset relative to the text node is.\n      if (leafNode) {\n        textNode = leafNode.closest('[data-slate-node=\"text\"]')\n\n        if (textNode) {\n          const window = ReactEditor.getWindow(editor)\n          const range = window.document.createRange()\n          range.setStart(textNode, 0)\n          range.setEnd(nearestNode, nearestOffset)\n\n          const contents = range.cloneContents()\n          const removals = [\n            ...Array.prototype.slice.call(\n              contents.querySelectorAll('[data-slate-zero-width]')\n            ),\n            ...Array.prototype.slice.call(\n              contents.querySelectorAll('[contenteditable=false]')\n            ),\n          ]\n\n          removals.forEach(el => {\n            // COMPAT: While composing at the start of a text node, some keyboards put\n            // the text content inside the zero width space.\n            if (\n              IS_ANDROID &&\n              !exactMatch &&\n              el.hasAttribute('data-slate-zero-width') &&\n              el.textContent.length > 0 &&\n              el.textContext !== '\\uFEFF'\n            ) {\n              if (el.textContent.startsWith('\\uFEFF')) {\n                el.textContent = el.textContent.slice(1)\n              }\n\n              return\n            }\n\n            el!.parentNode!.removeChild(el)\n          })\n\n          // COMPAT: Edge has a bug where Range.prototype.toString() will\n          // convert \\n into \\r\\n. The bug causes a loop when slate-react\n          // attempts to reposition its cursor to match the native position. Use\n          // textContent.length instead.\n          // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10291116/\n          offset = contents.textContent!.length\n          domNode = textNode\n        }\n      } else if (voidNode) {\n        // For void nodes, the element with the offset key will be a cousin, not an\n        // ancestor, so find it by going down from the nearest void parent and taking the\n        // first one that isn't inside a nested editor.\n        const leafNodes = voidNode.querySelectorAll('[data-slate-leaf]')\n        for (let index = 0; index < leafNodes.length; index++) {\n          const current = leafNodes[index]\n          if (ReactEditor.hasDOMNode(editor, current)) {\n            leafNode = current\n            break\n          }\n        }\n\n        // COMPAT: In read-only editors the leaf is not rendered.\n        if (!leafNode) {\n          offset = 1\n        } else {\n          textNode = leafNode.closest('[data-slate-node=\"text\"]')!\n          domNode = leafNode\n          offset = domNode.textContent!.length\n          domNode.querySelectorAll('[data-slate-zero-width]').forEach(el => {\n            offset -= el.textContent!.length\n          })\n        }\n      }\n\n      if (\n        domNode &&\n        offset === domNode.textContent!.length &&\n        // COMPAT: Android IMEs might remove the zero width space while composing,\n        // and we don't add it for line-breaks.\n        IS_ANDROID &&\n        domNode.getAttribute('data-slate-zero-width') === 'z' &&\n        domNode.textContent?.startsWith('\\uFEFF') &&\n        // COMPAT: If the parent node is a Slate zero-width space, editor is\n        // because the text node should have no characters. However, during IME\n        // composition the ASCII characters will be prepended to the zero-width\n        // space, so subtract 1 from the offset to account for the zero-width\n        // space character.\n        (parentNode.hasAttribute('data-slate-zero-width') ||\n          // COMPAT: In Firefox, `range.cloneContents()` returns an extra trailing '\\n'\n          // when the document ends with a new-line character. This results in the offset\n          // length being off by one, so we need to subtract one to account for this.\n          (IS_FIREFOX && domNode.textContent?.endsWith('\\n\\n')))\n      ) {\n        offset--\n      }\n    }\n\n    if (IS_ANDROID && !textNode && !exactMatch) {\n      const node = parentNode.hasAttribute('data-slate-node')\n        ? parentNode\n        : parentNode.closest('[data-slate-node]')\n\n      if (node && ReactEditor.hasDOMNode(editor, node, { editable: true })) {\n        const slateNode = ReactEditor.toSlateNode(editor, node)\n        let { path, offset } = Editor.start(\n          editor,\n          ReactEditor.findPath(editor, slateNode)\n        )\n\n        if (!node.querySelector('[data-slate-leaf]')) {\n          offset = nearestOffset\n        }\n\n        return { path, offset } as T extends true ? Point | null : Point\n      }\n    }\n\n    if (!textNode) {\n      if (suppressThrow) {\n        return null as T extends true ? Point | null : Point\n      }\n      throw new Error(\n        `Cannot resolve a Slate point from DOM point: ${domPoint}`\n      )\n    }\n\n    // COMPAT: If someone is clicking from one Slate editor into another,\n    // the select event fires twice, once for the old editor's `element`\n    // first, and then afterwards for the correct `element`. (2017/03/03)\n    const slateNode = ReactEditor.toSlateNode(editor, textNode!)\n    const path = ReactEditor.findPath(editor, slateNode)\n    return { path, offset } as T extends true ? Point | null : Point\n  },\n\n  /**\n   * Find a Slate range from a DOM range or selection.\n   */\n\n  toSlateRange<T extends boolean>(\n    editor: ReactEditor,\n    domRange: DOMRange | DOMStaticRange | DOMSelection,\n    options: {\n      exactMatch: boolean\n      suppressThrow: T\n    }\n  ): T extends true ? Range | null : Range {\n    const { exactMatch, suppressThrow } = options\n    const el = isDOMSelection(domRange)\n      ? domRange.anchorNode\n      : domRange.startContainer\n    let anchorNode\n    let anchorOffset\n    let focusNode\n    let focusOffset\n    let isCollapsed\n\n    if (el) {\n      if (isDOMSelection(domRange)) {\n        anchorNode = domRange.anchorNode\n        anchorOffset = domRange.anchorOffset\n        focusNode = domRange.focusNode\n        focusOffset = domRange.focusOffset\n        // COMPAT: There's a bug in chrome that always returns `true` for\n        // `isCollapsed` for a Selection that comes from a ShadowRoot.\n        // (2020/08/08)\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=447523\n        if (IS_CHROME && hasShadowRoot(anchorNode)) {\n          isCollapsed =\n            domRange.anchorNode === domRange.focusNode &&\n            domRange.anchorOffset === domRange.focusOffset\n        } else {\n          isCollapsed = domRange.isCollapsed\n        }\n      } else {\n        anchorNode = domRange.startContainer\n        anchorOffset = domRange.startOffset\n        focusNode = domRange.endContainer\n        focusOffset = domRange.endOffset\n        isCollapsed = domRange.collapsed\n      }\n    }\n\n    if (\n      anchorNode == null ||\n      focusNode == null ||\n      anchorOffset == null ||\n      focusOffset == null\n    ) {\n      throw new Error(\n        `Cannot resolve a Slate range from DOM range: ${domRange}`\n      )\n    }\n\n    // COMPAT: Triple-clicking a word in chrome will sometimes place the focus\n    // inside a `contenteditable=\"false\"` DOM node following the word, which\n    // will cause `toSlatePoint` to throw an error. (2023/03/07)\n    if (\n      'getAttribute' in focusNode &&\n      (focusNode as HTMLElement).getAttribute('contenteditable') === 'false'\n    ) {\n      focusNode = anchorNode\n      focusOffset = anchorNode.textContent?.length || 0\n    }\n\n    let anchor = ReactEditor.toSlatePoint(editor, [anchorNode, anchorOffset], {\n      exactMatch,\n      suppressThrow,\n    })\n    if (!anchor) {\n      return null as T extends true ? Range | null : Range\n    }\n\n    let focus = isCollapsed\n      ? anchor\n      : ReactEditor.toSlatePoint(editor, [focusNode, focusOffset], {\n          exactMatch,\n          suppressThrow,\n        })\n    if (!focus) {\n      return null as T extends true ? Range | null : Range\n    }\n\n    /**\n     * suppose we have this document:\n     *\n     * { type: 'paragraph',\n     *   children: [\n     *     { text: 'foo ' },\n     *     { text: 'bar' },\n     *     { text: ' baz' }\n     *   ]\n     * }\n     *\n     * a double click on \"bar\" on chrome will create this range:\n     *\n     * anchor -> [0,1] offset 0\n     * focus  -> [0,1] offset 3\n     *\n     * while on firefox will create this range:\n     *\n     * anchor -> [0,0] offset 4\n     * focus  -> [0,2] offset 0\n     *\n     * let's try to fix it...\n     */\n\n    if (IS_FIREFOX && !isCollapsed && anchorNode !== focusNode) {\n      const isEnd = Editor.isEnd(editor, anchor!, anchor.path)\n      const isStart = Editor.isStart(editor, focus!, focus.path)\n\n      if (isEnd) {\n        const after = Editor.after(editor, anchor as Point)\n        // Editor.after() might return undefined\n        anchor = (after || anchor!) as T extends true ? Point | null : Point\n      }\n\n      if (isStart) {\n        const before = Editor.before(editor, focus as Point)\n        focus = (before || focus!) as T extends true ? Point | null : Point\n      }\n    }\n\n    let range: Range = { anchor: anchor as Point, focus: focus as Point }\n    // if the selection is a hanging range that ends in a void\n    // and the DOM focus is an Element\n    // (meaning that the selection ends before the element)\n    // unhang the range to avoid mistakenly including the void\n    if (\n      Range.isExpanded(range) &&\n      Range.isForward(range) &&\n      isDOMElement(focusNode) &&\n      Editor.void(editor, { at: range.focus, mode: 'highest' })\n    ) {\n      range = Editor.unhangRange(editor, range, { voids: true })\n    }\n\n    return (range as unknown) as T extends true ? Range | null : Range\n  },\n\n  hasRange(editor: ReactEditor, range: Range): boolean {\n    const { anchor, focus } = range\n    return (\n      Editor.hasPath(editor, anchor.path) && Editor.hasPath(editor, focus.path)\n    )\n  },\n\n  /**\n   * Check if the target is in the editor.\n   */\n  hasTarget(\n    editor: ReactEditor,\n    target: EventTarget | null\n  ): target is DOMNode {\n    return isDOMNode(target) && ReactEditor.hasDOMNode(editor, target)\n  },\n\n  /**\n   * Check if the target is editable and in the editor.\n   */\n  hasEditableTarget(\n    editor: ReactEditor,\n    target: EventTarget | null\n  ): target is DOMNode {\n    return (\n      isDOMNode(target) &&\n      ReactEditor.hasDOMNode(editor, target, { editable: true })\n    )\n  },\n\n  /**\n   * Check if the target can be selectable\n   */\n  hasSelectableTarget(\n    editor: ReactEditor,\n    target: EventTarget | null\n  ): boolean {\n    return (\n      ReactEditor.hasEditableTarget(editor, target) ||\n      ReactEditor.isTargetInsideNonReadonlyVoid(editor, target)\n    )\n  },\n\n  /**\n   * Check if the target is inside void and in an non-readonly editor.\n   */\n  isTargetInsideNonReadonlyVoid(\n    editor: ReactEditor,\n    target: EventTarget | null\n  ): boolean {\n    if (IS_READ_ONLY.get(editor)) return false\n\n    const slateNode =\n      ReactEditor.hasTarget(editor, target) &&\n      ReactEditor.toSlateNode(editor, target)\n    return Element.isElement(slateNode) && Editor.isVoid(editor, slateNode)\n  },\n\n  /**\n   * Experimental and android specific: Flush all pending diffs and cancel composition at the next possible time.\n   */\n  androidScheduleFlush(editor: Editor) {\n    EDITOR_TO_SCHEDULE_FLUSH.get(editor)?.()\n  },\n\n  /**\n   * Experimental and android specific: Get pending diffs\n   */\n  androidPendingDiffs(editor: Editor) {\n    return EDITOR_TO_PENDING_DIFFS.get(editor)\n  },\n}\n", "import { Range } from 'slate'\nimport { PLACEHOLDER_SYMBOL } from './weak-maps'\n\nexport const shallowCompare = (obj1: {}, obj2: {}) =>\n  Object.keys(obj1).length === Object.keys(obj2).length &&\n  Object.keys(obj1).every(\n    key => obj2.hasOwnProperty(key) && obj1[key] === obj2[key]\n  )\n\nconst isDecorationFlagsEqual = (range: Range, other: Range) => {\n  const { anchor: rangeAnchor, focus: rangeFocus, ...rangeOwnProps } = range\n  const { anchor: otherAnchor, focus: otherFocus, ...otherOwnProps } = other\n\n  return (\n    range[PLACEHOLDER_SYMBOL] === other[PLACEHOLDER_SYMBOL] &&\n    shallowCompare(rangeOwnProps, otherOwnProps)\n  )\n}\n\n/**\n * Check if a list of decorator ranges are equal to another.\n *\n * PERF: this requires the two lists to also have the ranges inside them in the\n * same order, but this is an okay constraint for us since decorations are\n * kept in order, and the odd case where they aren't is okay to re-render for.\n */\n\nexport const isElementDecorationsEqual = (\n  list: Range[],\n  another: Range[]\n): boolean => {\n  if (list.length !== another.length) {\n    return false\n  }\n\n  for (let i = 0; i < list.length; i++) {\n    const range = list[i]\n    const other = another[i]\n\n    if (!Range.equals(range, other) || !isDecorationFlagsEqual(range, other)) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * Check if a list of decorator ranges are equal to another.\n *\n * PERF: this requires the two lists to also have the ranges inside them in the\n * same order, but this is an okay constraint for us since decorations are\n * kept in order, and the odd case where they aren't is okay to re-render for.\n */\n\nexport const isTextDecorationsEqual = (\n  list: Range[],\n  another: Range[]\n): boolean => {\n  if (list.length !== another.length) {\n    return false\n  }\n\n  for (let i = 0; i < list.length; i++) {\n    const range = list[i]\n    const other = another[i]\n\n    // compare only offsets because paths doesn't matter for text\n    if (\n      range.anchor.offset !== other.anchor.offset ||\n      range.focus.offset !== other.focus.offset ||\n      !isDecorationFlagsEqual(range, other)\n    ) {\n      return false\n    }\n  }\n\n  return true\n}\n", "import { useLayoutEffect, useEffect } from 'react'\nimport { CAN_USE_DOM } from '../utils/environment'\n\n/**\n * Prevent warning on SSR by falling back to useEffect when DOM isn't available\n */\n\nexport const useIsomorphicLayoutEffect = CAN_USE_DOM\n  ? useLayoutEffect\n  : useEffect\n", "import React, { forwardRef, memo, useRef, useState } from 'react'\nimport { Editor, Text, Path, Element, Node } from 'slate'\n\nimport { ReactEditor, useSlateStatic } from '..'\nimport { useIsomorphicLayoutEffect } from '../hooks/use-isomorphic-layout-effect'\nimport { IS_ANDROID } from '../utils/environment'\nimport { MARK_PLACEHOLDER_SYMBOL } from '../utils/weak-maps'\n\n/**\n * Leaf content strings.\n */\n\nconst String = (props: {\n  isLast: boolean\n  leaf: Text\n  parent: Element\n  text: Text\n}) => {\n  const { isLast, leaf, parent, text } = props\n  const editor = useSlateStatic()\n  const path = ReactEditor.findPath(editor, text)\n  const parentPath = Path.parent(path)\n  const isMarkPlaceholder = leaf[MARK_PLACEHOLDER_SYMBOL] === true\n\n  // COMPAT: Render text inside void nodes with a zero-width space.\n  // So the node can contain selection but the text is not visible.\n  if (editor.isVoid(parent)) {\n    return <ZeroWidthString length={Node.string(parent).length} />\n  }\n\n  // COMPAT: If this is the last text node in an empty block, render a zero-\n  // width space that will convert into a line break when copying and pasting\n  // to support expected plain text.\n  if (\n    leaf.text === '' &&\n    parent.children[parent.children.length - 1] === text &&\n    !editor.isInline(parent) &&\n    Editor.string(editor, parentPath) === ''\n  ) {\n    return <ZeroWidthString isLineBreak isMarkPlaceholder={isMarkPlaceholder} />\n  }\n\n  // COMPAT: If the text is empty, it's because it's on the edge of an inline\n  // node, so we render a zero-width space so that the selection can be\n  // inserted next to it still.\n  if (leaf.text === '') {\n    return <ZeroWidthString isMarkPlaceholder={isMarkPlaceholder} />\n  }\n\n  // COMPAT: Browsers will collapse trailing new lines at the end of blocks,\n  // so we need to add an extra trailing new lines to prevent that.\n  if (isLast && leaf.text.slice(-1) === '\\n') {\n    return <TextString isTrailing text={leaf.text} />\n  }\n\n  return <TextString text={leaf.text} />\n}\n\n/**\n * Leaf strings with text in them.\n */\nconst TextString = (props: { text: string; isTrailing?: boolean }) => {\n  const { text, isTrailing = false } = props\n  const ref = useRef<HTMLSpanElement>(null)\n  const getTextContent = () => {\n    return `${text ?? ''}${isTrailing ? '\\n' : ''}`\n  }\n  const [initialText] = useState(getTextContent)\n\n  // This is the actual text rendering boundary where we interface with the DOM\n  // The text is not rendered as part of the virtual DOM, as since we handle basic character insertions natively,\n  // updating the DOM is not a one way dataflow anymore. What we need here is not reconciliation and diffing\n  // with previous version of the virtual DOM, but rather diffing with the actual DOM element, and replace the DOM <span> content\n  // exactly if and only if its current content does not match our current virtual DOM.\n  // Otherwise the DOM TextNode would always be replaced by React as the user types, which interferes with native text features,\n  // eg makes native spellcheck opt out from checking the text node.\n\n  // useLayoutEffect: updating our span before browser paint\n  useIsomorphicLayoutEffect(() => {\n    // null coalescing text to make sure we're not outputing \"null\" as a string in the extreme case it is nullish at runtime\n    const textWithTrailing = getTextContent()\n\n    if (ref.current && ref.current.textContent !== textWithTrailing) {\n      ref.current.textContent = textWithTrailing\n    }\n\n    // intentionally not specifying dependencies, so that this effect runs on every render\n    // as this effectively replaces \"specifying the text in the virtual DOM under the <span> below\" on each render\n  })\n\n  // We intentionally render a memoized <span> that only receives the initial text content when the component is mounted.\n  // We defer to the layout effect above to update the `textContent` of the span element when needed.\n  return <MemoizedText ref={ref}>{initialText}</MemoizedText>\n}\n\nconst MemoizedText = memo(\n  forwardRef<HTMLSpanElement, { children: string }>((props, ref) => {\n    return (\n      <span data-slate-string ref={ref}>\n        {props.children}\n      </span>\n    )\n  })\n)\n\n/**\n * Leaf strings without text, render as zero-width strings.\n */\n\nexport const ZeroWidthString = (props: {\n  length?: number\n  isLineBreak?: boolean\n  isMarkPlaceholder?: boolean\n}) => {\n  const { length = 0, isLineBreak = false, isMarkPlaceholder = false } = props\n\n  const attributes = {\n    'data-slate-zero-width': isLineBreak ? 'n' : 'z',\n    'data-slate-length': length,\n  }\n\n  if (isMarkPlaceholder) {\n    attributes['data-slate-mark-placeholder'] = true\n  }\n\n  return (\n    <span {...attributes}>\n      {!IS_ANDROID || !isLineBreak ? '\\uFEFF' : null}\n      {isLineBreak ? <br /> : null}\n    </span>\n  )\n}\n\nexport default String\n", "import { createContext, useContext } from 'react'\nimport { ReactEditor } from '../plugin/react-editor'\nimport { Editor } from 'slate'\n\n/**\n * A React context for sharing the editor object.\n */\n\nexport const EditorContext = createContext<ReactEditor | null>(null)\n\n/**\n * Get the current editor object from the React context.\n */\n\nexport const useSlateStatic = (): Editor => {\n  const editor = useContext(EditorContext)\n\n  if (!editor) {\n    throw new Error(\n      `The \\`useSlateStatic\\` hook must be used inside the <Slate> component's context.`\n    )\n  }\n\n  return editor\n}\n", "import React, {\n  useRef,\n  useCallback,\n  MutableRefObject,\n  useState,\n  useEffect,\n} from 'react'\nimport { Element, Text } from 'slate'\nimport { ResizeObserver as ResizeObserverPolyfill } from '@juggle/resize-observer'\nimport String from './string'\nimport {\n  PLACEHOLDER_SYMBOL,\n  EDITOR_TO_PLACEHOLDER_ELEMENT,\n  EDITOR_TO_FORCE_RENDER,\n} from '../utils/weak-maps'\nimport { RenderLeafProps, RenderPlaceholderProps } from './editable'\nimport { useSlateStatic } from '../hooks/use-slate-static'\nimport { IS_SAFARI } from '../utils/environment'\n\nfunction disconnectPlaceholderResizeObserver(\n  placeholderResizeObserver: MutableRefObject<ResizeObserver | null>,\n  releaseObserver: boolean\n) {\n  if (placeholderResizeObserver.current) {\n    placeholderResizeObserver.current.disconnect()\n    if (releaseObserver) {\n      placeholderResizeObserver.current = null\n    }\n  }\n}\n\ntype TimerId = ReturnType<typeof setTimeout> | null\n\nfunction clearTimeoutRef(timeoutRef: MutableRefObject<TimerId>) {\n  if (timeoutRef.current) {\n    clearTimeout(timeoutRef.current)\n    timeoutRef.current = null\n  }\n}\n\n/**\n * Individual leaves in a text node with unique formatting.\n */\nconst Leaf = (props: {\n  isLast: boolean\n  leaf: Text\n  parent: Element\n  renderPlaceholder: (props: RenderPlaceholderProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  text: Text\n}) => {\n  const {\n    leaf,\n    isLast,\n    text,\n    parent,\n    renderPlaceholder,\n    renderLeaf = (props: RenderLeafProps) => <DefaultLeaf {...props} />,\n  } = props\n\n  const editor = useSlateStatic()\n  const placeholderResizeObserver = useRef<ResizeObserver | null>(null)\n  const placeholderRef = useRef<HTMLElement | null>(null)\n  const [showPlaceholder, setShowPlaceholder] = useState(false)\n  const showPlaceholderTimeoutRef = useRef<TimerId>(null)\n\n  const callbackPlaceholderRef = useCallback(\n    (placeholderEl: HTMLElement | null) => {\n      disconnectPlaceholderResizeObserver(\n        placeholderResizeObserver,\n        placeholderEl == null\n      )\n\n      if (placeholderEl == null) {\n        EDITOR_TO_PLACEHOLDER_ELEMENT.delete(editor)\n        leaf.onPlaceholderResize?.(null)\n      } else {\n        EDITOR_TO_PLACEHOLDER_ELEMENT.set(editor, placeholderEl)\n\n        if (!placeholderResizeObserver.current) {\n          // Create a new observer and observe the placeholder element.\n          const ResizeObserver = window.ResizeObserver || ResizeObserverPolyfill\n          placeholderResizeObserver.current = new ResizeObserver(() => {\n            leaf.onPlaceholderResize?.(placeholderEl)\n          })\n        }\n        placeholderResizeObserver.current.observe(placeholderEl)\n        placeholderRef.current = placeholderEl\n      }\n    },\n    [placeholderRef, leaf, editor]\n  )\n\n  let children = (\n    <String isLast={isLast} leaf={leaf} parent={parent} text={text} />\n  )\n\n  const leafIsPlaceholder = leaf[PLACEHOLDER_SYMBOL]\n  useEffect(() => {\n    if (leafIsPlaceholder) {\n      if (!showPlaceholderTimeoutRef.current) {\n        // Delay the placeholder so it will not render in a selection\n        showPlaceholderTimeoutRef.current = setTimeout(() => {\n          setShowPlaceholder(true)\n          showPlaceholderTimeoutRef.current = null\n        }, 300)\n      }\n    } else {\n      clearTimeoutRef(showPlaceholderTimeoutRef)\n      setShowPlaceholder(false)\n    }\n    return () => clearTimeoutRef(showPlaceholderTimeoutRef)\n  }, [leafIsPlaceholder, setShowPlaceholder])\n\n  if (leafIsPlaceholder && showPlaceholder) {\n    const placeholderProps: RenderPlaceholderProps = {\n      children: leaf.placeholder,\n      attributes: {\n        'data-slate-placeholder': true,\n        style: {\n          position: 'absolute',\n          pointerEvents: 'none',\n          width: '100%',\n          maxWidth: '100%',\n          display: 'block',\n          opacity: '0.333',\n          userSelect: 'none',\n          textDecoration: 'none',\n          // Fixes https://github.com/udecode/plate/issues/2315\n          WebkitUserModify: IS_SAFARI ? 'inherit' : undefined,\n        },\n        contentEditable: false,\n        ref: callbackPlaceholderRef,\n      },\n    }\n\n    children = (\n      <React.Fragment>\n        {renderPlaceholder(placeholderProps)}\n        {children}\n      </React.Fragment>\n    )\n  }\n\n  // COMPAT: Having the `data-` attributes on these leaf elements ensures that\n  // in certain misbehaving browsers they aren't weirdly cloned/destroyed by\n  // contenteditable behaviors. (2019/05/08)\n  const attributes: {\n    'data-slate-leaf': true\n  } = {\n    'data-slate-leaf': true,\n  }\n\n  return renderLeaf({ attributes, children, leaf, text })\n}\n\nconst MemoizedLeaf = React.memo(Leaf, (prev, next) => {\n  return (\n    next.parent === prev.parent &&\n    next.isLast === prev.isLast &&\n    next.renderLeaf === prev.renderLeaf &&\n    next.renderPlaceholder === prev.renderPlaceholder &&\n    next.text === prev.text &&\n    Text.equals(next.leaf, prev.leaf) &&\n    next.leaf[PLACEHOLDER_SYMBOL] === prev.leaf[PLACEHOLDER_SYMBOL]\n  )\n})\n\nexport const DefaultLeaf = (props: RenderLeafProps) => {\n  const { attributes, children } = props\n  return <span {...attributes}>{children}</span>\n}\n\nexport default MemoizedLeaf\n", "import React, { useRef, useCallback } from 'react'\nimport { Element, Range, Text as SlateText } from 'slate'\nimport { ReactEditor, useSlateStatic } from '..'\nimport { useIsomorphicLayoutEffect } from '../hooks/use-isomorphic-layout-effect'\nimport { isTextDecorationsEqual } from '../utils/range-list'\nimport {\n  EDITOR_TO_KEY_TO_ELEMENT,\n  ELEMENT_TO_NODE,\n  NODE_TO_ELEMENT,\n} from '../utils/weak-maps'\nimport { RenderLeafProps, RenderPlaceholderProps } from './editable'\nimport Leaf from './leaf'\n\n/**\n * Text.\n */\n\nconst Text = (props: {\n  decorations: Range[]\n  isLast: boolean\n  parent: Element\n  renderPlaceholder: (props: RenderPlaceholderProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  text: SlateText\n}) => {\n  const {\n    decorations,\n    isLast,\n    parent,\n    renderPlaceholder,\n    renderLeaf,\n    text,\n  } = props\n  const editor = useSlateStatic()\n  const ref = useRef<HTMLSpanElement | null>(null)\n  const leaves = SlateText.decorations(text, decorations)\n  const key = ReactEditor.findKey(editor, text)\n  const children = []\n\n  for (let i = 0; i < leaves.length; i++) {\n    const leaf = leaves[i]\n\n    children.push(\n      <Leaf\n        isLast={isLast && i === leaves.length - 1}\n        key={`${key.id}-${i}`}\n        renderPlaceholder={renderPlaceholder}\n        leaf={leaf}\n        text={text}\n        parent={parent}\n        renderLeaf={renderLeaf}\n      />\n    )\n  }\n\n  // Update element-related weak maps with the DOM element ref.\n  const callbackRef = useCallback(\n    (span: HTMLSpanElement | null) => {\n      const KEY_TO_ELEMENT = EDITOR_TO_KEY_TO_ELEMENT.get(editor)\n      if (span) {\n        KEY_TO_ELEMENT?.set(key, span)\n        NODE_TO_ELEMENT.set(text, span)\n        ELEMENT_TO_NODE.set(span, text)\n      } else {\n        KEY_TO_ELEMENT?.delete(key)\n        NODE_TO_ELEMENT.delete(text)\n        if (ref.current) {\n          ELEMENT_TO_NODE.delete(ref.current)\n        }\n      }\n      ref.current = span\n    },\n    [ref, editor, key, text]\n  )\n  return (\n    <span data-slate-node=\"text\" ref={callbackRef}>\n      {children}\n    </span>\n  )\n}\n\nconst MemoizedText = React.memo(Text, (prev, next) => {\n  return (\n    next.parent === prev.parent &&\n    next.isLast === prev.isLast &&\n    next.renderLeaf === prev.renderLeaf &&\n    next.renderPlaceholder === prev.renderPlaceholder &&\n    next.text === prev.text &&\n    isTextDecorationsEqual(next.decorations, prev.decorations)\n  )\n})\n\nexport default MemoizedText\n", "import React, { useCallback } from 'react'\nimport getDirection from 'direction'\nimport { Editor, Node, Range, Element as SlateElement } from 'slate'\n\nimport Text from './text'\nimport useChildren from '../hooks/use-children'\nimport { ReactEditor, useSlateStatic, useReadOnly } from '..'\nimport {\n  NODE_TO_ELEMENT,\n  ELEMENT_TO_NODE,\n  NODE_TO_PARENT,\n  NODE_TO_INDEX,\n  EDITOR_TO_KEY_TO_ELEMENT,\n} from '../utils/weak-maps'\nimport { isElementDecorationsEqual } from '../utils/range-list'\nimport {\n  RenderElementProps,\n  RenderLeafProps,\n  RenderPlaceholderProps,\n} from './editable'\n\n/**\n * Element.\n */\n\nconst Element = (props: {\n  decorations: Range[]\n  element: SlateElement\n  renderElement?: (props: RenderElementProps) => JSX.Element\n  renderPlaceholder: (props: RenderPlaceholderProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  selection: Range | null\n}) => {\n  const {\n    decorations,\n    element,\n    renderElement = (p: RenderElementProps) => <DefaultElement {...p} />,\n    renderPlaceholder,\n    renderLeaf,\n    selection,\n  } = props\n  const editor = useSlateStatic()\n  const readOnly = useReadOnly()\n  const isInline = editor.isInline(element)\n  const key = ReactEditor.findKey(editor, element)\n  const ref = useCallback(\n    (ref: HTMLElement | null) => {\n      // Update element-related weak maps with the DOM element ref.\n      const KEY_TO_ELEMENT = EDITOR_TO_KEY_TO_ELEMENT.get(editor)\n      if (ref) {\n        KEY_TO_ELEMENT?.set(key, ref)\n        NODE_TO_ELEMENT.set(element, ref)\n        ELEMENT_TO_NODE.set(ref, element)\n      } else {\n        KEY_TO_ELEMENT?.delete(key)\n        NODE_TO_ELEMENT.delete(element)\n      }\n    },\n    [editor, key, element]\n  )\n  let children: React.ReactNode = useChildren({\n    decorations,\n    node: element,\n    renderElement,\n    renderPlaceholder,\n    renderLeaf,\n    selection,\n  })\n\n  // Attributes that the developer must mix into the element in their\n  // custom node renderer component.\n  const attributes: {\n    'data-slate-node': 'element'\n    'data-slate-void'?: true\n    'data-slate-inline'?: true\n    contentEditable?: false\n    dir?: 'rtl'\n    ref: any\n  } = {\n    'data-slate-node': 'element',\n    ref,\n  }\n\n  if (isInline) {\n    attributes['data-slate-inline'] = true\n  }\n\n  // If it's a block node with inline children, add the proper `dir` attribute\n  // for text direction.\n  if (!isInline && Editor.hasInlines(editor, element)) {\n    const text = Node.string(element)\n    const dir = getDirection(text)\n\n    if (dir === 'rtl') {\n      attributes.dir = dir\n    }\n  }\n\n  // If it's a void node, wrap the children in extra void-specific elements.\n  if (Editor.isVoid(editor, element)) {\n    attributes['data-slate-void'] = true\n\n    if (!readOnly && isInline) {\n      attributes.contentEditable = false\n    }\n\n    const Tag = isInline ? 'span' : 'div'\n    const [[text]] = Node.texts(element)\n\n    children = (\n      <Tag\n        data-slate-spacer\n        style={{\n          height: '0',\n          color: 'transparent',\n          outline: 'none',\n          position: 'absolute',\n        }}\n      >\n        <Text\n          renderPlaceholder={renderPlaceholder}\n          decorations={[]}\n          isLast={false}\n          parent={element}\n          text={text}\n        />\n      </Tag>\n    )\n\n    NODE_TO_INDEX.set(text, 0)\n    NODE_TO_PARENT.set(text, element)\n  }\n\n  return renderElement({ attributes, children, element })\n}\n\nconst MemoizedElement = React.memo(Element, (prev, next) => {\n  return (\n    prev.element === next.element &&\n    prev.renderElement === next.renderElement &&\n    prev.renderLeaf === next.renderLeaf &&\n    prev.renderPlaceholder === next.renderPlaceholder &&\n    isElementDecorationsEqual(prev.decorations, next.decorations) &&\n    (prev.selection === next.selection ||\n      (!!prev.selection &&\n        !!next.selection &&\n        Range.equals(prev.selection, next.selection)))\n  )\n})\n\n/**\n * The default element renderer.\n */\n\nexport const DefaultElement = (props: RenderElementProps) => {\n  const { attributes, children, element } = props\n  const editor = useSlateStatic()\n  const Tag = editor.isInline(element) ? 'span' : 'div'\n  return (\n    <Tag {...attributes} style={{ position: 'relative' }}>\n      {children}\n    </Tag>\n  )\n}\n\nexport default MemoizedElement\n", "import { createContext, useContext } from 'react'\nimport { Range, NodeEntry } from 'slate'\n\n/**\n * A React context for sharing the `decorate` prop of the editable.\n */\n\nexport const DecorateContext = createContext<(entry: NodeEntry) => Range[]>(\n  () => []\n)\n\n/**\n * Get the current `decorate` prop of the editable.\n */\n\nexport const useDecorate = (): ((entry: NodeEntry) => Range[]) => {\n  return useContext(DecorateContext)\n}\n", "import { createContext, useContext } from 'react'\n\n/**\n * A React context for sharing the `selected` state of an element.\n */\n\nexport const SelectedContext = createContext(false)\n\n/**\n * Get the current `selected` state of an element.\n */\n\nexport const useSelected = (): boolean => {\n  return useContext(SelectedContext)\n}\n", "import React from 'react'\nimport { Editor, Range, Element, Ancestor, Descendant } from 'slate'\n\nimport ElementComponent from '../components/element'\nimport TextComponent from '../components/text'\nimport { ReactEditor } from '../plugin/react-editor'\nimport { useSlateStatic } from './use-slate-static'\nimport { useDecorate } from './use-decorate'\nimport { NODE_TO_INDEX, NODE_TO_PARENT } from '../utils/weak-maps'\nimport {\n  RenderElementProps,\n  RenderLeafProps,\n  RenderPlaceholderProps,\n} from '../components/editable'\nimport { SelectedContext } from './use-selected'\n\n/**\n * Children.\n */\n\nconst useChildren = (props: {\n  decorations: Range[]\n  node: Ancestor\n  renderElement?: (props: RenderElementProps) => JSX.Element\n  renderPlaceholder: (props: RenderPlaceholderProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  selection: Range | null\n}) => {\n  const {\n    decorations,\n    node,\n    renderElement,\n    renderPlaceholder,\n    renderLeaf,\n    selection,\n  } = props\n  const decorate = useDecorate()\n  const editor = useSlateStatic()\n  const path = ReactEditor.findPath(editor, node)\n  const children = []\n  const isLeafBlock =\n    Element.isElement(node) &&\n    !editor.isInline(node) &&\n    Editor.hasInlines(editor, node)\n\n  for (let i = 0; i < node.children.length; i++) {\n    const p = path.concat(i)\n    const n = node.children[i] as Descendant\n    const key = ReactEditor.findKey(editor, n)\n    const range = Editor.range(editor, p)\n    const sel = selection && Range.intersection(range, selection)\n    const ds = decorate([n, p])\n\n    for (const dec of decorations) {\n      const d = Range.intersection(dec, range)\n\n      if (d) {\n        ds.push(d)\n      }\n    }\n\n    if (Element.isElement(n)) {\n      children.push(\n        <SelectedContext.Provider key={`provider-${key.id}`} value={!!sel}>\n          <ElementComponent\n            decorations={ds}\n            element={n}\n            key={key.id}\n            renderElement={renderElement}\n            renderPlaceholder={renderPlaceholder}\n            renderLeaf={renderLeaf}\n            selection={sel}\n          />\n        </SelectedContext.Provider>\n      )\n    } else {\n      children.push(\n        <TextComponent\n          decorations={ds}\n          key={key.id}\n          isLast={isLeafBlock && i === node.children.length - 1}\n          parent={node}\n          renderPlaceholder={renderPlaceholder}\n          renderLeaf={renderLeaf}\n          text={n}\n        />\n      )\n    }\n\n    NODE_TO_INDEX.set(n, i)\n    NODE_TO_PARENT.set(n, node)\n  }\n\n  return children\n}\n\nexport default useChildren\n", "import { createContext, useContext } from 'react'\n\n/**\n * A React context for sharing the `readOnly` state of the editor.\n */\n\nexport const ReadOnlyContext = createContext(false)\n\n/**\n * Get the current `readOnly` state of the editor.\n */\n\nexport const useReadOnly = (): boolean => {\n  return useContext(ReadOnlyContext)\n}\n", "import { createContext, useContext } from 'react'\nimport { Editor } from 'slate'\nimport { ReactEditor } from '../plugin/react-editor'\n\n/**\n * A React context for sharing the editor object, in a way that re-renders the\n * context whenever changes occur.\n */\n\nexport interface SlateContextValue {\n  v: number\n  editor: ReactEditor\n}\n\nexport const SlateContext = createContext<{\n  v: number\n  editor: ReactEditor\n} | null>(null)\n\n/**\n * Get the current editor object from the React context.\n */\n\nexport const useSlate = (): Editor => {\n  const context = useContext(SlateContext)\n\n  if (!context) {\n    throw new Error(\n      `The \\`useSlate\\` hook must be used inside the <Slate> component's context.`\n    )\n  }\n\n  const { editor } = context\n  return editor\n}\n\nexport const useSlateWithV = () => {\n  const context = useContext(SlateContext)\n\n  if (!context) {\n    throw new Error(\n      `The \\`useSlate\\` hook must be used inside the <Slate> component's context.`\n    )\n  }\n\n  return context\n}\n", "export const TRIPLE_CLICK = 3\n", "import { isKeyHotkey } from 'is-hotkey'\nimport { IS_APPLE } from './environment'\n\n/**\n * Hotkey mappings for each platform.\n */\n\nconst HOTKEYS = {\n  bold: 'mod+b',\n  compose: ['down', 'left', 'right', 'up', 'backspace', 'enter'],\n  moveBackward: 'left',\n  moveForward: 'right',\n  moveWordBackward: 'ctrl+left',\n  moveWordForward: 'ctrl+right',\n  deleteBackward: 'shift?+backspace',\n  deleteForward: 'shift?+delete',\n  extendBackward: 'shift+left',\n  extendForward: 'shift+right',\n  italic: 'mod+i',\n  insertSoftBreak: 'shift+enter',\n  splitBlock: 'enter',\n  undo: 'mod+z',\n}\n\nconst APPLE_HOTKEYS = {\n  moveLineBackward: 'opt+up',\n  moveLineForward: 'opt+down',\n  moveWordBackward: 'opt+left',\n  moveWordForward: 'opt+right',\n  deleteBackward: ['ctrl+backspace', 'ctrl+h'],\n  deleteForward: ['ctrl+delete', 'ctrl+d'],\n  deleteLineBackward: 'cmd+shift?+backspace',\n  deleteLineForward: ['cmd+shift?+delete', 'ctrl+k'],\n  deleteWordBackward: 'opt+shift?+backspace',\n  deleteWordForward: 'opt+shift?+delete',\n  extendLineBackward: 'opt+shift+up',\n  extendLineForward: 'opt+shift+down',\n  redo: 'cmd+shift+z',\n  transposeCharacter: 'ctrl+t',\n}\n\nconst WINDOWS_HOTKEYS = {\n  deleteWordBackward: 'ctrl+shift?+backspace',\n  deleteWordForward: 'ctrl+shift?+delete',\n  redo: ['ctrl+y', 'ctrl+shift+z'],\n}\n\n/**\n * Create a platform-aware hotkey checker.\n */\n\nconst create = (key: string) => {\n  const generic = HOTKEYS[key]\n  const apple = APPLE_HOTKEYS[key]\n  const windows = WINDOWS_HOTKEYS[key]\n  const isGeneric = generic && isKeyHotkey(generic)\n  const isApple = apple && isKeyHotkey(apple)\n  const isWindows = windows && isKeyHotkey(windows)\n\n  return (event: KeyboardEvent) => {\n    if (isGeneric && isGeneric(event)) return true\n    if (IS_APPLE && isApple && isApple(event)) return true\n    if (!IS_APPLE && isWindows && isWindows(event)) return true\n    return false\n  }\n}\n\n/**\n * Hotkeys.\n */\n\nexport default {\n  isBold: create('bold'),\n  isCompose: create('compose'),\n  isMoveBackward: create('moveBackward'),\n  isMoveForward: create('moveForward'),\n  isDeleteBackward: create('deleteBackward'),\n  isDeleteForward: create('deleteForward'),\n  isDeleteLineBackward: create('deleteLineBackward'),\n  isDeleteLineForward: create('deleteLineForward'),\n  isDeleteWordBackward: create('deleteWordBackward'),\n  isDeleteWordForward: create('deleteWordForward'),\n  isExtendBackward: create('extendBackward'),\n  isExtendForward: create('extendForward'),\n  isExtendLineBackward: create('extendLineBackward'),\n  isExtendLineForward: create('extendLineForward'),\n  isItalic: create('italic'),\n  isMoveLineBackward: create('moveLineBackward'),\n  isMoveLineForward: create('moveLineForward'),\n  isMoveWordBackward: create('moveWordBackward'),\n  isMoveWordForward: create('moveWordForward'),\n  isRedo: create('redo'),\n  isSoftBreak: create('insertSoftBreak'),\n  isSplitBlock: create('splitBlock'),\n  isTransposeCharacter: create('transposeCharacter'),\n  isUndo: create('undo'),\n}\n", "import { RefObject } from 'react'\nimport { ReactEditor } from '../../plugin/react-editor'\nimport { isTrackedMutation } from '../../utils/dom'\n\nexport type RestoreDOMManager = {\n  registerMutations: (mutations: MutationRecord[]) => void\n  restoreDOM: () => void\n  clear: () => void\n}\n\nexport const createRestoreDomManager = (\n  editor: ReactEditor,\n  receivedUserInput: RefObject<boolean>\n): RestoreDOMManager => {\n  let bufferedMutations: MutationRecord[] = []\n\n  const clear = () => {\n    bufferedMutations = []\n  }\n\n  const registerMutations = (mutations: MutationRecord[]) => {\n    if (!receivedUserInput.current) {\n      return\n    }\n\n    const trackedMutations = mutations.filter(mutation =>\n      isTrackedMutation(editor, mutation, mutations)\n    )\n\n    bufferedMutations.push(...trackedMutations)\n  }\n\n  function restoreDOM() {\n    if (bufferedMutations.length > 0) {\n      bufferedMutations.reverse().forEach(mutation => {\n        if (mutation.type === 'characterData') {\n          // We don't want to restore the DOM for characterData mutations\n          // because this interrupts the composition.\n          return\n        }\n\n        mutation.removedNodes.forEach(node => {\n          mutation.target.insertBefore(node, mutation.nextSibling)\n        })\n\n        mutation.addedNodes.forEach(node => {\n          mutation.target.removeChild(node)\n        })\n      })\n\n      // Clear buffered mutations to ensure we don't undo them twice\n      clear()\n    }\n  }\n\n  return {\n    registerMutations,\n    restoreDOM,\n    clear,\n  }\n}\n", "import React, { Component, ComponentType, ContextType, RefObject } from 'react'\nimport { EditorContext } from '../../hooks/use-slate-static'\nimport { IS_ANDROID } from '../../utils/environment'\nimport {\n  createRestoreDomManager,\n  RestoreDOMManager,\n} from './restore-dom-manager'\n\nconst MUTATION_OBSERVER_CONFIG: MutationObserverInit = {\n  subtree: true,\n  childList: true,\n  characterData: true,\n  characterDataOldValue: true,\n}\n\ntype RestoreDOMProps = {\n  receivedUserInput: RefObject<boolean>\n  node: RefObject<HTMLDivElement>\n}\n\n// We have to use a class component here since we rely on `getSnapshotBeforeUpdate` which has no FC equivalent\n// to run code synchronously immediately before react commits the component update to the DOM.\nclass RestoreDOMComponent extends Component<RestoreDOMProps> {\n  static contextType = EditorContext\n  context: ContextType<typeof EditorContext> = null\n\n  private manager: RestoreDOMManager | null = null\n  private mutationObserver: MutationObserver | null = null\n\n  observe() {\n    const { node } = this.props\n    if (!node.current) {\n      throw new Error('Failed to attach MutationObserver, `node` is undefined')\n    }\n\n    this.mutationObserver?.observe(node.current, MUTATION_OBSERVER_CONFIG)\n  }\n\n  componentDidMount() {\n    const { receivedUserInput } = this.props\n    const editor = this.context!\n\n    this.manager = createRestoreDomManager(editor, receivedUserInput)\n    this.mutationObserver = new MutationObserver(this.manager.registerMutations)\n\n    this.observe()\n  }\n\n  getSnapshotBeforeUpdate() {\n    const pendingMutations = this.mutationObserver?.takeRecords()\n    if (pendingMutations?.length) {\n      this.manager?.registerMutations(pendingMutations)\n    }\n\n    this.mutationObserver?.disconnect()\n    this.manager?.restoreDOM()\n\n    return null\n  }\n\n  componentDidUpdate() {\n    this.manager?.clear()\n    this.observe()\n  }\n\n  componentWillUnmount() {\n    this.mutationObserver?.disconnect()\n  }\n\n  render() {\n    return this.props.children\n  }\n}\n\nexport const RestoreDOM: ComponentType<RestoreDOMProps> = IS_ANDROID\n  ? RestoreDOMComponent\n  : ({ children }) => <>{children}</>\n", "import {\n  Editor,\n  Node,\n  Operation,\n  Path,\n  Point,\n  Range,\n  Text,\n  Element,\n} from 'slate'\nimport { EDITOR_TO_PENDING_DIFFS } from './weak-maps'\n\nexport type StringDiff = {\n  start: number\n  end: number\n  text: string\n}\n\nexport type TextDiff = {\n  id: number\n  path: Path\n  diff: StringDiff\n}\n\n/**\n * Check whether a text diff was applied in a way we can perform the pending action on /\n * recover the pending selection.\n */\nexport function verifyDiffState(editor: Editor, textDiff: TextDiff): boolean {\n  const { path, diff } = textDiff\n  if (!Editor.hasPath(editor, path)) {\n    return false\n  }\n\n  const node = Node.get(editor, path)\n  if (!Text.isText(node)) {\n    return false\n  }\n\n  if (diff.start !== node.text.length || diff.text.length === 0) {\n    return (\n      node.text.slice(diff.start, diff.start + diff.text.length) === diff.text\n    )\n  }\n\n  const nextPath = Path.next(path)\n  if (!Editor.hasPath(editor, nextPath)) {\n    return false\n  }\n\n  const nextNode = Node.get(editor, nextPath)\n  return Text.isText(nextNode) && nextNode.text.startsWith(diff.text)\n}\n\nexport function applyStringDiff(text: string, ...diffs: StringDiff[]) {\n  return diffs.reduce(\n    (text, diff) =>\n      text.slice(0, diff.start) + diff.text + text.slice(diff.end),\n    text\n  )\n}\n\nfunction longestCommonPrefixLength(str: string, another: string) {\n  const length = Math.min(str.length, another.length)\n\n  for (let i = 0; i < length; i++) {\n    if (str.charAt(i) !== another.charAt(i)) {\n      return i\n    }\n  }\n\n  return length\n}\n\nfunction longestCommonSuffixLength(\n  str: string,\n  another: string,\n  max: number\n): number {\n  const length = Math.min(str.length, another.length, max)\n\n  for (let i = 0; i < length; i++) {\n    if (\n      str.charAt(str.length - i - 1) !== another.charAt(another.length - i - 1)\n    ) {\n      return i\n    }\n  }\n\n  return length\n}\n\n/**\n * Remove redundant changes from the diff so that it spans the minimal possible range\n */\nexport function normalizeStringDiff(targetText: string, diff: StringDiff) {\n  const { start, end, text } = diff\n  const removedText = targetText.slice(start, end)\n\n  const prefixLength = longestCommonPrefixLength(removedText, text)\n  const max = Math.min(\n    removedText.length - prefixLength,\n    text.length - prefixLength\n  )\n  const suffixLength = longestCommonSuffixLength(removedText, text, max)\n\n  const normalized: StringDiff = {\n    start: start + prefixLength,\n    end: end - suffixLength,\n    text: text.slice(prefixLength, text.length - suffixLength),\n  }\n\n  if (normalized.start === normalized.end && normalized.text.length === 0) {\n    return null\n  }\n\n  return normalized\n}\n\n/**\n * Return a string diff that is equivalent to applying b after a spanning the range of\n * both changes\n */\nexport function mergeStringDiffs(\n  targetText: string,\n  a: StringDiff,\n  b: StringDiff\n): StringDiff | null {\n  const start = Math.min(a.start, b.start)\n  const overlap = Math.max(\n    0,\n    Math.min(a.start + a.text.length, b.end) - b.start\n  )\n\n  const applied = applyStringDiff(targetText, a, b)\n  const sliceEnd = Math.max(\n    b.start + b.text.length,\n    a.start +\n      a.text.length +\n      (a.start + a.text.length > b.start ? b.text.length : 0) -\n      overlap\n  )\n\n  const text = applied.slice(start, sliceEnd)\n  const end = Math.max(a.end, b.end - a.text.length + (a.end - a.start))\n  return normalizeStringDiff(targetText, { start, end, text })\n}\n\n/**\n * Get the slate range the text diff spans.\n */\nexport function targetRange(textDiff: TextDiff): Range {\n  const { path, diff } = textDiff\n  return {\n    anchor: { path, offset: diff.start },\n    focus: { path, offset: diff.end },\n  }\n}\n\n/**\n * Normalize a 'pending point' a.k.a a point based on the dom state before applying\n * the pending diffs. Since the pending diffs might have been inserted with different\n * marks we have to 'walk' the offset from the starting position to ensure we still\n * have a valid point inside the document\n */\nexport function normalizePoint(editor: Editor, point: Point): Point | null {\n  let { path, offset } = point\n  if (!Editor.hasPath(editor, path)) {\n    return null\n  }\n\n  let leaf = Node.get(editor, path)\n  if (!Text.isText(leaf)) {\n    return null\n  }\n\n  const parentBlock = Editor.above(editor, {\n    match: n => Element.isElement(n) && Editor.isBlock(editor, n),\n    at: path,\n  })\n\n  if (!parentBlock) {\n    return null\n  }\n\n  while (offset > leaf.text.length) {\n    const entry = Editor.next(editor, { at: path, match: Text.isText })\n    if (!entry || !Path.isDescendant(entry[1], parentBlock[1])) {\n      return null\n    }\n\n    offset -= leaf.text.length\n    leaf = entry[0]\n    path = entry[1]\n  }\n\n  return { path, offset }\n}\n\n/**\n * Normalize a 'pending selection' to ensure it's valid in the current document state.\n */\nexport function normalizeRange(editor: Editor, range: Range): Range | null {\n  const anchor = normalizePoint(editor, range.anchor)\n  if (!anchor) {\n    return null\n  }\n\n  if (Range.isCollapsed(range)) {\n    return { anchor, focus: anchor }\n  }\n\n  const focus = normalizePoint(editor, range.focus)\n  if (!focus) {\n    return null\n  }\n\n  return { anchor, focus }\n}\n\nexport function transformPendingPoint(\n  editor: Editor,\n  point: Point,\n  op: Operation\n): Point | null {\n  const pendingDiffs = EDITOR_TO_PENDING_DIFFS.get(editor)\n  const textDiff = pendingDiffs?.find(({ path }) =>\n    Path.equals(path, point.path)\n  )\n\n  if (!textDiff || point.offset <= textDiff.diff.start) {\n    return Point.transform(point, op, { affinity: 'backward' })\n  }\n\n  const { diff } = textDiff\n  // Point references location inside the diff => transform the point based on the location\n  // the diff will be applied to and add the offset inside the diff.\n  if (point.offset <= diff.start + diff.text.length) {\n    const anchor = { path: point.path, offset: diff.start }\n    const transformed = Point.transform(anchor, op, {\n      affinity: 'backward',\n    })\n\n    if (!transformed) {\n      return null\n    }\n\n    return {\n      path: transformed.path,\n      offset: transformed.offset + point.offset - diff.start,\n    }\n  }\n\n  // Point references location after the diff\n  const anchor = {\n    path: point.path,\n    offset: point.offset - diff.text.length + diff.end - diff.start,\n  }\n  const transformed = Point.transform(anchor, op, {\n    affinity: 'backward',\n  })\n  if (!transformed) {\n    return null\n  }\n\n  if (\n    op.type === 'split_node' &&\n    Path.equals(op.path, point.path) &&\n    anchor.offset < op.position &&\n    diff.start < op.position\n  ) {\n    return transformed\n  }\n\n  return {\n    path: transformed.path,\n    offset: transformed.offset + diff.text.length - diff.end + diff.start,\n  }\n}\n\nexport function transformPendingRange(\n  editor: Editor,\n  range: Range,\n  op: Operation\n): Range | null {\n  const anchor = transformPendingPoint(editor, range.anchor, op)\n  if (!anchor) {\n    return null\n  }\n\n  if (Range.isCollapsed(range)) {\n    return { anchor, focus: anchor }\n  }\n\n  const focus = transformPendingPoint(editor, range.focus, op)\n  if (!focus) {\n    return null\n  }\n\n  return { anchor, focus }\n}\n\nexport function transformTextDiff(\n  textDiff: TextDiff,\n  op: Operation\n): TextDiff | null {\n  const { path, diff, id } = textDiff\n\n  switch (op.type) {\n    case 'insert_text': {\n      if (!Path.equals(op.path, path) || op.offset >= diff.end) {\n        return textDiff\n      }\n\n      if (op.offset <= diff.start) {\n        return {\n          diff: {\n            start: op.text.length + diff.start,\n            end: op.text.length + diff.end,\n            text: diff.text,\n          },\n          id,\n          path,\n        }\n      }\n\n      return {\n        diff: {\n          start: diff.start,\n          end: diff.end + op.text.length,\n          text: diff.text,\n        },\n        id,\n        path,\n      }\n    }\n    case 'remove_text': {\n      if (!Path.equals(op.path, path) || op.offset >= diff.end) {\n        return textDiff\n      }\n\n      if (op.offset + op.text.length <= diff.start) {\n        return {\n          diff: {\n            start: diff.start - op.text.length,\n            end: diff.end - op.text.length,\n            text: diff.text,\n          },\n          id,\n          path,\n        }\n      }\n\n      return {\n        diff: {\n          start: diff.start,\n          end: diff.end - op.text.length,\n          text: diff.text,\n        },\n        id,\n        path,\n      }\n    }\n    case 'split_node': {\n      if (!Path.equals(op.path, path) || op.position >= diff.end) {\n        return {\n          diff,\n          id,\n          path: Path.transform(path, op, { affinity: 'backward' })!,\n        }\n      }\n\n      if (op.position > diff.start) {\n        return {\n          diff: {\n            start: diff.start,\n            end: Math.min(op.position, diff.end),\n            text: diff.text,\n          },\n          id,\n          path,\n        }\n      }\n\n      return {\n        diff: {\n          start: diff.start - op.position,\n          end: diff.end - op.position,\n          text: diff.text,\n        },\n        id,\n        path: Path.transform(path, op, { affinity: 'forward' })!,\n      }\n    }\n    case 'merge_node': {\n      if (!Path.equals(op.path, path)) {\n        return {\n          diff,\n          id,\n          path: Path.transform(path, op)!,\n        }\n      }\n\n      return {\n        diff: {\n          start: diff.start + op.position,\n          end: diff.end + op.position,\n          text: diff.text,\n        },\n        id,\n        path: Path.transform(path, op)!,\n      }\n    }\n  }\n\n  const newPath = Path.transform(path, op)\n  if (!newPath) {\n    return null\n  }\n\n  return {\n    diff,\n    path: newPath,\n    id,\n  }\n}\n", "import { DebouncedFunc } from 'lodash'\nimport { Editor, Node, Path, Point, Range, Text, Transforms } from 'slate'\nimport { ReactEditor } from '../../plugin/react-editor'\nimport {\n  applyStringDiff,\n  mergeStringDiffs,\n  normalizePoint,\n  normalizeRange,\n  normalizeStringDiff,\n  StringDiff,\n  targetRange,\n  TextDiff,\n  verifyDiffState,\n} from '../../utils/diff-text'\nimport { isDOMSelection, isTrackedMutation } from '../../utils/dom'\nimport {\n  EDITOR_TO_FORCE_RENDER,\n  EDITOR_TO_PENDING_ACTION,\n  EDITOR_TO_PENDING_DIFFS,\n  EDITOR_TO_PENDING_INSERTION_MARKS,\n  EDITOR_TO_PENDING_SELECTION,\n  EDITOR_TO_PLACEHOLDER_ELEMENT,\n  EDITOR_TO_USER_MARKS,\n  IS_COMPOSING,\n} from '../../utils/weak-maps'\n\nexport type Action = { at?: Point | Range; run: () => void }\n\n// https://github.com/facebook/draft-js/blob/main/src/component/handlers/composition/DraftEditorCompositionHandler.js#L41\n// When using keyboard English association function, conpositionEnd triggered too fast, resulting in after `insertText` still maintain association state.\nconst RESOLVE_DELAY = 25\n\n// Time with no user interaction before the current user action is considered as done.\nconst FLUSH_DELAY = 200\n\n// Replace with `const debug = console.log` to debug\nconst debug = (..._: unknown[]) => {}\n\n// Type guard to check if a value is a DataTransfer\nconst isDataTransfer = (value: any): value is DataTransfer =>\n  value?.constructor.name === 'DataTransfer'\n\nexport type CreateAndroidInputManagerOptions = {\n  editor: ReactEditor\n\n  scheduleOnDOMSelectionChange: DebouncedFunc<() => void>\n  onDOMSelectionChange: DebouncedFunc<() => void>\n}\n\nexport type AndroidInputManager = {\n  flush: () => void\n  scheduleFlush: () => void\n\n  hasPendingDiffs: () => boolean\n  hasPendingAction: () => boolean\n  hasPendingChanges: () => boolean\n  isFlushing: () => boolean | 'action'\n\n  handleUserSelect: (range: Range | null) => void\n  handleCompositionEnd: (event: React.CompositionEvent<HTMLDivElement>) => void\n  handleCompositionStart: (\n    event: React.CompositionEvent<HTMLDivElement>\n  ) => void\n  handleDOMBeforeInput: (event: InputEvent) => void\n  handleKeyDown: (event: React.KeyboardEvent<HTMLDivElement>) => void\n\n  handleDomMutations: (mutations: MutationRecord[]) => void\n  handleInput: () => void\n}\n\nexport function createAndroidInputManager({\n  editor,\n  scheduleOnDOMSelectionChange,\n  onDOMSelectionChange,\n}: CreateAndroidInputManagerOptions): AndroidInputManager {\n  let flushing: 'action' | boolean = false\n  let compositionEndTimeoutId: ReturnType<typeof setTimeout> | null = null\n  let flushTimeoutId: ReturnType<typeof setTimeout> | null = null\n  let actionTimeoutId: ReturnType<typeof setTimeout> | null = null\n\n  let idCounter = 0\n  let insertPositionHint: StringDiff | null | false = false\n\n  const applyPendingSelection = () => {\n    const pendingSelection = EDITOR_TO_PENDING_SELECTION.get(editor)\n    EDITOR_TO_PENDING_SELECTION.delete(editor)\n\n    if (pendingSelection) {\n      const { selection } = editor\n      const normalized = normalizeRange(editor, pendingSelection)\n\n      debug('apply pending selection', pendingSelection, normalized)\n\n      if (normalized && (!selection || !Range.equals(normalized, selection))) {\n        Transforms.select(editor, normalized)\n      }\n    }\n  }\n\n  const performAction = () => {\n    const action = EDITOR_TO_PENDING_ACTION.get(editor)\n    EDITOR_TO_PENDING_ACTION.delete(editor)\n    if (!action) {\n      return\n    }\n\n    if (action.at) {\n      const target = Point.isPoint(action.at)\n        ? normalizePoint(editor, action.at)\n        : normalizeRange(editor, action.at)\n\n      if (!target) {\n        return\n      }\n\n      const targetRange = Editor.range(editor, target)\n      if (!editor.selection || !Range.equals(editor.selection, targetRange)) {\n        Transforms.select(editor, target)\n      }\n    }\n\n    action.run()\n  }\n\n  const flush = () => {\n    if (flushTimeoutId) {\n      clearTimeout(flushTimeoutId)\n      flushTimeoutId = null\n    }\n\n    if (actionTimeoutId) {\n      clearTimeout(actionTimeoutId)\n      actionTimeoutId = null\n    }\n\n    if (!hasPendingDiffs() && !hasPendingAction()) {\n      applyPendingSelection()\n      return\n    }\n\n    if (!flushing) {\n      flushing = true\n      setTimeout(() => (flushing = false))\n    }\n\n    if (hasPendingAction()) {\n      flushing = 'action'\n    }\n\n    const selectionRef =\n      editor.selection &&\n      Editor.rangeRef(editor, editor.selection, { affinity: 'forward' })\n    EDITOR_TO_USER_MARKS.set(editor, editor.marks)\n\n    debug(\n      'flush',\n      EDITOR_TO_PENDING_ACTION.get(editor),\n      EDITOR_TO_PENDING_DIFFS.get(editor)\n    )\n\n    let scheduleSelectionChange = hasPendingDiffs()\n\n    let diff: TextDiff | undefined\n    while ((diff = EDITOR_TO_PENDING_DIFFS.get(editor)?.[0])) {\n      const pendingMarks = EDITOR_TO_PENDING_INSERTION_MARKS.get(editor)\n\n      if (pendingMarks !== undefined) {\n        EDITOR_TO_PENDING_INSERTION_MARKS.delete(editor)\n        editor.marks = pendingMarks\n      }\n\n      if (pendingMarks && insertPositionHint === false) {\n        insertPositionHint = null\n        debug('insert after mark placeholder')\n      }\n\n      const range = targetRange(diff)\n      if (!editor.selection || !Range.equals(editor.selection, range)) {\n        Transforms.select(editor, range)\n      }\n\n      if (diff.diff.text) {\n        Editor.insertText(editor, diff.diff.text)\n      } else {\n        Editor.deleteFragment(editor)\n      }\n\n      // Remove diff only after we have applied it to account for it when transforming\n      // pending ranges.\n      EDITOR_TO_PENDING_DIFFS.set(\n        editor,\n        EDITOR_TO_PENDING_DIFFS.get(editor)?.filter(\n          ({ id }) => id !== diff!.id\n        )!\n      )\n\n      if (!verifyDiffState(editor, diff)) {\n        debug('invalid diff state')\n        scheduleSelectionChange = false\n        EDITOR_TO_PENDING_ACTION.delete(editor)\n        EDITOR_TO_USER_MARKS.delete(editor)\n        flushing = 'action'\n\n        // Ensure we don't restore the pending user (dom) selection\n        // since the document and dom state do not match.\n        EDITOR_TO_PENDING_SELECTION.delete(editor)\n        scheduleOnDOMSelectionChange.cancel()\n        onDOMSelectionChange.cancel()\n        selectionRef?.unref()\n      }\n    }\n\n    const selection = selectionRef?.unref()\n    if (\n      selection &&\n      !EDITOR_TO_PENDING_SELECTION.get(editor) &&\n      (!editor.selection || !Range.equals(selection, editor.selection))\n    ) {\n      Transforms.select(editor, selection)\n    }\n\n    if (hasPendingAction()) {\n      performAction()\n      return\n    }\n\n    // COMPAT: The selectionChange event is fired after the action is performed,\n    // so we have to manually schedule it to ensure we don't 'throw away' the selection\n    // while rendering if we have pending changes.\n    if (scheduleSelectionChange) {\n      debug('scheduleOnDOMSelectionChange pending changes')\n      scheduleOnDOMSelectionChange()\n    }\n\n    scheduleOnDOMSelectionChange.flush()\n    onDOMSelectionChange.flush()\n\n    applyPendingSelection()\n\n    const userMarks = EDITOR_TO_USER_MARKS.get(editor)\n    EDITOR_TO_USER_MARKS.delete(editor)\n    if (userMarks !== undefined) {\n      editor.marks = userMarks\n      editor.onChange()\n    }\n  }\n\n  const handleCompositionEnd = (\n    _event: React.CompositionEvent<HTMLDivElement>\n  ) => {\n    if (compositionEndTimeoutId) {\n      clearTimeout(compositionEndTimeoutId)\n    }\n\n    compositionEndTimeoutId = setTimeout(() => {\n      IS_COMPOSING.set(editor, false)\n      flush()\n    }, RESOLVE_DELAY)\n  }\n\n  const handleCompositionStart = (\n    _event: React.CompositionEvent<HTMLDivElement>\n  ) => {\n    debug('composition start')\n\n    IS_COMPOSING.set(editor, true)\n\n    if (compositionEndTimeoutId) {\n      clearTimeout(compositionEndTimeoutId)\n      compositionEndTimeoutId = null\n    }\n  }\n\n  const updatePlaceholderVisibility = (forceHide = false) => {\n    const placeholderElement = EDITOR_TO_PLACEHOLDER_ELEMENT.get(editor)\n    if (!placeholderElement) {\n      return\n    }\n\n    if (hasPendingDiffs() || forceHide) {\n      placeholderElement.style.display = 'none'\n      return\n    }\n\n    placeholderElement.style.removeProperty('display')\n  }\n\n  const storeDiff = (path: Path, diff: StringDiff) => {\n    debug('storeDiff', path, diff)\n\n    const pendingDiffs = EDITOR_TO_PENDING_DIFFS.get(editor) ?? []\n    EDITOR_TO_PENDING_DIFFS.set(editor, pendingDiffs)\n\n    const target = Node.leaf(editor, path)\n    const idx = pendingDiffs.findIndex(change => Path.equals(change.path, path))\n    if (idx < 0) {\n      const normalized = normalizeStringDiff(target.text, diff)\n      if (normalized) {\n        pendingDiffs.push({ path, diff, id: idCounter++ })\n      }\n\n      updatePlaceholderVisibility()\n      return\n    }\n\n    const merged = mergeStringDiffs(target.text, pendingDiffs[idx].diff, diff)\n    if (!merged) {\n      pendingDiffs.splice(idx, 1)\n      updatePlaceholderVisibility()\n      return\n    }\n\n    pendingDiffs[idx] = {\n      ...pendingDiffs[idx],\n      diff: merged,\n    }\n  }\n\n  const scheduleAction = (\n    run: () => void,\n    { at }: { at?: Point | Range } = {}\n  ): void => {\n    insertPositionHint = false\n    debug('scheduleAction', { at, run })\n\n    EDITOR_TO_PENDING_SELECTION.delete(editor)\n    scheduleOnDOMSelectionChange.cancel()\n    onDOMSelectionChange.cancel()\n\n    if (hasPendingAction()) {\n      flush()\n    }\n\n    EDITOR_TO_PENDING_ACTION.set(editor, { at, run })\n\n    // COMPAT: When deleting before a non-contenteditable element chrome only fires a beforeinput,\n    // (no input) and doesn't perform any dom mutations. Without a flush timeout we would never flush\n    // in this case and thus never actually perform the action.\n    actionTimeoutId = setTimeout(flush)\n  }\n\n  const handleDOMBeforeInput = (event: InputEvent): void => {\n    if (flushTimeoutId) {\n      clearTimeout(flushTimeoutId)\n      flushTimeoutId = null\n    }\n\n    const { inputType: type } = event\n    let targetRange: Range | null = null\n    const data: DataTransfer | string | undefined =\n      (event as any).dataTransfer || event.data || undefined\n\n    if (\n      insertPositionHint !== false &&\n      type !== 'insertText' &&\n      type !== 'insertCompositionText'\n    ) {\n      insertPositionHint = false\n    }\n\n    let [nativeTargetRange] = (event as any).getTargetRanges()\n    if (nativeTargetRange) {\n      targetRange = ReactEditor.toSlateRange(editor, nativeTargetRange, {\n        exactMatch: false,\n        suppressThrow: true,\n      })\n    }\n\n    // COMPAT: SelectionChange event is fired after the action is performed, so we\n    // have to manually get the selection here to ensure it's up-to-date.\n    const window = ReactEditor.getWindow(editor)\n    const domSelection = window.getSelection()\n    if (!targetRange && domSelection) {\n      nativeTargetRange = domSelection\n      targetRange = ReactEditor.toSlateRange(editor, domSelection, {\n        exactMatch: false,\n        suppressThrow: true,\n      })\n    }\n\n    targetRange = targetRange ?? editor.selection\n    if (!targetRange) {\n      return\n    }\n\n    // By default, the input manager tries to store text diffs so that we can\n    // defer flushing them at a later point in time. We don't want to flush\n    // for every input event as this can be expensive. However, there are some\n    // scenarios where we cannot safely store the text diff and must instead\n    // schedule an action to let Slate normalize the editor state.\n    let canStoreDiff = true\n\n    if (type.startsWith('delete')) {\n      if (Range.isExpanded(targetRange)) {\n        const [start, end] = Range.edges(targetRange)\n        const leaf = Node.leaf(editor, start.path)\n\n        if (leaf.text.length === start.offset && end.offset === 0) {\n          const next = Editor.next(editor, {\n            at: start.path,\n            match: Text.isText,\n          })\n          if (next && Path.equals(next[1], end.path)) {\n            targetRange = { anchor: end, focus: end }\n          }\n        }\n      }\n\n      const direction = type.endsWith('Backward') ? 'backward' : 'forward'\n      const [start, end] = Range.edges(targetRange)\n      const [leaf, path] = Editor.leaf(editor, start.path)\n\n      const diff = {\n        text: '',\n        start: start.offset,\n        end: end.offset,\n      }\n      const pendingDiffs = EDITOR_TO_PENDING_DIFFS.get(editor)\n      const relevantPendingDiffs = pendingDiffs?.find(change =>\n        Path.equals(change.path, path)\n      )\n      const diffs = relevantPendingDiffs\n        ? [relevantPendingDiffs.diff, diff]\n        : [diff]\n      const text = applyStringDiff(leaf.text, ...diffs)\n\n      if (text.length === 0) {\n        // Text leaf will be removed, so we need to schedule an\n        // action to remove it so that Slate can normalize instead\n        // of storing as a diff\n        canStoreDiff = false\n      }\n\n      if (Range.isExpanded(targetRange)) {\n        if (\n          canStoreDiff &&\n          Path.equals(targetRange.anchor.path, targetRange.focus.path)\n        ) {\n          const point = { path: targetRange.anchor.path, offset: start.offset }\n          const range = Editor.range(editor, point, point)\n          handleUserSelect(range)\n\n          return storeDiff(targetRange.anchor.path, {\n            text: '',\n            end: end.offset,\n            start: start.offset,\n          })\n        }\n\n        return scheduleAction(\n          () => Editor.deleteFragment(editor, { direction }),\n          { at: targetRange }\n        )\n      }\n    }\n\n    switch (type) {\n      case 'deleteByComposition':\n      case 'deleteByCut':\n      case 'deleteByDrag': {\n        return scheduleAction(() => Editor.deleteFragment(editor), {\n          at: targetRange,\n        })\n      }\n\n      case 'deleteContent':\n      case 'deleteContentForward': {\n        const { anchor } = targetRange\n        if (canStoreDiff && Range.isCollapsed(targetRange)) {\n          const targetNode = Node.leaf(editor, anchor.path)\n\n          if (anchor.offset < targetNode.text.length) {\n            return storeDiff(anchor.path, {\n              text: '',\n              start: anchor.offset,\n              end: anchor.offset + 1,\n            })\n          }\n        }\n\n        return scheduleAction(() => Editor.deleteForward(editor), {\n          at: targetRange,\n        })\n      }\n\n      case 'deleteContentBackward': {\n        const { anchor } = targetRange\n\n        // If we have a mismatch between the native and slate selection being collapsed\n        // we are most likely deleting a zero-width placeholder and thus should perform it\n        // as an action to ensure correct behavior (mostly happens with mark placeholders)\n        const nativeCollapsed = isDOMSelection(nativeTargetRange)\n          ? nativeTargetRange.isCollapsed\n          : !!nativeTargetRange?.collapsed\n\n        if (\n          canStoreDiff &&\n          nativeCollapsed &&\n          Range.isCollapsed(targetRange) &&\n          anchor.offset > 0\n        ) {\n          return storeDiff(anchor.path, {\n            text: '',\n            start: anchor.offset - 1,\n            end: anchor.offset,\n          })\n        }\n\n        return scheduleAction(() => Editor.deleteBackward(editor), {\n          at: targetRange,\n        })\n      }\n\n      case 'deleteEntireSoftLine': {\n        return scheduleAction(\n          () => {\n            Editor.deleteBackward(editor, { unit: 'line' })\n            Editor.deleteForward(editor, { unit: 'line' })\n          },\n          { at: targetRange }\n        )\n      }\n\n      case 'deleteHardLineBackward': {\n        return scheduleAction(\n          () => Editor.deleteBackward(editor, { unit: 'block' }),\n          { at: targetRange }\n        )\n      }\n\n      case 'deleteSoftLineBackward': {\n        return scheduleAction(\n          () => Editor.deleteBackward(editor, { unit: 'line' }),\n          { at: targetRange }\n        )\n      }\n\n      case 'deleteHardLineForward': {\n        return scheduleAction(\n          () => Editor.deleteForward(editor, { unit: 'block' }),\n          { at: targetRange }\n        )\n      }\n\n      case 'deleteSoftLineForward': {\n        return scheduleAction(\n          () => Editor.deleteForward(editor, { unit: 'line' }),\n          { at: targetRange }\n        )\n      }\n\n      case 'deleteWordBackward': {\n        return scheduleAction(\n          () => Editor.deleteBackward(editor, { unit: 'word' }),\n          { at: targetRange }\n        )\n      }\n\n      case 'deleteWordForward': {\n        return scheduleAction(\n          () => Editor.deleteForward(editor, { unit: 'word' }),\n          { at: targetRange }\n        )\n      }\n\n      case 'insertLineBreak': {\n        return scheduleAction(() => Editor.insertSoftBreak(editor), {\n          at: targetRange,\n        })\n      }\n\n      case 'insertParagraph': {\n        return scheduleAction(() => Editor.insertBreak(editor), {\n          at: targetRange,\n        })\n      }\n      case 'insertCompositionText':\n      case 'deleteCompositionText':\n      case 'insertFromComposition':\n      case 'insertFromDrop':\n      case 'insertFromPaste':\n      case 'insertFromYank':\n      case 'insertReplacementText':\n      case 'insertText': {\n        if (isDataTransfer(data)) {\n          return scheduleAction(() => ReactEditor.insertData(editor, data), {\n            at: targetRange,\n          })\n        }\n\n        let text = data ?? ''\n\n        // COMPAT: If we are writing inside a placeholder, the ime inserts the text inside\n        // the placeholder itself and thus includes the zero-width space inside edit events.\n        if (EDITOR_TO_PENDING_INSERTION_MARKS.get(editor)) {\n          text = text.replace('\\uFEFF', '')\n        }\n\n        // Pastes from the Android clipboard will generate `insertText` events.\n        // If the copied text contains any newlines, Android will append an\n        // extra newline to the end of the copied text.\n        if (type === 'insertText' && /.*\\n.*\\n$/.test(text)) {\n          text = text.slice(0, -1)\n        }\n\n        // If the text includes a newline, split it at newlines and paste each component\n        // string, with soft breaks in between each.\n        if (text.includes('\\n')) {\n          return scheduleAction(\n            () => {\n              const parts = text.split('\\n')\n              parts.forEach((line, i) => {\n                if (line) {\n                  Editor.insertText(editor, line)\n                }\n                if (i !== parts.length - 1) {\n                  Editor.insertSoftBreak(editor)\n                }\n              })\n            },\n            {\n              at: targetRange,\n            }\n          )\n        }\n\n        if (Path.equals(targetRange.anchor.path, targetRange.focus.path)) {\n          const [start, end] = Range.edges(targetRange)\n\n          const diff = {\n            start: start.offset,\n            end: end.offset,\n            text,\n          }\n\n          // COMPAT: Swiftkey has a weird bug where the target range of the 2nd word\n          // inserted after a mark placeholder is inserted with an anchor offset off by 1.\n          // So writing 'some text' will result in 'some ttext'. Luckily all 'normal' insert\n          // text events are fired with the correct target ranges, only the final 'insertComposition'\n          // isn't, so we can adjust the target range start offset if we are confident this is the\n          // swiftkey insert causing the issue.\n          if (text && insertPositionHint && type === 'insertCompositionText') {\n            const hintPosition =\n              insertPositionHint.start + insertPositionHint.text.search(/\\S|$/)\n            const diffPosition = diff.start + diff.text.search(/\\S|$/)\n\n            if (\n              diffPosition === hintPosition + 1 &&\n              diff.end ===\n                insertPositionHint.start + insertPositionHint.text.length\n            ) {\n              debug('adjusting swiftKey insert position using hint')\n              diff.start -= 1\n              insertPositionHint = null\n              scheduleFlush()\n            } else {\n              insertPositionHint = false\n            }\n          } else if (type === 'insertText') {\n            if (insertPositionHint === null) {\n              insertPositionHint = diff\n            } else if (\n              insertPositionHint &&\n              Range.isCollapsed(targetRange) &&\n              insertPositionHint.end + insertPositionHint.text.length ===\n                start.offset\n            ) {\n              insertPositionHint = {\n                ...insertPositionHint,\n                text: insertPositionHint.text + text,\n              }\n            } else {\n              insertPositionHint = false\n            }\n          } else {\n            insertPositionHint = false\n          }\n\n          if (canStoreDiff) {\n            storeDiff(start.path, diff)\n            return\n          }\n        }\n\n        return scheduleAction(() => Editor.insertText(editor, text), {\n          at: targetRange,\n        })\n      }\n    }\n  }\n\n  const hasPendingAction = () => {\n    return !!EDITOR_TO_PENDING_ACTION.get(editor)\n  }\n\n  const hasPendingDiffs = () => {\n    return !!EDITOR_TO_PENDING_DIFFS.get(editor)?.length\n  }\n\n  const hasPendingChanges = () => {\n    return hasPendingAction() || hasPendingDiffs()\n  }\n\n  const isFlushing = () => {\n    return flushing\n  }\n\n  const handleUserSelect = (range: Range | null) => {\n    EDITOR_TO_PENDING_SELECTION.set(editor, range)\n\n    if (flushTimeoutId) {\n      clearTimeout(flushTimeoutId)\n      flushTimeoutId = null\n    }\n\n    const { selection } = editor\n    if (!range) {\n      return\n    }\n\n    const pathChanged =\n      !selection || !Path.equals(selection.anchor.path, range.anchor.path)\n    const parentPathChanged =\n      !selection ||\n      !Path.equals(\n        selection.anchor.path.slice(0, -1),\n        range.anchor.path.slice(0, -1)\n      )\n\n    if ((pathChanged && insertPositionHint) || parentPathChanged) {\n      insertPositionHint = false\n    }\n\n    if (pathChanged || hasPendingDiffs()) {\n      flushTimeoutId = setTimeout(flush, FLUSH_DELAY)\n    }\n  }\n\n  const handleInput = () => {\n    if (hasPendingAction() || !hasPendingDiffs()) {\n      debug('flush input')\n      flush()\n    }\n  }\n\n  const handleKeyDown = (_: React.KeyboardEvent) => {\n    // COMPAT: Swiftkey closes the keyboard when typing inside a empty node\n    // directly next to a non-contenteditable element (= the placeholder).\n    // The only event fired soon enough for us to allow hiding the placeholder\n    // without swiftkey picking it up is the keydown event, so we have to hide it\n    // here. See https://github.com/ianstormtaylor/slate/pull/4988#issuecomment-1201050535\n    if (!hasPendingDiffs()) {\n      updatePlaceholderVisibility(true)\n      setTimeout(updatePlaceholderVisibility)\n    }\n  }\n\n  const scheduleFlush = () => {\n    if (!hasPendingAction()) {\n      actionTimeoutId = setTimeout(flush)\n    }\n  }\n\n  const handleDomMutations = (mutations: MutationRecord[]) => {\n    if (hasPendingDiffs() || hasPendingAction()) {\n      return\n    }\n\n    if (\n      mutations.some(mutation => isTrackedMutation(editor, mutation, mutations))\n    ) {\n      // Cause a re-render to restore the dom state if we encounter tracked mutations without\n      // a corresponding pending action.\n      EDITOR_TO_FORCE_RENDER.get(editor)?.()\n    }\n  }\n\n  return {\n    flush,\n    scheduleFlush,\n\n    hasPendingDiffs,\n    hasPendingAction,\n    hasPendingChanges,\n\n    isFlushing,\n\n    handleUserSelect,\n    handleCompositionEnd,\n    handleCompositionStart,\n    handleDOMBeforeInput,\n    handleKeyDown,\n\n    handleDomMutations,\n    handleInput,\n  }\n}\n", "import { useEffect, useRef } from 'react'\n\nexport function useIsMounted() {\n  const isMountedRef = useRef(false)\n\n  useEffect(() => {\n    isMountedRef.current = true\n    return () => {\n      isMountedRef.current = false\n    }\n  }, [])\n\n  return isMountedRef.current\n}\n", "import { RefObject, useEffect, useState } from 'react'\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-layout-effect'\nimport { isDOMElement } from '../utils/dom'\nimport { ReactEditor } from '../plugin/react-editor'\n\nexport function useMutationObserver(\n  node: RefObject<HTMLElement>,\n  callback: MutationCallback,\n  options: MutationObserverInit\n) {\n  const [mutationObserver] = useState(() => new MutationObserver(callback))\n\n  useIsomorphicLayoutEffect(() => {\n    // Discard mutations caused during render phase. This works due to react calling\n    // useLayoutEffect synchronously after the render phase before the next tick.\n    mutationObserver.takeRecords()\n  })\n\n  useEffect(() => {\n    if (!node.current) {\n      throw new Error('Failed to attach MutationObserver, `node` is undefined')\n    }\n\n    mutationObserver.observe(node.current, options)\n    return () => mutationObserver.disconnect()\n  }, [mutationObserver, node, options])\n}\n", "import { RefObject, useState } from 'react'\nimport { useSlateStatic } from '../use-slate-static'\nimport { IS_ANDROID } from '../../utils/environment'\nimport { EDITOR_TO_SCHEDULE_FLUSH } from '../../utils/weak-maps'\nimport {\n  createAndroidInputManager,\n  CreateAndroidInputManagerOptions,\n} from './android-input-manager'\nimport { useIsMounted } from '../use-is-mounted'\nimport { useMutationObserver } from '../use-mutation-observer'\n\ntype UseAndroidInputManagerOptions = {\n  node: RefObject<HTMLElement>\n} & Omit<\n  CreateAndroidInputManagerOptions,\n  'editor' | 'onUserInput' | 'receivedUserInput'\n>\n\nconst MUTATION_OBSERVER_CONFIG: MutationObserverInit = {\n  subtree: true,\n  childList: true,\n  characterData: true,\n}\n\nexport const useAndroidInputManager = !IS_ANDROID\n  ? () => null\n  : ({ node, ...options }: UseAndroidInputManagerOptions) => {\n      if (!IS_ANDROID) {\n        return null\n      }\n\n      const editor = useSlateStatic()\n      const isMounted = useIsMounted()\n\n      const [inputManager] = useState(() =>\n        createAndroidInputManager({\n          editor,\n          ...options,\n        })\n      )\n\n      useMutationObserver(\n        node,\n        inputManager.handleDomMutations,\n        MUTATION_OBSERVER_CONFIG\n      )\n\n      EDITOR_TO_SCHEDULE_FLUSH.set(editor, inputManager.scheduleFlush)\n      if (isMounted) {\n        inputManager.flush()\n      }\n\n      return inputManager\n    }\n", "import { useCallback, useRef, useEffect } from 'react'\nimport { ReactEditor } from '../plugin/react-editor'\nimport { useSlateStatic } from './use-slate-static'\n\nexport function useTrackUserInput() {\n  const editor = useSlateStatic()\n\n  const receivedUserInput = useRef<boolean>(false)\n  const animationFrameIdRef = useRef<number>(0)\n\n  const onUserInput = useCallback(() => {\n    if (receivedUserInput.current) {\n      return\n    }\n\n    receivedUserInput.current = true\n\n    const window = ReactEditor.getWindow(editor)\n    window.cancelAnimationFrame(animationFrameIdRef.current)\n\n    animationFrameIdRef.current = window.requestAnimationFrame(() => {\n      receivedUserInput.current = false\n    })\n  }, [editor])\n\n  useEffect(() => () => cancelAnimationFrame(animationFrameIdRef.current), [])\n\n  return {\n    receivedUserInput,\n    onUserInput,\n  }\n}\n", "import getDirection from 'direction'\nimport debounce from 'lodash/debounce'\nimport throttle from 'lodash/throttle'\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n} from 'react'\nimport scrollIntoView from 'scroll-into-view-if-needed'\nimport {\n  Editor,\n  Element,\n  Node,\n  NodeEntry,\n  Path,\n  Range,\n  Text,\n  Transforms,\n} from 'slate'\nimport { ReactEditor } from '../plugin/react-editor'\nimport useChildren from '../hooks/use-children'\nimport { DecorateContext } from '../hooks/use-decorate'\nimport { useIsomorphicLayoutEffect } from '../hooks/use-isomorphic-layout-effect'\nimport { ReadOnlyContext } from '../hooks/use-read-only'\nimport { useSlate } from '../hooks/use-slate'\nimport { TRIPLE_CLICK } from '../utils/constants'\nimport {\n  DOMElement,\n  DOMRange,\n  DOMText,\n  getDefaultView,\n  isDOMElement,\n  isDOMNode,\n  isPlainTextOnlyPaste,\n} from '../utils/dom'\nimport {\n  CAN_USE_DOM,\n  HAS_BEFORE_INPUT_SUPPORT,\n  IS_ANDROID,\n  IS_CHROME,\n  IS_FIREFOX,\n  IS_FIREFOX_LEGACY,\n  IS_IOS,\n  IS_SAFARI,\n  IS_UC_MOBILE,\n  IS_WECHATBROWSER,\n} from '../utils/environment'\nimport Hotkeys from '../utils/hotkeys'\nimport {\n  EDITOR_TO_ELEMENT,\n  EDITOR_TO_FORCE_RENDER,\n  EDITOR_TO_PENDING_INSERTION_MARKS,\n  EDITOR_TO_PLACEHOLDER_ELEMENT,\n  EDITOR_TO_USER_MARKS,\n  EDITOR_TO_USER_SELECTION,\n  EDITOR_TO_WINDOW,\n  ELEMENT_TO_NODE,\n  IS_COMPOSING,\n  IS_FOCUSED,\n  IS_READ_ONLY,\n  MARK_PLACEHOLDER_SYMBOL,\n  NODE_TO_ELEMENT,\n  PLACEHOLDER_SYMBOL,\n} from '../utils/weak-maps'\nimport { RestoreDOM } from './restore-dom/restore-dom'\nimport { useAndroidInputManager } from '../hooks/android-input-manager/use-android-input-manager'\nimport { useTrackUserInput } from '../hooks/use-track-user-input'\nimport { AndroidInputManager } from '../hooks/android-input-manager/android-input-manager'\n\ntype DeferredOperation = () => void\n\nconst Children = (props: Parameters<typeof useChildren>[0]) => (\n  <React.Fragment>{useChildren(props)}</React.Fragment>\n)\n\n/**\n * `RenderElementProps` are passed to the `renderElement` handler.\n */\n\nexport interface RenderElementProps {\n  children: any\n  element: Element\n  attributes: {\n    'data-slate-node': 'element'\n    'data-slate-inline'?: true\n    'data-slate-void'?: true\n    dir?: 'rtl'\n    ref: any\n  }\n}\n\n/**\n * `RenderLeafProps` are passed to the `renderLeaf` handler.\n */\n\nexport interface RenderLeafProps {\n  children: any\n  leaf: Text\n  text: Text\n  attributes: {\n    'data-slate-leaf': true\n  }\n}\n\n/**\n * `EditableProps` are passed to the `<Editable>` component.\n */\n\nexport type EditableProps = {\n  decorate?: (entry: NodeEntry) => Range[]\n  onDOMBeforeInput?: (event: InputEvent) => void\n  placeholder?: string\n  readOnly?: boolean\n  role?: string\n  style?: React.CSSProperties\n  renderElement?: (props: RenderElementProps) => JSX.Element\n  renderLeaf?: (props: RenderLeafProps) => JSX.Element\n  renderPlaceholder?: (props: RenderPlaceholderProps) => JSX.Element\n  scrollSelectionIntoView?: (editor: ReactEditor, domRange: DOMRange) => void\n  as?: React.ElementType\n  disableDefaultStyles?: boolean\n} & React.TextareaHTMLAttributes<HTMLDivElement>\n\n/**\n * Editable.\n */\n\nexport const Editable = (props: EditableProps) => {\n  const defaultRenderPlaceholder = useCallback(\n    (props: RenderPlaceholderProps) => <DefaultPlaceholder {...props} />,\n    []\n  )\n  const {\n    autoFocus,\n    decorate = defaultDecorate,\n    onDOMBeforeInput: propsOnDOMBeforeInput,\n    placeholder,\n    readOnly = false,\n    renderElement,\n    renderLeaf,\n    renderPlaceholder = defaultRenderPlaceholder,\n    scrollSelectionIntoView = defaultScrollSelectionIntoView,\n    style: userStyle = {},\n    as: Component = 'div',\n    disableDefaultStyles = false,\n    ...attributes\n  } = props\n  const editor = useSlate()\n  // Rerender editor when composition status changed\n  const [isComposing, setIsComposing] = useState(false)\n  const ref = useRef<HTMLDivElement | null>(null)\n  const deferredOperations = useRef<DeferredOperation[]>([])\n  const [placeholderHeight, setPlaceholderHeight] = useState<\n    number | undefined\n  >()\n\n  const { onUserInput, receivedUserInput } = useTrackUserInput()\n\n  const [, forceRender] = useReducer(s => s + 1, 0)\n  EDITOR_TO_FORCE_RENDER.set(editor, forceRender)\n\n  // Update internal state on each render.\n  IS_READ_ONLY.set(editor, readOnly)\n\n  // Keep track of some state for the event handler logic.\n  const state = useMemo(\n    () => ({\n      isDraggingInternally: false,\n      isUpdatingSelection: false,\n      latestElement: null as DOMElement | null,\n      hasMarkPlaceholder: false,\n    }),\n    []\n  )\n\n  // The autoFocus TextareaHTMLAttribute doesn't do anything on a div, so it\n  // needs to be manually focused.\n  useEffect(() => {\n    if (ref.current && autoFocus) {\n      ref.current.focus()\n    }\n  }, [autoFocus])\n\n  /**\n   * The AndroidInputManager object has a cyclical dependency on onDOMSelectionChange\n   *\n   * It is defined as a reference to simplify hook dependencies and clarify that\n   * it needs to be initialized.\n   */\n  const androidInputManagerRef = useRef<\n    AndroidInputManager | null | undefined\n  >()\n\n  // Listen on the native `selectionchange` event to be able to update any time\n  // the selection changes. This is required because React's `onSelect` is leaky\n  // and non-standard so it doesn't fire until after a selection has been\n  // released. This causes issues in situations where another change happens\n  // while a selection is being dragged.\n  const onDOMSelectionChange = useMemo(\n    () =>\n      throttle(() => {\n        const androidInputManager = androidInputManagerRef.current\n        if (\n          (IS_ANDROID || !ReactEditor.isComposing(editor)) &&\n          (!state.isUpdatingSelection || androidInputManager?.isFlushing()) &&\n          !state.isDraggingInternally\n        ) {\n          const root = ReactEditor.findDocumentOrShadowRoot(editor)\n          const { activeElement } = root\n          const el = ReactEditor.toDOMNode(editor, editor)\n          const domSelection = root.getSelection()\n\n          if (activeElement === el) {\n            state.latestElement = activeElement\n            IS_FOCUSED.set(editor, true)\n          } else {\n            IS_FOCUSED.delete(editor)\n          }\n\n          if (!domSelection) {\n            return Transforms.deselect(editor)\n          }\n\n          const { anchorNode, focusNode } = domSelection\n\n          const anchorNodeSelectable =\n            ReactEditor.hasEditableTarget(editor, anchorNode) ||\n            ReactEditor.isTargetInsideNonReadonlyVoid(editor, anchorNode)\n\n          const focusNodeSelectable =\n            ReactEditor.hasEditableTarget(editor, focusNode) ||\n            ReactEditor.isTargetInsideNonReadonlyVoid(editor, focusNode)\n\n          if (anchorNodeSelectable && focusNodeSelectable) {\n            const range = ReactEditor.toSlateRange(editor, domSelection, {\n              exactMatch: false,\n              suppressThrow: true,\n            })\n\n            if (range) {\n              if (\n                !ReactEditor.isComposing(editor) &&\n                !androidInputManager?.hasPendingChanges() &&\n                !androidInputManager?.isFlushing()\n              ) {\n                Transforms.select(editor, range)\n              } else {\n                androidInputManager?.handleUserSelect(range)\n              }\n            }\n          }\n\n          // Deselect the editor if the dom selection is not selectable in readonly mode\n          if (readOnly && (!anchorNodeSelectable || !focusNodeSelectable)) {\n            Transforms.deselect(editor)\n          }\n        }\n      }, 100),\n    [editor, readOnly, state]\n  )\n\n  const scheduleOnDOMSelectionChange = useMemo(\n    () => debounce(onDOMSelectionChange, 0),\n    [onDOMSelectionChange]\n  )\n\n  androidInputManagerRef.current = useAndroidInputManager({\n    node: ref,\n    onDOMSelectionChange,\n    scheduleOnDOMSelectionChange,\n  })\n\n  useIsomorphicLayoutEffect(() => {\n    // Update element-related weak maps with the DOM element ref.\n    let window\n    if (ref.current && (window = getDefaultView(ref.current))) {\n      EDITOR_TO_WINDOW.set(editor, window)\n      EDITOR_TO_ELEMENT.set(editor, ref.current)\n      NODE_TO_ELEMENT.set(editor, ref.current)\n      ELEMENT_TO_NODE.set(ref.current, editor)\n    } else {\n      NODE_TO_ELEMENT.delete(editor)\n    }\n\n    // Make sure the DOM selection state is in sync.\n    const { selection } = editor\n    const root = ReactEditor.findDocumentOrShadowRoot(editor)\n    const domSelection = root.getSelection()\n\n    if (\n      !domSelection ||\n      !ReactEditor.isFocused(editor) ||\n      androidInputManagerRef.current?.hasPendingAction()\n    ) {\n      return\n    }\n\n    const setDomSelection = (forceChange?: boolean) => {\n      const hasDomSelection = domSelection.type !== 'None'\n\n      // If the DOM selection is properly unset, we're done.\n      if (!selection && !hasDomSelection) {\n        return\n      }\n\n      // verify that the dom selection is in the editor\n      const editorElement = EDITOR_TO_ELEMENT.get(editor)!\n      let hasDomSelectionInEditor = false\n      if (\n        editorElement.contains(domSelection.anchorNode) &&\n        editorElement.contains(domSelection.focusNode)\n      ) {\n        hasDomSelectionInEditor = true\n      }\n\n      // If the DOM selection is in the editor and the editor selection is already correct, we're done.\n      if (\n        hasDomSelection &&\n        hasDomSelectionInEditor &&\n        selection &&\n        !forceChange\n      ) {\n        const slateRange = ReactEditor.toSlateRange(editor, domSelection, {\n          exactMatch: true,\n\n          // domSelection is not necessarily a valid Slate range\n          // (e.g. when clicking on contentEditable:false element)\n          suppressThrow: true,\n        })\n\n        if (slateRange && Range.equals(slateRange, selection)) {\n          if (!state.hasMarkPlaceholder) {\n            return\n          }\n\n          // Ensure selection is inside the mark placeholder\n          const { anchorNode } = domSelection\n          if (\n            anchorNode?.parentElement?.hasAttribute(\n              'data-slate-mark-placeholder'\n            )\n          ) {\n            return\n          }\n        }\n      }\n\n      // when <Editable/> is being controlled through external value\n      // then its children might just change - DOM responds to it on its own\n      // but Slate's value is not being updated through any operation\n      // and thus it doesn't transform selection on its own\n      if (selection && !ReactEditor.hasRange(editor, selection)) {\n        editor.selection = ReactEditor.toSlateRange(editor, domSelection, {\n          exactMatch: false,\n          suppressThrow: true,\n        })\n        return\n      }\n\n      // Otherwise the DOM selection is out of sync, so update it.\n      state.isUpdatingSelection = true\n\n      const newDomRange: DOMRange | null =\n        selection && ReactEditor.toDOMRange(editor, selection)\n\n      if (newDomRange) {\n        if (Range.isBackward(selection!)) {\n          domSelection.setBaseAndExtent(\n            newDomRange.endContainer,\n            newDomRange.endOffset,\n            newDomRange.startContainer,\n            newDomRange.startOffset\n          )\n        } else {\n          domSelection.setBaseAndExtent(\n            newDomRange.startContainer,\n            newDomRange.startOffset,\n            newDomRange.endContainer,\n            newDomRange.endOffset\n          )\n        }\n        scrollSelectionIntoView(editor, newDomRange)\n      } else {\n        domSelection.removeAllRanges()\n      }\n\n      return newDomRange\n    }\n\n    const newDomRange = setDomSelection()\n    const ensureSelection =\n      androidInputManagerRef.current?.isFlushing() === 'action'\n\n    if (!IS_ANDROID || !ensureSelection) {\n      setTimeout(() => {\n        // COMPAT: In Firefox, it's not enough to create a range, you also need\n        // to focus the contenteditable element too. (2016/11/16)\n        if (newDomRange && IS_FIREFOX) {\n          const el = ReactEditor.toDOMNode(editor, editor)\n          el.focus()\n        }\n\n        state.isUpdatingSelection = false\n      })\n      return\n    }\n\n    let timeoutId: ReturnType<typeof setTimeout> | null = null\n    const animationFrameId = requestAnimationFrame(() => {\n      if (ensureSelection) {\n        const ensureDomSelection = (forceChange?: boolean) => {\n          try {\n            const el = ReactEditor.toDOMNode(editor, editor)\n            el.focus()\n\n            setDomSelection(forceChange)\n          } catch (e) {\n            // Ignore, dom and state might be out of sync\n          }\n        }\n\n        // Compat: Android IMEs try to force their selection by manually re-applying it even after we set it.\n        // This essentially would make setting the slate selection during an update meaningless, so we force it\n        // again here. We can't only do it in the setTimeout after the animation frame since that would cause a\n        // visible flicker.\n        ensureDomSelection()\n\n        timeoutId = setTimeout(() => {\n          // COMPAT: While setting the selection in an animation frame visually correctly sets the selection,\n          // it doesn't update GBoards spellchecker state. We have to manually trigger a selection change after\n          // the animation frame to ensure it displays the correct state.\n          ensureDomSelection(true)\n          state.isUpdatingSelection = false\n        })\n      }\n    })\n\n    return () => {\n      cancelAnimationFrame(animationFrameId)\n      if (timeoutId) {\n        clearTimeout(timeoutId)\n      }\n    }\n  })\n\n  // Listen on the native `beforeinput` event to get real \"Level 2\" events. This\n  // is required because React's `beforeinput` is fake and never really attaches\n  // to the real event sadly. (2019/11/01)\n  // https://github.com/facebook/react/issues/11211\n  const onDOMBeforeInput = useCallback(\n    (event: InputEvent) => {\n      onUserInput()\n\n      if (\n        !readOnly &&\n        ReactEditor.hasEditableTarget(editor, event.target) &&\n        !isDOMEventHandled(event, propsOnDOMBeforeInput)\n      ) {\n        // COMPAT: BeforeInput events aren't cancelable on android, so we have to handle them differently using the android input manager.\n        if (androidInputManagerRef.current) {\n          return androidInputManagerRef.current.handleDOMBeforeInput(event)\n        }\n\n        // Some IMEs/Chrome extensions like e.g. Grammarly set the selection immediately before\n        // triggering a `beforeinput` expecting the change to be applied to the immediately before\n        // set selection.\n        scheduleOnDOMSelectionChange.flush()\n        onDOMSelectionChange.flush()\n\n        const { selection } = editor\n        const { inputType: type } = event\n        const data = (event as any).dataTransfer || event.data || undefined\n\n        const isCompositionChange =\n          type === 'insertCompositionText' || type === 'deleteCompositionText'\n\n        // COMPAT: use composition change events as a hint to where we should insert\n        // composition text if we aren't composing to work around https://github.com/ianstormtaylor/slate/issues/5038\n        if (isCompositionChange && ReactEditor.isComposing(editor)) {\n          return\n        }\n\n        let native = false\n        if (\n          type === 'insertText' &&\n          selection &&\n          Range.isCollapsed(selection) &&\n          // Only use native character insertion for single characters a-z or space for now.\n          // Long-press events (hold a + press 4 = ä) to choose a special character otherwise\n          // causes duplicate inserts.\n          event.data &&\n          event.data.length === 1 &&\n          /[a-z ]/i.test(event.data) &&\n          // Chrome has issues correctly editing the start of nodes: https://bugs.chromium.org/p/chromium/issues/detail?id=1249405\n          // When there is an inline element, e.g. a link, and you select\n          // right after it (the start of the next node).\n          selection.anchor.offset !== 0\n        ) {\n          native = true\n\n          // Skip native if there are marks, as\n          // `insertText` will insert a node, not just text.\n          if (editor.marks) {\n            native = false\n          }\n\n          // Chrome also has issues correctly editing the end of anchor elements: https://bugs.chromium.org/p/chromium/issues/detail?id=1259100\n          // Therefore we don't allow native events to insert text at the end of anchor nodes.\n          const { anchor } = selection\n\n          const [node, offset] = ReactEditor.toDOMPoint(editor, anchor)\n          const anchorNode = node.parentElement?.closest('a')\n\n          const window = ReactEditor.getWindow(editor)\n\n          if (\n            native &&\n            anchorNode &&\n            ReactEditor.hasDOMNode(editor, anchorNode)\n          ) {\n            // Find the last text node inside the anchor.\n            const lastText = window?.document\n              .createTreeWalker(anchorNode, NodeFilter.SHOW_TEXT)\n              .lastChild() as DOMText | null\n\n            if (lastText === node && lastText.textContent?.length === offset) {\n              native = false\n            }\n          }\n\n          // Chrome has issues with the presence of tab characters inside elements with whiteSpace = 'pre'\n          // causing abnormal insert behavior: https://bugs.chromium.org/p/chromium/issues/detail?id=1219139\n          if (\n            native &&\n            node.parentElement &&\n            window?.getComputedStyle(node.parentElement)?.whiteSpace === 'pre'\n          ) {\n            const block = Editor.above(editor, {\n              at: anchor.path,\n              match: n => Element.isElement(n) && Editor.isBlock(editor, n),\n            })\n\n            if (block && Node.string(block[0]).includes('\\t')) {\n              native = false\n            }\n          }\n        }\n\n        // COMPAT: For the deleting forward/backward input types we don't want\n        // to change the selection because it is the range that will be deleted,\n        // and those commands determine that for themselves.\n        if (!type.startsWith('delete') || type.startsWith('deleteBy')) {\n          const [targetRange] = (event as any).getTargetRanges()\n\n          if (targetRange) {\n            const range = ReactEditor.toSlateRange(editor, targetRange, {\n              exactMatch: false,\n              suppressThrow: false,\n            })\n\n            if (!selection || !Range.equals(selection, range)) {\n              native = false\n\n              const selectionRef =\n                !isCompositionChange &&\n                editor.selection &&\n                Editor.rangeRef(editor, editor.selection)\n\n              Transforms.select(editor, range)\n\n              if (selectionRef) {\n                EDITOR_TO_USER_SELECTION.set(editor, selectionRef)\n              }\n            }\n          }\n        }\n\n        // Composition change types occur while a user is composing text and can't be\n        // cancelled. Let them through and wait for the composition to end.\n        if (isCompositionChange) {\n          return\n        }\n\n        if (!native) {\n          event.preventDefault()\n        }\n\n        // COMPAT: If the selection is expanded, even if the command seems like\n        // a delete forward/backward command it should delete the selection.\n        if (\n          selection &&\n          Range.isExpanded(selection) &&\n          type.startsWith('delete')\n        ) {\n          const direction = type.endsWith('Backward') ? 'backward' : 'forward'\n          Editor.deleteFragment(editor, { direction })\n          return\n        }\n\n        switch (type) {\n          case 'deleteByComposition':\n          case 'deleteByCut':\n          case 'deleteByDrag': {\n            Editor.deleteFragment(editor)\n            break\n          }\n\n          case 'deleteContent':\n          case 'deleteContentForward': {\n            Editor.deleteForward(editor)\n            break\n          }\n\n          case 'deleteContentBackward': {\n            Editor.deleteBackward(editor)\n            break\n          }\n\n          case 'deleteEntireSoftLine': {\n            Editor.deleteBackward(editor, { unit: 'line' })\n            Editor.deleteForward(editor, { unit: 'line' })\n            break\n          }\n\n          case 'deleteHardLineBackward': {\n            Editor.deleteBackward(editor, { unit: 'block' })\n            break\n          }\n\n          case 'deleteSoftLineBackward': {\n            Editor.deleteBackward(editor, { unit: 'line' })\n            break\n          }\n\n          case 'deleteHardLineForward': {\n            Editor.deleteForward(editor, { unit: 'block' })\n            break\n          }\n\n          case 'deleteSoftLineForward': {\n            Editor.deleteForward(editor, { unit: 'line' })\n            break\n          }\n\n          case 'deleteWordBackward': {\n            Editor.deleteBackward(editor, { unit: 'word' })\n            break\n          }\n\n          case 'deleteWordForward': {\n            Editor.deleteForward(editor, { unit: 'word' })\n            break\n          }\n\n          case 'insertLineBreak':\n            Editor.insertSoftBreak(editor)\n            break\n\n          case 'insertParagraph': {\n            Editor.insertBreak(editor)\n            break\n          }\n\n          case 'insertFromComposition':\n          case 'insertFromDrop':\n          case 'insertFromPaste':\n          case 'insertFromYank':\n          case 'insertReplacementText':\n          case 'insertText': {\n            if (type === 'insertFromComposition') {\n              // COMPAT: in Safari, `compositionend` is dispatched after the\n              // `beforeinput` for \"insertFromComposition\". But if we wait for it\n              // then we will abort because we're still composing and the selection\n              // won't be updated properly.\n              // https://www.w3.org/TR/input-events-2/\n              if (ReactEditor.isComposing(editor)) {\n                setIsComposing(false)\n                IS_COMPOSING.set(editor, false)\n              }\n            }\n\n            // use a weak comparison instead of 'instanceof' to allow\n            // programmatic access of paste events coming from external windows\n            // like cypress where cy.window does not work realibly\n            if (data?.constructor.name === 'DataTransfer') {\n              ReactEditor.insertData(editor, data)\n            } else if (typeof data === 'string') {\n              // Only insertText operations use the native functionality, for now.\n              // Potentially expand to single character deletes, as well.\n              if (native) {\n                deferredOperations.current.push(() =>\n                  Editor.insertText(editor, data)\n                )\n              } else {\n                Editor.insertText(editor, data)\n              }\n            }\n\n            break\n          }\n        }\n\n        // Restore the actual user section if nothing manually set it.\n        const toRestore = EDITOR_TO_USER_SELECTION.get(editor)?.unref()\n        EDITOR_TO_USER_SELECTION.delete(editor)\n\n        if (\n          toRestore &&\n          (!editor.selection || !Range.equals(editor.selection, toRestore))\n        ) {\n          Transforms.select(editor, toRestore)\n        }\n      }\n    },\n    [\n      editor,\n      onDOMSelectionChange,\n      onUserInput,\n      propsOnDOMBeforeInput,\n      readOnly,\n      scheduleOnDOMSelectionChange,\n    ]\n  )\n\n  const callbackRef = useCallback(\n    node => {\n      if (node == null) {\n        onDOMSelectionChange.cancel()\n        scheduleOnDOMSelectionChange.cancel()\n\n        EDITOR_TO_ELEMENT.delete(editor)\n        NODE_TO_ELEMENT.delete(editor)\n\n        if (ref.current && HAS_BEFORE_INPUT_SUPPORT) {\n          // @ts-ignore The `beforeinput` event isn't recognized.\n          ref.current.removeEventListener('beforeinput', onDOMBeforeInput)\n        }\n      } else {\n        // Attach a native DOM event handler for `beforeinput` events, because React's\n        // built-in `onBeforeInput` is actually a leaky polyfill that doesn't expose\n        // real `beforeinput` events sadly... (2019/11/04)\n        // https://github.com/facebook/react/issues/11211\n        if (HAS_BEFORE_INPUT_SUPPORT) {\n          // @ts-ignore The `beforeinput` event isn't recognized.\n          node.addEventListener('beforeinput', onDOMBeforeInput)\n        }\n      }\n\n      ref.current = node\n    },\n    [\n      onDOMSelectionChange,\n      scheduleOnDOMSelectionChange,\n      editor,\n      onDOMBeforeInput,\n    ]\n  )\n\n  // Attach a native DOM event handler for `selectionchange`, because React's\n  // built-in `onSelect` handler doesn't fire for all selection changes. It's a\n  // leaky polyfill that only fires on keypresses or clicks. Instead, we want to\n  // fire for any change to the selection inside the editor. (2019/11/04)\n  // https://github.com/facebook/react/issues/5785\n  useIsomorphicLayoutEffect(() => {\n    const window = ReactEditor.getWindow(editor)\n\n    window.document.addEventListener(\n      'selectionchange',\n      scheduleOnDOMSelectionChange\n    )\n\n    return () => {\n      window.document.removeEventListener(\n        'selectionchange',\n        scheduleOnDOMSelectionChange\n      )\n    }\n  }, [scheduleOnDOMSelectionChange])\n\n  const decorations = decorate([editor, []])\n\n  const showPlaceholder =\n    placeholder &&\n    editor.children.length === 1 &&\n    Array.from(Node.texts(editor)).length === 1 &&\n    Node.string(editor) === '' &&\n    !isComposing\n\n  const placeHolderResizeHandler = useCallback(\n    (placeholderEl: HTMLElement | null) => {\n      if (placeholderEl && showPlaceholder) {\n        setPlaceholderHeight(placeholderEl.getBoundingClientRect()?.height)\n      } else {\n        setPlaceholderHeight(undefined)\n      }\n    },\n    [showPlaceholder]\n  )\n\n  if (showPlaceholder) {\n    const start = Editor.start(editor, [])\n    decorations.push({\n      [PLACEHOLDER_SYMBOL]: true,\n      placeholder,\n      onPlaceholderResize: placeHolderResizeHandler,\n      anchor: start,\n      focus: start,\n    })\n  }\n\n  const { marks } = editor\n  state.hasMarkPlaceholder = false\n\n  if (editor.selection && Range.isCollapsed(editor.selection) && marks) {\n    const { anchor } = editor.selection\n    const leaf = Node.leaf(editor, anchor.path)\n    const { text, ...rest } = leaf\n\n    // While marks isn't a 'complete' text, we can still use loose Text.equals\n    // here which only compares marks anyway.\n    if (!Text.equals(leaf, marks as Text, { loose: true })) {\n      state.hasMarkPlaceholder = true\n\n      const unset = Object.fromEntries(\n        Object.keys(rest).map(mark => [mark, null])\n      )\n\n      decorations.push({\n        [MARK_PLACEHOLDER_SYMBOL]: true,\n        ...unset,\n        ...marks,\n\n        anchor,\n        focus: anchor,\n      })\n    }\n  }\n\n  // Update EDITOR_TO_MARK_PLACEHOLDER_MARKS in setTimeout useEffect to ensure we don't set it\n  // before we receive the composition end event.\n  useEffect(() => {\n    setTimeout(() => {\n      const { selection } = editor\n      if (selection) {\n        const { anchor } = selection\n        const text = Node.leaf(editor, anchor.path)\n\n        // While marks isn't a 'complete' text, we can still use loose Text.equals\n        // here which only compares marks anyway.\n        if (marks && !Text.equals(text, marks as Text, { loose: true })) {\n          EDITOR_TO_PENDING_INSERTION_MARKS.set(editor, marks)\n          return\n        }\n      }\n\n      EDITOR_TO_PENDING_INSERTION_MARKS.delete(editor)\n    })\n  })\n\n  return (\n    <ReadOnlyContext.Provider value={readOnly}>\n      <DecorateContext.Provider value={decorate}>\n        <RestoreDOM node={ref} receivedUserInput={receivedUserInput}>\n          <Component\n            role={readOnly ? undefined : 'textbox'}\n            aria-multiline={readOnly ? undefined : true}\n            {...attributes}\n            // COMPAT: Certain browsers don't support the `beforeinput` event, so we'd\n            // have to use hacks to make these replacement-based features work.\n            // For SSR situations HAS_BEFORE_INPUT_SUPPORT is false and results in prop\n            // mismatch warning app moves to browser. Pass-through consumer props when\n            // not CAN_USE_DOM (SSR) and default to falsy value\n            spellCheck={\n              HAS_BEFORE_INPUT_SUPPORT || !CAN_USE_DOM\n                ? attributes.spellCheck\n                : false\n            }\n            autoCorrect={\n              HAS_BEFORE_INPUT_SUPPORT || !CAN_USE_DOM\n                ? attributes.autoCorrect\n                : 'false'\n            }\n            autoCapitalize={\n              HAS_BEFORE_INPUT_SUPPORT || !CAN_USE_DOM\n                ? attributes.autoCapitalize\n                : 'false'\n            }\n            data-slate-editor\n            data-slate-node=\"value\"\n            // explicitly set this\n            contentEditable={!readOnly}\n            // in some cases, a decoration needs access to the range / selection to decorate a text node,\n            // then you will select the whole text node when you select part the of text\n            // this magic zIndex=\"-1\" will fix it\n            zindex={-1}\n            suppressContentEditableWarning\n            ref={callbackRef}\n            style={{\n              ...(disableDefaultStyles\n                ? {}\n                : {\n                    // Allow positioning relative to the editable element.\n                    position: 'relative',\n                    // Prevent the default outline styles.\n                    outline: 'none',\n                    // Preserve adjacent whitespace and new lines.\n                    whiteSpace: 'pre-wrap',\n                    // Allow words to break if they are too long.\n                    wordWrap: 'break-word',\n                    // Make the minimum height that of the placeholder.\n                    ...(placeholderHeight\n                      ? { minHeight: placeholderHeight }\n                      : {}),\n                  }),\n              // Allow for passed-in styles to override anything.\n              ...userStyle,\n            }}\n            onBeforeInput={useCallback(\n              (event: React.FormEvent<HTMLDivElement>) => {\n                // COMPAT: Certain browsers don't support the `beforeinput` event, so we\n                // fall back to React's leaky polyfill instead just for it. It\n                // only works for the `insertText` input type.\n                if (\n                  !HAS_BEFORE_INPUT_SUPPORT &&\n                  !readOnly &&\n                  !isEventHandled(event, attributes.onBeforeInput) &&\n                  ReactEditor.hasSelectableTarget(editor, event.target)\n                ) {\n                  event.preventDefault()\n                  if (!ReactEditor.isComposing(editor)) {\n                    const text = (event as any).data as string\n                    Editor.insertText(editor, text)\n                  }\n                }\n              },\n              [attributes.onBeforeInput, editor, readOnly]\n            )}\n            onInput={useCallback(\n              (event: React.FormEvent<HTMLDivElement>) => {\n                if (isEventHandled(event, attributes.onInput)) {\n                  return\n                }\n\n                if (androidInputManagerRef.current) {\n                  androidInputManagerRef.current.handleInput()\n                  return\n                }\n\n                // Flush native operations, as native events will have propogated\n                // and we can correctly compare DOM text values in components\n                // to stop rendering, so that browser functions like autocorrect\n                // and spellcheck work as expected.\n                for (const op of deferredOperations.current) {\n                  op()\n                }\n                deferredOperations.current = []\n              },\n              [attributes.onInput]\n            )}\n            onBlur={useCallback(\n              (event: React.FocusEvent<HTMLDivElement>) => {\n                if (\n                  readOnly ||\n                  state.isUpdatingSelection ||\n                  !ReactEditor.hasSelectableTarget(editor, event.target) ||\n                  isEventHandled(event, attributes.onBlur)\n                ) {\n                  return\n                }\n\n                // COMPAT: If the current `activeElement` is still the previous\n                // one, this is due to the window being blurred when the tab\n                // itself becomes unfocused, so we want to abort early to allow to\n                // editor to stay focused when the tab becomes focused again.\n                const root = ReactEditor.findDocumentOrShadowRoot(editor)\n                if (state.latestElement === root.activeElement) {\n                  return\n                }\n\n                const { relatedTarget } = event\n                const el = ReactEditor.toDOMNode(editor, editor)\n\n                // COMPAT: The event should be ignored if the focus is returning\n                // to the editor from an embedded editable element (eg. an <input>\n                // element inside a void node).\n                if (relatedTarget === el) {\n                  return\n                }\n\n                // COMPAT: The event should be ignored if the focus is moving from\n                // the editor to inside a void node's spacer element.\n                if (\n                  isDOMElement(relatedTarget) &&\n                  relatedTarget.hasAttribute('data-slate-spacer')\n                ) {\n                  return\n                }\n\n                // COMPAT: The event should be ignored if the focus is moving to a\n                // non- editable section of an element that isn't a void node (eg.\n                // a list item of the check list example).\n                if (\n                  relatedTarget != null &&\n                  isDOMNode(relatedTarget) &&\n                  ReactEditor.hasDOMNode(editor, relatedTarget)\n                ) {\n                  const node = ReactEditor.toSlateNode(editor, relatedTarget)\n\n                  if (Element.isElement(node) && !editor.isVoid(node)) {\n                    return\n                  }\n                }\n\n                // COMPAT: Safari doesn't always remove the selection even if the content-\n                // editable element no longer has focus. Refer to:\n                // https://stackoverflow.com/questions/12353247/force-contenteditable-div-to-stop-accepting-input-after-it-loses-focus-under-web\n                if (IS_SAFARI) {\n                  const domSelection = root.getSelection()\n                  domSelection?.removeAllRanges()\n                }\n\n                IS_FOCUSED.delete(editor)\n              },\n              [\n                readOnly,\n                state.isUpdatingSelection,\n                state.latestElement,\n                editor,\n                attributes.onBlur,\n              ]\n            )}\n            onClick={useCallback(\n              (event: React.MouseEvent<HTMLDivElement>) => {\n                if (\n                  ReactEditor.hasTarget(editor, event.target) &&\n                  !isEventHandled(event, attributes.onClick) &&\n                  isDOMNode(event.target)\n                ) {\n                  const node = ReactEditor.toSlateNode(editor, event.target)\n                  const path = ReactEditor.findPath(editor, node)\n\n                  // At this time, the Slate document may be arbitrarily different,\n                  // because onClick handlers can change the document before we get here.\n                  // Therefore we must check that this path actually exists,\n                  // and that it still refers to the same node.\n                  if (\n                    !Editor.hasPath(editor, path) ||\n                    Node.get(editor, path) !== node\n                  ) {\n                    return\n                  }\n\n                  if (event.detail === TRIPLE_CLICK && path.length >= 1) {\n                    let blockPath = path\n                    if (\n                      !(Element.isElement(node) && Editor.isBlock(editor, node))\n                    ) {\n                      const block = Editor.above(editor, {\n                        match: n =>\n                          Element.isElement(n) && Editor.isBlock(editor, n),\n                        at: path,\n                      })\n\n                      blockPath = block?.[1] ?? path.slice(0, 1)\n                    }\n\n                    const range = Editor.range(editor, blockPath)\n                    Transforms.select(editor, range)\n                    return\n                  }\n\n                  if (readOnly) {\n                    return\n                  }\n\n                  const start = Editor.start(editor, path)\n                  const end = Editor.end(editor, path)\n                  const startVoid = Editor.void(editor, { at: start })\n                  const endVoid = Editor.void(editor, { at: end })\n\n                  if (\n                    startVoid &&\n                    endVoid &&\n                    Path.equals(startVoid[1], endVoid[1])\n                  ) {\n                    const range = Editor.range(editor, start)\n                    Transforms.select(editor, range)\n                  }\n                }\n              },\n              [editor, attributes.onClick, readOnly]\n            )}\n            onCompositionEnd={useCallback(\n              (event: React.CompositionEvent<HTMLDivElement>) => {\n                if (ReactEditor.hasSelectableTarget(editor, event.target)) {\n                  if (ReactEditor.isComposing(editor)) {\n                    setIsComposing(false)\n                    IS_COMPOSING.set(editor, false)\n                  }\n\n                  androidInputManagerRef.current?.handleCompositionEnd(event)\n\n                  if (\n                    isEventHandled(event, attributes.onCompositionEnd) ||\n                    IS_ANDROID\n                  ) {\n                    return\n                  }\n\n                  // COMPAT: In Chrome, `beforeinput` events for compositions\n                  // aren't correct and never fire the \"insertFromComposition\"\n                  // type that we need. So instead, insert whenever a composition\n                  // ends since it will already have been committed to the DOM.\n                  if (\n                    !IS_SAFARI &&\n                    !IS_FIREFOX_LEGACY &&\n                    !IS_IOS &&\n                    !IS_WECHATBROWSER &&\n                    !IS_UC_MOBILE &&\n                    event.data\n                  ) {\n                    const placeholderMarks = EDITOR_TO_PENDING_INSERTION_MARKS.get(\n                      editor\n                    )\n                    EDITOR_TO_PENDING_INSERTION_MARKS.delete(editor)\n\n                    // Ensure we insert text with the marks the user was actually seeing\n                    if (placeholderMarks !== undefined) {\n                      EDITOR_TO_USER_MARKS.set(editor, editor.marks)\n                      editor.marks = placeholderMarks\n                    }\n\n                    Editor.insertText(editor, event.data)\n\n                    const userMarks = EDITOR_TO_USER_MARKS.get(editor)\n                    EDITOR_TO_USER_MARKS.delete(editor)\n                    if (userMarks !== undefined) {\n                      editor.marks = userMarks\n                    }\n                  }\n                }\n              },\n              [attributes.onCompositionEnd, editor]\n            )}\n            onCompositionUpdate={useCallback(\n              (event: React.CompositionEvent<HTMLDivElement>) => {\n                if (\n                  ReactEditor.hasSelectableTarget(editor, event.target) &&\n                  !isEventHandled(event, attributes.onCompositionUpdate)\n                ) {\n                  if (!ReactEditor.isComposing(editor)) {\n                    setIsComposing(true)\n                    IS_COMPOSING.set(editor, true)\n                  }\n                }\n              },\n              [attributes.onCompositionUpdate, editor]\n            )}\n            onCompositionStart={useCallback(\n              (event: React.CompositionEvent<HTMLDivElement>) => {\n                if (ReactEditor.hasSelectableTarget(editor, event.target)) {\n                  androidInputManagerRef.current?.handleCompositionStart(event)\n\n                  if (\n                    isEventHandled(event, attributes.onCompositionStart) ||\n                    IS_ANDROID\n                  ) {\n                    return\n                  }\n\n                  setIsComposing(true)\n\n                  const { selection } = editor\n                  if (selection) {\n                    if (Range.isExpanded(selection)) {\n                      Editor.deleteFragment(editor)\n                      return\n                    }\n                    const inline = Editor.above(editor, {\n                      match: n =>\n                        Element.isElement(n) && Editor.isInline(editor, n),\n                      mode: 'highest',\n                    })\n                    if (inline) {\n                      const [, inlinePath] = inline\n                      if (Editor.isEnd(editor, selection.anchor, inlinePath)) {\n                        const point = Editor.after(editor, inlinePath)!\n                        Transforms.setSelection(editor, {\n                          anchor: point,\n                          focus: point,\n                        })\n                      }\n                    }\n                  }\n                }\n              },\n              [attributes.onCompositionStart, editor]\n            )}\n            onCopy={useCallback(\n              (event: React.ClipboardEvent<HTMLDivElement>) => {\n                if (\n                  ReactEditor.hasSelectableTarget(editor, event.target) &&\n                  !isEventHandled(event, attributes.onCopy) &&\n                  !isDOMEventTargetInput(event)\n                ) {\n                  event.preventDefault()\n                  ReactEditor.setFragmentData(\n                    editor,\n                    event.clipboardData,\n                    'copy'\n                  )\n                }\n              },\n              [attributes.onCopy, editor]\n            )}\n            onCut={useCallback(\n              (event: React.ClipboardEvent<HTMLDivElement>) => {\n                if (\n                  !readOnly &&\n                  ReactEditor.hasSelectableTarget(editor, event.target) &&\n                  !isEventHandled(event, attributes.onCut) &&\n                  !isDOMEventTargetInput(event)\n                ) {\n                  event.preventDefault()\n                  ReactEditor.setFragmentData(\n                    editor,\n                    event.clipboardData,\n                    'cut'\n                  )\n                  const { selection } = editor\n\n                  if (selection) {\n                    if (Range.isExpanded(selection)) {\n                      Editor.deleteFragment(editor)\n                    } else {\n                      const node = Node.parent(editor, selection.anchor.path)\n                      if (Editor.isVoid(editor, node)) {\n                        Transforms.delete(editor)\n                      }\n                    }\n                  }\n                }\n              },\n              [readOnly, editor, attributes.onCut]\n            )}\n            onDragOver={useCallback(\n              (event: React.DragEvent<HTMLDivElement>) => {\n                if (\n                  ReactEditor.hasTarget(editor, event.target) &&\n                  !isEventHandled(event, attributes.onDragOver)\n                ) {\n                  // Only when the target is void, call `preventDefault` to signal\n                  // that drops are allowed. Editable content is droppable by\n                  // default, and calling `preventDefault` hides the cursor.\n                  const node = ReactEditor.toSlateNode(editor, event.target)\n\n                  if (Element.isElement(node) && Editor.isVoid(editor, node)) {\n                    event.preventDefault()\n                  }\n                }\n              },\n              [attributes.onDragOver, editor]\n            )}\n            onDragStart={useCallback(\n              (event: React.DragEvent<HTMLDivElement>) => {\n                if (\n                  !readOnly &&\n                  ReactEditor.hasTarget(editor, event.target) &&\n                  !isEventHandled(event, attributes.onDragStart)\n                ) {\n                  const node = ReactEditor.toSlateNode(editor, event.target)\n                  const path = ReactEditor.findPath(editor, node)\n                  const voidMatch =\n                    (Element.isElement(node) && Editor.isVoid(editor, node)) ||\n                    Editor.void(editor, { at: path, voids: true })\n\n                  // If starting a drag on a void node, make sure it is selected\n                  // so that it shows up in the selection's fragment.\n                  if (voidMatch) {\n                    const range = Editor.range(editor, path)\n                    Transforms.select(editor, range)\n                  }\n\n                  state.isDraggingInternally = true\n\n                  ReactEditor.setFragmentData(\n                    editor,\n                    event.dataTransfer,\n                    'drag'\n                  )\n                }\n              },\n              [readOnly, editor, attributes.onDragStart, state]\n            )}\n            onDrop={useCallback(\n              (event: React.DragEvent<HTMLDivElement>) => {\n                if (\n                  !readOnly &&\n                  ReactEditor.hasTarget(editor, event.target) &&\n                  !isEventHandled(event, attributes.onDrop)\n                ) {\n                  event.preventDefault()\n\n                  // Keep a reference to the dragged range before updating selection\n                  const draggedRange = editor.selection\n\n                  // Find the range where the drop happened\n                  const range = ReactEditor.findEventRange(editor, event)\n                  const data = event.dataTransfer\n\n                  Transforms.select(editor, range)\n\n                  if (state.isDraggingInternally) {\n                    if (\n                      draggedRange &&\n                      !Range.equals(draggedRange, range) &&\n                      !Editor.void(editor, { at: range, voids: true })\n                    ) {\n                      Transforms.delete(editor, {\n                        at: draggedRange,\n                      })\n                    }\n                  }\n\n                  ReactEditor.insertData(editor, data)\n\n                  // When dragging from another source into the editor, it's possible\n                  // that the current editor does not have focus.\n                  if (!ReactEditor.isFocused(editor)) {\n                    ReactEditor.focus(editor)\n                  }\n                }\n\n                state.isDraggingInternally = false\n              },\n              [readOnly, editor, attributes.onDrop, state]\n            )}\n            onDragEnd={useCallback(\n              (event: React.DragEvent<HTMLDivElement>) => {\n                if (\n                  !readOnly &&\n                  state.isDraggingInternally &&\n                  attributes.onDragEnd &&\n                  ReactEditor.hasTarget(editor, event.target)\n                ) {\n                  attributes.onDragEnd(event)\n                }\n\n                // When dropping on a different droppable element than the current editor,\n                // `onDrop` is not called. So we need to clean up in `onDragEnd` instead.\n                // Note: `onDragEnd` is only called when `onDrop` is not called\n                state.isDraggingInternally = false\n              },\n              [readOnly, state, attributes, editor]\n            )}\n            onFocus={useCallback(\n              (event: React.FocusEvent<HTMLDivElement>) => {\n                if (\n                  !readOnly &&\n                  !state.isUpdatingSelection &&\n                  ReactEditor.hasEditableTarget(editor, event.target) &&\n                  !isEventHandled(event, attributes.onFocus)\n                ) {\n                  const el = ReactEditor.toDOMNode(editor, editor)\n                  const root = ReactEditor.findDocumentOrShadowRoot(editor)\n                  state.latestElement = root.activeElement\n\n                  // COMPAT: If the editor has nested editable elements, the focus\n                  // can go to them. In Firefox, this must be prevented because it\n                  // results in issues with keyboard navigation. (2017/03/30)\n                  if (IS_FIREFOX && event.target !== el) {\n                    el.focus()\n                    return\n                  }\n\n                  IS_FOCUSED.set(editor, true)\n                }\n              },\n              [readOnly, state, editor, attributes.onFocus]\n            )}\n            onKeyDown={useCallback(\n              (event: React.KeyboardEvent<HTMLDivElement>) => {\n                if (\n                  !readOnly &&\n                  ReactEditor.hasEditableTarget(editor, event.target)\n                ) {\n                  androidInputManagerRef.current?.handleKeyDown(event)\n\n                  const { nativeEvent } = event\n\n                  // COMPAT: The composition end event isn't fired reliably in all browsers,\n                  // so we sometimes might end up stuck in a composition state even though we\n                  // aren't composing any more.\n                  if (\n                    ReactEditor.isComposing(editor) &&\n                    nativeEvent.isComposing === false\n                  ) {\n                    IS_COMPOSING.set(editor, false)\n                    setIsComposing(false)\n                  }\n\n                  if (\n                    isEventHandled(event, attributes.onKeyDown) ||\n                    ReactEditor.isComposing(editor)\n                  ) {\n                    return\n                  }\n\n                  const { selection } = editor\n                  const element =\n                    editor.children[\n                      selection !== null ? selection.focus.path[0] : 0\n                    ]\n                  const isRTL = getDirection(Node.string(element)) === 'rtl'\n\n                  // COMPAT: Since we prevent the default behavior on\n                  // `beforeinput` events, the browser doesn't think there's ever\n                  // any history stack to undo or redo, so we have to manage these\n                  // hotkeys ourselves. (2019/11/06)\n                  if (Hotkeys.isRedo(nativeEvent)) {\n                    event.preventDefault()\n                    const maybeHistoryEditor: any = editor\n\n                    if (typeof maybeHistoryEditor.redo === 'function') {\n                      maybeHistoryEditor.redo()\n                    }\n\n                    return\n                  }\n\n                  if (Hotkeys.isUndo(nativeEvent)) {\n                    event.preventDefault()\n                    const maybeHistoryEditor: any = editor\n\n                    if (typeof maybeHistoryEditor.undo === 'function') {\n                      maybeHistoryEditor.undo()\n                    }\n\n                    return\n                  }\n\n                  // COMPAT: Certain browsers don't handle the selection updates\n                  // properly. In Chrome, the selection isn't properly extended.\n                  // And in Firefox, the selection isn't properly collapsed.\n                  // (2017/10/17)\n                  if (Hotkeys.isMoveLineBackward(nativeEvent)) {\n                    event.preventDefault()\n                    Transforms.move(editor, { unit: 'line', reverse: true })\n                    return\n                  }\n\n                  if (Hotkeys.isMoveLineForward(nativeEvent)) {\n                    event.preventDefault()\n                    Transforms.move(editor, { unit: 'line' })\n                    return\n                  }\n\n                  if (Hotkeys.isExtendLineBackward(nativeEvent)) {\n                    event.preventDefault()\n                    Transforms.move(editor, {\n                      unit: 'line',\n                      edge: 'focus',\n                      reverse: true,\n                    })\n                    return\n                  }\n\n                  if (Hotkeys.isExtendLineForward(nativeEvent)) {\n                    event.preventDefault()\n                    Transforms.move(editor, { unit: 'line', edge: 'focus' })\n                    return\n                  }\n\n                  // COMPAT: If a void node is selected, or a zero-width text node\n                  // adjacent to an inline is selected, we need to handle these\n                  // hotkeys manually because browsers won't be able to skip over\n                  // the void node with the zero-width space not being an empty\n                  // string.\n                  if (Hotkeys.isMoveBackward(nativeEvent)) {\n                    event.preventDefault()\n\n                    if (selection && Range.isCollapsed(selection)) {\n                      Transforms.move(editor, { reverse: !isRTL })\n                    } else {\n                      Transforms.collapse(editor, { edge: 'start' })\n                    }\n\n                    return\n                  }\n\n                  if (Hotkeys.isMoveForward(nativeEvent)) {\n                    event.preventDefault()\n\n                    if (selection && Range.isCollapsed(selection)) {\n                      Transforms.move(editor, { reverse: isRTL })\n                    } else {\n                      Transforms.collapse(editor, { edge: 'end' })\n                    }\n\n                    return\n                  }\n\n                  if (Hotkeys.isMoveWordBackward(nativeEvent)) {\n                    event.preventDefault()\n\n                    if (selection && Range.isExpanded(selection)) {\n                      Transforms.collapse(editor, { edge: 'focus' })\n                    }\n\n                    Transforms.move(editor, { unit: 'word', reverse: !isRTL })\n                    return\n                  }\n\n                  if (Hotkeys.isMoveWordForward(nativeEvent)) {\n                    event.preventDefault()\n\n                    if (selection && Range.isExpanded(selection)) {\n                      Transforms.collapse(editor, { edge: 'focus' })\n                    }\n\n                    Transforms.move(editor, { unit: 'word', reverse: isRTL })\n                    return\n                  }\n\n                  // COMPAT: Certain browsers don't support the `beforeinput` event, so we\n                  // fall back to guessing at the input intention for hotkeys.\n                  // COMPAT: In iOS, some of these hotkeys are handled in the\n                  if (!HAS_BEFORE_INPUT_SUPPORT) {\n                    // We don't have a core behavior for these, but they change the\n                    // DOM if we don't prevent them, so we have to.\n                    if (\n                      Hotkeys.isBold(nativeEvent) ||\n                      Hotkeys.isItalic(nativeEvent) ||\n                      Hotkeys.isTransposeCharacter(nativeEvent)\n                    ) {\n                      event.preventDefault()\n                      return\n                    }\n\n                    if (Hotkeys.isSoftBreak(nativeEvent)) {\n                      event.preventDefault()\n                      Editor.insertSoftBreak(editor)\n                      return\n                    }\n\n                    if (Hotkeys.isSplitBlock(nativeEvent)) {\n                      event.preventDefault()\n                      Editor.insertBreak(editor)\n                      return\n                    }\n\n                    if (Hotkeys.isDeleteBackward(nativeEvent)) {\n                      event.preventDefault()\n\n                      if (selection && Range.isExpanded(selection)) {\n                        Editor.deleteFragment(editor, { direction: 'backward' })\n                      } else {\n                        Editor.deleteBackward(editor)\n                      }\n\n                      return\n                    }\n\n                    if (Hotkeys.isDeleteForward(nativeEvent)) {\n                      event.preventDefault()\n\n                      if (selection && Range.isExpanded(selection)) {\n                        Editor.deleteFragment(editor, { direction: 'forward' })\n                      } else {\n                        Editor.deleteForward(editor)\n                      }\n\n                      return\n                    }\n\n                    if (Hotkeys.isDeleteLineBackward(nativeEvent)) {\n                      event.preventDefault()\n\n                      if (selection && Range.isExpanded(selection)) {\n                        Editor.deleteFragment(editor, { direction: 'backward' })\n                      } else {\n                        Editor.deleteBackward(editor, { unit: 'line' })\n                      }\n\n                      return\n                    }\n\n                    if (Hotkeys.isDeleteLineForward(nativeEvent)) {\n                      event.preventDefault()\n\n                      if (selection && Range.isExpanded(selection)) {\n                        Editor.deleteFragment(editor, { direction: 'forward' })\n                      } else {\n                        Editor.deleteForward(editor, { unit: 'line' })\n                      }\n\n                      return\n                    }\n\n                    if (Hotkeys.isDeleteWordBackward(nativeEvent)) {\n                      event.preventDefault()\n\n                      if (selection && Range.isExpanded(selection)) {\n                        Editor.deleteFragment(editor, { direction: 'backward' })\n                      } else {\n                        Editor.deleteBackward(editor, { unit: 'word' })\n                      }\n\n                      return\n                    }\n\n                    if (Hotkeys.isDeleteWordForward(nativeEvent)) {\n                      event.preventDefault()\n\n                      if (selection && Range.isExpanded(selection)) {\n                        Editor.deleteFragment(editor, { direction: 'forward' })\n                      } else {\n                        Editor.deleteForward(editor, { unit: 'word' })\n                      }\n\n                      return\n                    }\n                  } else {\n                    if (IS_CHROME || IS_SAFARI) {\n                      // COMPAT: Chrome and Safari support `beforeinput` event but do not fire\n                      // an event when deleting backwards in a selected void inline node\n                      if (\n                        selection &&\n                        (Hotkeys.isDeleteBackward(nativeEvent) ||\n                          Hotkeys.isDeleteForward(nativeEvent)) &&\n                        Range.isCollapsed(selection)\n                      ) {\n                        const currentNode = Node.parent(\n                          editor,\n                          selection.anchor.path\n                        )\n\n                        if (\n                          Element.isElement(currentNode) &&\n                          Editor.isVoid(editor, currentNode) &&\n                          (Editor.isInline(editor, currentNode) ||\n                            Editor.isBlock(editor, currentNode))\n                        ) {\n                          event.preventDefault()\n                          Editor.deleteBackward(editor, { unit: 'block' })\n\n                          return\n                        }\n                      }\n                    }\n                  }\n                }\n              },\n              [readOnly, editor, attributes.onKeyDown]\n            )}\n            onPaste={useCallback(\n              (event: React.ClipboardEvent<HTMLDivElement>) => {\n                if (\n                  !readOnly &&\n                  ReactEditor.hasEditableTarget(editor, event.target) &&\n                  !isEventHandled(event, attributes.onPaste)\n                ) {\n                  // COMPAT: Certain browsers don't support the `beforeinput` event, so we\n                  // fall back to React's `onPaste` here instead.\n                  // COMPAT: Firefox, Chrome and Safari don't emit `beforeinput` events\n                  // when \"paste without formatting\" is used, so fallback. (2020/02/20)\n                  // COMPAT: Safari InputEvents generated by pasting won't include\n                  // application/x-slate-fragment items, so use the\n                  // ClipboardEvent here. (2023/03/15)\n                  if (\n                    !HAS_BEFORE_INPUT_SUPPORT ||\n                    isPlainTextOnlyPaste(event.nativeEvent) ||\n                    IS_SAFARI\n                  ) {\n                    event.preventDefault()\n                    ReactEditor.insertData(editor, event.clipboardData)\n                  }\n                }\n              },\n              [readOnly, editor, attributes.onPaste]\n            )}\n          >\n            <Children\n              decorations={decorations}\n              node={editor}\n              renderElement={renderElement}\n              renderPlaceholder={renderPlaceholder}\n              renderLeaf={renderLeaf}\n              selection={editor.selection}\n            />\n          </Component>\n        </RestoreDOM>\n      </DecorateContext.Provider>\n    </ReadOnlyContext.Provider>\n  )\n}\n\n/**\n * The props that get passed to renderPlaceholder\n */\nexport type RenderPlaceholderProps = {\n  children: any\n  attributes: {\n    'data-slate-placeholder': boolean\n    dir?: 'rtl'\n    contentEditable: boolean\n    ref: React.RefCallback<any>\n    style: React.CSSProperties\n  }\n}\n\n/**\n * The default placeholder element\n */\n\nexport const DefaultPlaceholder = ({\n  attributes,\n  children,\n}: RenderPlaceholderProps) => (\n  // COMPAT: Artificially add a line-break to the end on the placeholder element\n  // to prevent Android IMEs to pick up its content in autocorrect and to auto-capitalize the first letter\n  <span {...attributes}>\n    {children}\n    {IS_ANDROID && <br />}\n  </span>\n)\n\n/**\n * A default memoized decorate function.\n */\n\nexport const defaultDecorate: (entry: NodeEntry) => Range[] = () => []\n\n/**\n * A default implement to scroll dom range into view.\n */\n\nconst defaultScrollSelectionIntoView = (\n  editor: ReactEditor,\n  domRange: DOMRange\n) => {\n  // This was affecting the selection of multiple blocks and dragging behavior,\n  // so enabled only if the selection has been collapsed.\n  if (\n    domRange.getBoundingClientRect &&\n    (!editor.selection ||\n      (editor.selection && Range.isCollapsed(editor.selection)))\n  ) {\n    const leafEl = domRange.startContainer.parentElement!\n    leafEl.getBoundingClientRect = domRange.getBoundingClientRect.bind(domRange)\n    scrollIntoView(leafEl, {\n      scrollMode: 'if-needed',\n    })\n\n    // @ts-expect-error an unorthodox delete D:\n    delete leafEl.getBoundingClientRect\n  }\n}\n\n/**\n * Check if an event is overrided by a handler.\n */\n\nexport const isEventHandled = <\n  EventType extends React.SyntheticEvent<unknown, unknown>\n>(\n  event: EventType,\n  handler?: (event: EventType) => void | boolean\n) => {\n  if (!handler) {\n    return false\n  }\n  // The custom event handler may return a boolean to specify whether the event\n  // shall be treated as being handled or not.\n  const shouldTreatEventAsHandled = handler(event)\n\n  if (shouldTreatEventAsHandled != null) {\n    return shouldTreatEventAsHandled\n  }\n\n  return event.isDefaultPrevented() || event.isPropagationStopped()\n}\n\n/**\n * Check if the event's target is an input element\n */\nexport const isDOMEventTargetInput = <\n  EventType extends React.SyntheticEvent<unknown, unknown>\n>(\n  event: EventType\n) => {\n  return (\n    isDOMNode(event.target) &&\n    (event.target instanceof HTMLInputElement ||\n      event.target instanceof HTMLTextAreaElement)\n  )\n}\n\n/**\n * Check if a DOM event is overrided by a handler.\n */\n\nexport const isDOMEventHandled = <E extends Event>(\n  event: E,\n  handler?: (event: E) => void | boolean\n) => {\n  if (!handler) {\n    return false\n  }\n\n  // The custom event handler may return a boolean to specify whether the event\n  // shall be treated as being handled or not.\n  const shouldTreatEventAsHandled = handler(event)\n\n  if (shouldTreatEventAsHandled != null) {\n    return shouldTreatEventAsHandled\n  }\n\n  return event.defaultPrevented\n}\n", "import { createContext, useContext } from 'react'\n\n/**\n * A React context for sharing the `focused` state of the editor.\n */\n\nexport const FocusedContext = createContext(false)\n\n/**\n * Get the current `focused` state of the editor.\n */\n\nexport const useFocused = (): boolean => {\n  return useContext(FocusedContext)\n}\n", "import {\n  createContext,\n  useCallback,\n  useContext,\n  useMemo,\n  useReducer,\n  useRef,\n} from 'react'\nimport { Editor } from 'slate'\nimport { useIsomorphicLayoutEffect } from './use-isomorphic-layout-effect'\n\nfunction isError(error: any): error is Error {\n  return error instanceof Error\n}\n\ntype EditorChangeHandler = (editor: Editor) => void\n/**\n * A React context for sharing the editor selector context in a way to control rerenders\n */\n\nexport const SlateSelectorContext = createContext<{\n  getSlate: () => Editor\n  addEventListener: (callback: EditorChangeHandler) => () => void\n}>({} as any)\n\nconst refEquality = (a: any, b: any) => a === b\n\n/**\n * use redux style selectors to prevent rerendering on every keystroke.\n * Bear in mind rerendering can only prevented if the returned value is a value type or for reference types (e.g. objects and arrays) add a custom equality function.\n *\n * Example:\n * ```\n *  const isSelectionActive = useSlateSelector(editor => Boolean(editor.selection));\n * ```\n */\nexport function useSlateSelector<T>(\n  selector: (editor: Editor) => T,\n  equalityFn: (a: T, b: T) => boolean = refEquality\n) {\n  const [, forceRender] = useReducer(s => s + 1, 0)\n  const context = useContext(SlateSelectorContext)\n  if (!context) {\n    throw new Error(\n      `The \\`useSlateSelector\\` hook must be used inside the <Slate> component's context.`\n    )\n  }\n  const { getSlate, addEventListener } = context\n\n  const latestSubscriptionCallbackError = useRef<Error | undefined>()\n  const latestSelector = useRef<(editor: Editor) => T>(() => null as any)\n  const latestSelectedState = useRef<T>((null as any) as T)\n  let selectedState: T\n\n  try {\n    if (\n      selector !== latestSelector.current ||\n      latestSubscriptionCallbackError.current\n    ) {\n      selectedState = selector(getSlate())\n    } else {\n      selectedState = latestSelectedState.current\n    }\n  } catch (err) {\n    if (latestSubscriptionCallbackError.current && isError(err)) {\n      err.message += `\\nThe error may be correlated with this previous error:\\n${latestSubscriptionCallbackError.current.stack}\\n\\n`\n    }\n\n    throw err\n  }\n  useIsomorphicLayoutEffect(() => {\n    latestSelector.current = selector\n    latestSelectedState.current = selectedState\n    latestSubscriptionCallbackError.current = undefined\n  })\n\n  useIsomorphicLayoutEffect(\n    () => {\n      function checkForUpdates() {\n        try {\n          const newSelectedState = latestSelector.current(getSlate())\n\n          if (equalityFn(newSelectedState, latestSelectedState.current)) {\n            return\n          }\n\n          latestSelectedState.current = newSelectedState\n        } catch (err) {\n          // we ignore all errors here, since when the component\n          // is re-rendered, the selectors are called again, and\n          // will throw again, if neither props nor store state\n          // changed\n          latestSubscriptionCallbackError.current = err\n        }\n\n        forceRender()\n      }\n\n      const unsubscribe = addEventListener(checkForUpdates)\n\n      checkForUpdates()\n\n      return () => unsubscribe()\n    },\n    // don't rerender on equalityFn change since we want to be able to define it inline\n    [addEventListener, getSlate]\n  )\n\n  return selectedState\n}\n\n/**\n * Create selector context with editor updating on every editor change\n */\nexport function useSelectorContext(editor: Editor) {\n  const eventListeners = useRef<EditorChangeHandler[]>([]).current\n  const slateRef = useRef<{\n    editor: Editor\n  }>({\n    editor,\n  }).current\n  const onChange = useCallback(\n    (editor: Editor) => {\n      slateRef.editor = editor\n      eventListeners.forEach((listener: EditorChangeHandler) =>\n        listener(editor)\n      )\n    },\n    [eventListeners, slateRef]\n  )\n\n  const selectorContext = useMemo(() => {\n    return {\n      getSlate: () => slateRef.editor,\n      addEventListener: (callback: EditorChangeHandler) => {\n        eventListeners.push(callback)\n        return () => {\n          eventListeners.splice(eventListeners.indexOf(callback), 1)\n        }\n      },\n    }\n  }, [eventListeners, slateRef])\n  return { selectorContext, onChange }\n}\n", "import React, { useState, useCallback, useEffect, useRef } from 'react'\nimport { Editor, Node, Descendant, Scrubber } from 'slate'\nimport { ReactEditor } from '../plugin/react-editor'\nimport { FocusedContext } from '../hooks/use-focused'\nimport { EditorContext } from '../hooks/use-slate-static'\nimport { SlateContext, SlateContextValue } from '../hooks/use-slate'\nimport {\n  useSelectorContext,\n  SlateSelectorContext,\n} from '../hooks/use-slate-selector'\nimport { EDITOR_TO_ON_CHANGE } from '../utils/weak-maps'\nimport { IS_REACT_VERSION_17_OR_ABOVE } from '../utils/environment'\nimport { useIsomorphicLayoutEffect } from '../hooks/use-isomorphic-layout-effect'\n\n/**\n * A wrapper around the provider to handle `onChange` events, because the editor\n * is a mutable singleton so it won't ever register as \"changed\" otherwise.\n */\n\nexport const Slate = (props: {\n  editor: ReactEditor\n  value: Descendant[]\n  children: React.ReactNode\n  onChange?: (value: Descendant[]) => void\n}) => {\n  const { editor, children, onChange, value, ...rest } = props\n  const unmountRef = useRef(false)\n\n  const [context, setContext] = React.useState<SlateContextValue>(() => {\n    if (!Node.isNodeList(value)) {\n      throw new Error(\n        `[Slate] value is invalid! Expected a list of elements but got: ${Scrubber.stringify(\n          value\n        )}`\n      )\n    }\n    if (!Editor.isEditor(editor)) {\n      throw new Error(\n        `[Slate] editor is invalid! You passed: ${Scrubber.stringify(editor)}`\n      )\n    }\n    editor.children = value\n    Object.assign(editor, rest)\n    return { v: 0, editor }\n  })\n\n  const {\n    selectorContext,\n    onChange: handleSelectorChange,\n  } = useSelectorContext(editor)\n\n  const onContextChange = useCallback(() => {\n    if (onChange) {\n      onChange(editor.children)\n    }\n\n    setContext(prevContext => ({\n      v: prevContext.v + 1,\n      editor,\n    }))\n    handleSelectorChange(editor)\n  }, [editor, handleSelectorChange, onChange])\n\n  useEffect(() => {\n    EDITOR_TO_ON_CHANGE.set(editor, onContextChange)\n\n    return () => {\n      EDITOR_TO_ON_CHANGE.set(editor, () => {})\n      unmountRef.current = true\n    }\n  }, [editor, onContextChange])\n\n  const [isFocused, setIsFocused] = useState(ReactEditor.isFocused(editor))\n\n  useEffect(() => {\n    setIsFocused(ReactEditor.isFocused(editor))\n  }, [editor])\n\n  useIsomorphicLayoutEffect(() => {\n    const fn = () => setIsFocused(ReactEditor.isFocused(editor))\n    if (IS_REACT_VERSION_17_OR_ABOVE) {\n      // In React >= 17 onFocus and onBlur listen to the focusin and focusout events during the bubbling phase.\n      // Therefore in order for <Editable />'s handlers to run first, which is necessary for ReactEditor.isFocused(editor)\n      // to return the correct value, we have to listen to the focusin and focusout events without useCapture here.\n      document.addEventListener('focusin', fn)\n      document.addEventListener('focusout', fn)\n      return () => {\n        document.removeEventListener('focusin', fn)\n        document.removeEventListener('focusout', fn)\n      }\n    } else {\n      document.addEventListener('focus', fn, true)\n      document.addEventListener('blur', fn, true)\n      return () => {\n        document.removeEventListener('focus', fn, true)\n        document.removeEventListener('blur', fn, true)\n      }\n    }\n  }, [])\n\n  return (\n    <SlateSelectorContext.Provider value={selectorContext}>\n      <SlateContext.Provider value={context}>\n        <EditorContext.Provider value={context.editor}>\n          <FocusedContext.Provider value={isFocused}>\n            {children}\n          </FocusedContext.Provider>\n        </EditorContext.Provider>\n      </SlateContext.Provider>\n    </SlateSelectorContext.Provider>\n  )\n}\n", "import { useContext } from 'react'\n\nimport { EditorContext } from './use-slate-static'\n\n/**\n * Get the current editor object from the React context.\n * @deprecated Use useSlateStatic instead.\n */\n\nexport const useEditor = () => {\n  const editor = useContext(EditorContext)\n\n  if (!editor) {\n    throw new Error(\n      `The \\`useEditor\\` hook must be used inside the <Slate> component's context.`\n    )\n  }\n\n  return editor\n}\n", "import { BaseSelection, Range } from 'slate'\n\nimport { useSlateSelector } from './use-slate-selector'\n\n/**\n * Get the current slate selection.\n * Only triggers a rerender when the selection actually changes\n */\nexport const useSlateSelection = () => {\n  return useSlateSelector(editor => editor.selection, isSelectionEqual)\n}\n\nconst isSelectionEqual = (a: BaseSelection, b: BaseSelection) => {\n  if (!a && !b) return true\n  if (!a || !b) return false\n  return Range.equals(a, b)\n}\n", "/**\n * Utilities for single-line deletion\n */\n\nimport { Range, Editor } from 'slate'\nimport { ReactEditor } from '../plugin/react-editor'\n\nconst doRectsIntersect = (rect: DOMRect, compareRect: DOMRect) => {\n  const middle = (compareRect.top + compareRect.bottom) / 2\n\n  return rect.top <= middle && rect.bottom >= middle\n}\n\nconst areRangesSameLine = (\n  editor: ReactEditor,\n  range1: Range,\n  range2: Range\n) => {\n  const rect1 = ReactEditor.toDOMRange(editor, range1).getBoundingClientRect()\n  const rect2 = ReactEditor.toDOMRange(editor, range2).getBoundingClientRect()\n\n  return doRectsIntersect(rect1, rect2) && doRectsIntersect(rect2, rect1)\n}\n\n/**\n * A helper utility that returns the end portion of a `Range`\n * which is located on a single line.\n *\n * @param {Editor} editor The editor object to compare against\n * @param {Range} parentRange The parent range to compare against\n * @returns {Range} A valid portion of the parentRange which is one a single line\n */\nexport const findCurrentLineRange = (\n  editor: ReactEditor,\n  parentRange: Range\n): Range => {\n  const parentRangeBoundary = Editor.range(editor, Range.end(parentRange))\n  const positions = Array.from(Editor.positions(editor, { at: parentRange }))\n\n  let left = 0\n  let right = positions.length\n  let middle = Math.floor(right / 2)\n\n  if (\n    areRangesSameLine(\n      editor,\n      Editor.range(editor, positions[left]),\n      parentRangeBoundary\n    )\n  ) {\n    return Editor.range(editor, positions[left], parentRangeBoundary)\n  }\n\n  if (positions.length < 2) {\n    return Editor.range(\n      editor,\n      positions[positions.length - 1],\n      parentRangeBoundary\n    )\n  }\n\n  while (middle !== positions.length && middle !== left) {\n    if (\n      areRangesSameLine(\n        editor,\n        Editor.range(editor, positions[middle]),\n        parentRangeBoundary\n      )\n    ) {\n      right = middle\n    } else {\n      left = middle\n    }\n\n    middle = Math.floor((left + right) / 2)\n  }\n\n  return Editor.range(editor, positions[right], parentRangeBoundary)\n}\n", "import ReactDOM from 'react-dom'\nimport {\n  BaseEditor,\n  Editor,\n  Element,\n  Node,\n  Operation,\n  Path,\n  Point,\n  Range,\n  Transforms,\n} from 'slate'\nimport {\n  TextDiff,\n  transformPendingPoint,\n  transformPendingRange,\n  transformTextDiff,\n} from '../utils/diff-text'\nimport {\n  getPlainText,\n  getSlateFragmentAttribute,\n  isDOMText,\n} from '../utils/dom'\nimport { Key } from '../utils/key'\nimport { findCurrentLineRange } from '../utils/lines'\nimport {\n  EDITOR_TO_KEY_TO_ELEMENT,\n  EDITOR_TO_ON_CHANGE,\n  EDITOR_TO_PENDING_ACTION,\n  EDITOR_TO_PENDING_DIFFS,\n  EDITOR_TO_PENDING_INSERTION_MARKS,\n  EDITOR_TO_PENDING_SELECTION,\n  EDITOR_TO_SCHEDULE_FLUSH,\n  EDITOR_TO_USER_MARKS,\n  EDITOR_TO_USER_SELECTION,\n  NODE_TO_KEY,\n} from '../utils/weak-maps'\nimport { ReactEditor } from './react-editor'\n\n/**\n * `withReact` adds React and DOM specific behaviors to the editor.\n *\n * If you are using TypeScript, you must extend Slate's CustomTypes to use\n * this plugin.\n *\n * See https://docs.slatejs.org/concepts/11-typescript to learn how.\n */\n\nexport const withReact = <T extends BaseEditor>(\n  editor: T,\n  clipboardFormatKey = 'x-slate-fragment'\n): T & ReactEditor => {\n  const e = editor as T & ReactEditor\n  const { apply, onChange, deleteBackward, addMark, removeMark } = e\n\n  // The WeakMap which maps a key to a specific HTMLElement must be scoped to the editor instance to\n  // avoid collisions between editors in the DOM that share the same value.\n  EDITOR_TO_KEY_TO_ELEMENT.set(e, new WeakMap())\n\n  e.addMark = (key, value) => {\n    EDITOR_TO_SCHEDULE_FLUSH.get(e)?.()\n\n    if (\n      !EDITOR_TO_PENDING_INSERTION_MARKS.get(e) &&\n      EDITOR_TO_PENDING_DIFFS.get(e)?.length\n    ) {\n      // Ensure the current pending diffs originating from changes before the addMark\n      // are applied with the current formatting\n      EDITOR_TO_PENDING_INSERTION_MARKS.set(e, null)\n    }\n\n    EDITOR_TO_USER_MARKS.delete(e)\n\n    addMark(key, value)\n  }\n\n  e.removeMark = key => {\n    if (\n      !EDITOR_TO_PENDING_INSERTION_MARKS.get(e) &&\n      EDITOR_TO_PENDING_DIFFS.get(e)?.length\n    ) {\n      // Ensure the current pending diffs originating from changes before the addMark\n      // are applied with the current formatting\n      EDITOR_TO_PENDING_INSERTION_MARKS.set(e, null)\n    }\n\n    EDITOR_TO_USER_MARKS.delete(e)\n\n    removeMark(key)\n  }\n\n  e.deleteBackward = unit => {\n    if (unit !== 'line') {\n      return deleteBackward(unit)\n    }\n\n    if (e.selection && Range.isCollapsed(e.selection)) {\n      const parentBlockEntry = Editor.above(e, {\n        match: n => Element.isElement(n) && Editor.isBlock(e, n),\n        at: e.selection,\n      })\n\n      if (parentBlockEntry) {\n        const [, parentBlockPath] = parentBlockEntry\n        const parentElementRange = Editor.range(\n          e,\n          parentBlockPath,\n          e.selection.anchor\n        )\n\n        const currentLineRange = findCurrentLineRange(e, parentElementRange)\n\n        if (!Range.isCollapsed(currentLineRange)) {\n          Transforms.delete(e, { at: currentLineRange })\n        }\n      }\n    }\n  }\n\n  // This attempts to reset the NODE_TO_KEY entry to the correct value\n  // as apply() changes the object reference and hence invalidates the NODE_TO_KEY entry\n  e.apply = (op: Operation) => {\n    const matches: [Path, Key][] = []\n\n    const pendingDiffs = EDITOR_TO_PENDING_DIFFS.get(e)\n    if (pendingDiffs?.length) {\n      const transformed = pendingDiffs\n        .map(textDiff => transformTextDiff(textDiff, op))\n        .filter(Boolean) as TextDiff[]\n\n      EDITOR_TO_PENDING_DIFFS.set(e, transformed)\n    }\n\n    const pendingSelection = EDITOR_TO_PENDING_SELECTION.get(e)\n    if (pendingSelection) {\n      EDITOR_TO_PENDING_SELECTION.set(\n        e,\n        transformPendingRange(e, pendingSelection, op)\n      )\n    }\n\n    const pendingAction = EDITOR_TO_PENDING_ACTION.get(e)\n    if (pendingAction?.at) {\n      const at = Point.isPoint(pendingAction?.at)\n        ? transformPendingPoint(e, pendingAction.at, op)\n        : transformPendingRange(e, pendingAction.at, op)\n\n      EDITOR_TO_PENDING_ACTION.set(e, at ? { ...pendingAction, at } : null)\n    }\n\n    switch (op.type) {\n      case 'insert_text':\n      case 'remove_text':\n      case 'set_node':\n      case 'split_node': {\n        matches.push(...getMatches(e, op.path))\n        break\n      }\n\n      case 'set_selection': {\n        // Selection was manually set, don't restore the user selection after the change.\n        EDITOR_TO_USER_SELECTION.get(e)?.unref()\n        EDITOR_TO_USER_SELECTION.delete(e)\n        break\n      }\n\n      case 'insert_node':\n      case 'remove_node': {\n        matches.push(...getMatches(e, Path.parent(op.path)))\n        break\n      }\n\n      case 'merge_node': {\n        const prevPath = Path.previous(op.path)\n        matches.push(...getMatches(e, prevPath))\n        break\n      }\n\n      case 'move_node': {\n        const commonPath = Path.common(\n          Path.parent(op.path),\n          Path.parent(op.newPath)\n        )\n        matches.push(...getMatches(e, commonPath))\n        break\n      }\n    }\n\n    apply(op)\n\n    for (const [path, key] of matches) {\n      const [node] = Editor.node(e, path)\n      NODE_TO_KEY.set(node, key)\n    }\n  }\n\n  e.setFragmentData = (data: Pick<DataTransfer, 'getData' | 'setData'>) => {\n    const { selection } = e\n\n    if (!selection) {\n      return\n    }\n\n    const [start, end] = Range.edges(selection)\n    const startVoid = Editor.void(e, { at: start.path })\n    const endVoid = Editor.void(e, { at: end.path })\n\n    if (Range.isCollapsed(selection) && !startVoid) {\n      return\n    }\n\n    // Create a fake selection so that we can add a Base64-encoded copy of the\n    // fragment to the HTML, to decode on future pastes.\n    const domRange = ReactEditor.toDOMRange(e, selection)\n    let contents = domRange.cloneContents()\n    let attach = contents.childNodes[0] as HTMLElement\n\n    // Make sure attach is non-empty, since empty nodes will not get copied.\n    contents.childNodes.forEach(node => {\n      if (node.textContent && node.textContent.trim() !== '') {\n        attach = node as HTMLElement\n      }\n    })\n\n    // COMPAT: If the end node is a void node, we need to move the end of the\n    // range from the void node's spacer span, to the end of the void node's\n    // content, since the spacer is before void's content in the DOM.\n    if (endVoid) {\n      const [voidNode] = endVoid\n      const r = domRange.cloneRange()\n      const domNode = ReactEditor.toDOMNode(e, voidNode)\n      r.setEndAfter(domNode)\n      contents = r.cloneContents()\n    }\n\n    // COMPAT: If the start node is a void node, we need to attach the encoded\n    // fragment to the void node's content node instead of the spacer, because\n    // attaching it to empty `<div>/<span>` nodes will end up having it erased by\n    // most browsers. (2018/04/27)\n    if (startVoid) {\n      attach = contents.querySelector('[data-slate-spacer]')! as HTMLElement\n    }\n\n    // Remove any zero-width space spans from the cloned DOM so that they don't\n    // show up elsewhere when pasted.\n    Array.from(contents.querySelectorAll('[data-slate-zero-width]')).forEach(\n      zw => {\n        const isNewline = zw.getAttribute('data-slate-zero-width') === 'n'\n        zw.textContent = isNewline ? '\\n' : ''\n      }\n    )\n\n    // Set a `data-slate-fragment` attribute on a non-empty node, so it shows up\n    // in the HTML, and can be used for intra-Slate pasting. If it's a text\n    // node, wrap it in a `<span>` so we have something to set an attribute on.\n    if (isDOMText(attach)) {\n      const span = attach.ownerDocument.createElement('span')\n      // COMPAT: In Chrome and Safari, if we don't add the `white-space` style\n      // then leading and trailing spaces will be ignored. (2017/09/21)\n      span.style.whiteSpace = 'pre'\n      span.appendChild(attach)\n      contents.appendChild(span)\n      attach = span\n    }\n\n    const fragment = e.getFragment()\n    const string = JSON.stringify(fragment)\n    const encoded = window.btoa(encodeURIComponent(string))\n    attach.setAttribute('data-slate-fragment', encoded)\n    data.setData(`application/${clipboardFormatKey}`, encoded)\n\n    // Add the content to a <div> so that we can get its inner HTML.\n    const div = contents.ownerDocument.createElement('div')\n    div.appendChild(contents)\n    div.setAttribute('hidden', 'true')\n    contents.ownerDocument.body.appendChild(div)\n    data.setData('text/html', div.innerHTML)\n    data.setData('text/plain', getPlainText(div))\n    contents.ownerDocument.body.removeChild(div)\n    return data\n  }\n\n  e.insertData = (data: DataTransfer) => {\n    if (!e.insertFragmentData(data)) {\n      e.insertTextData(data)\n    }\n  }\n\n  e.insertFragmentData = (data: DataTransfer): boolean => {\n    /**\n     * Checking copied fragment from application/x-slate-fragment or data-slate-fragment\n     */\n    const fragment =\n      data.getData(`application/${clipboardFormatKey}`) ||\n      getSlateFragmentAttribute(data)\n\n    if (fragment) {\n      const decoded = decodeURIComponent(window.atob(fragment))\n      const parsed = JSON.parse(decoded) as Node[]\n      e.insertFragment(parsed)\n      return true\n    }\n    return false\n  }\n\n  e.insertTextData = (data: DataTransfer): boolean => {\n    const text = data.getData('text/plain')\n\n    if (text) {\n      const lines = text.split(/\\r\\n|\\r|\\n/)\n      let split = false\n\n      for (const line of lines) {\n        if (split) {\n          Transforms.splitNodes(e, { always: true })\n        }\n\n        e.insertText(line)\n        split = true\n      }\n      return true\n    }\n    return false\n  }\n\n  e.onChange = options => {\n    // COMPAT: React doesn't batch `setState` hook calls, which means that the\n    // children and selection can get out of sync for one render pass. So we\n    // have to use this unstable API to ensure it batches them. (2019/12/03)\n    // https://github.com/facebook/react/issues/14259#issuecomment-439702367\n    ReactDOM.unstable_batchedUpdates(() => {\n      const onContextChange = EDITOR_TO_ON_CHANGE.get(e)\n\n      if (onContextChange) {\n        onContextChange()\n      }\n\n      onChange(options)\n    })\n  }\n\n  return e\n}\n\nconst getMatches = (e: Editor, path: Path) => {\n  const matches: [Path, Key][] = []\n  for (const [n, p] of Editor.levels(e, { at: path })) {\n    const key = ReactEditor.findKey(e, n)\n    matches.push([p, key])\n  }\n  return matches\n}\n"],
  "mappings": "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",
  "names": ["Symbol", "Symbol", "e", "Symbol", "debounce", "time", "debounce", "throttle", "check", "e", "isKeyHotkey", "el", "nodeType", "canOverflow", "overflow", "skipOverflowHiddenElements", "t", "isScrollable", "clientHeight", "scrollHeight", "clientWidth", "scrollWidth", "style", "getComputedStyle", "overflowY", "overflowX", "frame", "ownerDocument", "defaultView", "frameElement", "e", "scrollingEdgeStart", "scrollingEdgeEnd", "scrollingSize", "scrollingBorderStart", "scrollingBorderEnd", "elementEdgeStart", "elementEdgeEnd", "elementSize", "target", "options", "windowWithViewport", "window", "scrollMode", "block", "inline", "boundary", "checkBoundary", "node", "isElement", "element", "parent", "scrollingElement", "document", "documentElement", "frames", "cursor", "parentElement", "getRootNode", "host", "push", "body", "viewportWidth", "visualViewport", "width", "innerWidth", "viewportHeight", "height", "innerHeight", "scrollX", "pageXOffset", "viewportY", "scrollY", "pageYOffset", "_target$getBoundingCl", "getBoundingClientRect", "targetHeight", "targetWidth", "targetTop", "top", "targetRight", "right", "targetBottom", "bottom", "targetLeft", "left", "targetBlock", "targetInline", "computations", "index", "length", "_frame$getBoundingCli", "frameStyle", "borderLeft", "parseInt", "borderLeftWidth", "borderTop", "borderTopWidth", "borderRightWidth", "borderBottom", "borderBottomWidth", "blockScroll", "inlineScroll", "scrollbarWidth", "offsetWidth", "borderRight", "scrollbarHeight", "offsetHeight", "scaleX", "scaleY", "alignNearest", "viewportX", "Math", "max", "scrollLeft", "scrollTop", "min", "ResizeObserverBoxOptions", "ResizeObserverSize", "DOMRectReadOnly", "global", "global", "ResizeObserverEntry", "callbacks", "ResizeObserver", "Scheduler", "global", "n", "ResizeObservation", "size", "ResizeObserverDetail", "i", "ResizeObserverController", "ResizeObserver", "i", "objectWithoutPropertiesLoose", "n", "Key", "constructor", "id", "NODE_TO_INDEX", "WeakMap", "NODE_TO_PARENT", "EDITOR_TO_WINDOW", "EDITOR_TO_ELEMENT", "EDITOR_TO_PLACEHOLDER_ELEMENT", "ELEMENT_TO_NODE", "NODE_TO_ELEMENT", "NODE_TO_KEY", "EDITOR_TO_KEY_TO_ELEMENT", "IS_READ_ONLY", "IS_FOCUSED", "IS_COMPOSING", "EDITOR_TO_USER_SELECTION", "EDITOR_TO_ON_CHANGE", "EDITOR_TO_SCHEDULE_FLUSH", "EDITOR_TO_PENDING_INSERTION_MARKS", "EDITOR_TO_USER_MARKS", "EDITOR_TO_PENDING_DIFFS", "EDITOR_TO_PENDING_ACTION", "EDITOR_TO_PENDING_SELECTION", "EDITOR_TO_FORCE_RENDER", "PLACEHOLDER_SYMBOL", "Symbol", "MARK_PLACEHOLDER_SYMBOL", "DOMText", "globalThis", "Text", "getDefaultView", "value", "ownerDocument", "defaultView", "isDOMComment", "isDOMNode", "nodeType", "isDOMElement", "window", "Node", "isDOMSelection", "anchorNode", "Selection", "isDOMText", "isPlainTextOnlyPaste", "event", "clipboardData", "getData", "types", "length", "normalizeDOMPoint", "domPoint", "node", "offset", "childNodes", "isLast", "index", "getEditableChildAndIndex", "getEditableChild", "textContent", "hasShadowRoot", "parent", "parentNode", "toString", "direction", "child", "triedForward", "triedBackward", "getAttribute", "getPlainText", "domNode", "text", "nodeValue", "childNode", "Array", "from", "display", "getComputedStyle", "getPropertyValue", "tagName", "catchSlateFragment", "getSlateFragmentAttribute", "dataTransfer", "htmlData", "fragment", "match", "isTrackedMutation", "editor", "mutation", "batch", "target", "matches", "document", "ReactEditor", "getWindow", "contains", "hasDOMNode", "editable", "parentMutation", "find", "addedNodes", "removedNodes", "IS_REACT_VERSION_17_OR_ABOVE", "parseInt", "React", "version", "split", "IS_IOS", "navigator", "test", "userAgent", "MSStream", "IS_APPLE", "IS_ANDROID", "IS_FIREFOX", "IS_SAFARI", "IS_EDGE_LEGACY", "IS_CHROME", "IS_CHROME_LEGACY", "IS_ANDROID_CHROME_LEGACY", "IS_FIREFOX_LEGACY", "IS_UC_MOBILE", "IS_WECHATBROWSER", "CAN_USE_DOM", "createElement", "HAS_BEFORE_INPUT_SUPPORT", "InputEvent", "prototype", "getTargetRanges", "isComposing", "get", "Error", "findKey", "key", "set", "findPath", "path", "Editor", "isEditor", "unshift", "Scrubber", "stringify", "findDocumentOrShadowRoot", "el", "toDOMNode", "root", "getRootNode", "Document", "ShadowRoot", "getSelection", "isFocused", "isReadOnly", "blur", "activeElement", "focus", "preventScroll", "deselect", "selection", "domSelection", "rangeCount", "removeAllRanges", "Transforms", "options", "editorEl", "targetEl", "parentElement", "err", "message", "includes", "closest", "isContentEditable", "insertData", "data", "insertFragmentData", "insertTextData", "setFragmentData", "originEvent", "KEY_TO_ELEMENT", "toDOMPoint", "point", "void", "at", "selector", "texts", "querySelectorAll", "start", "attr", "trueLength", "end", "nextText", "hasAttribute", "domText", "startsWith", "Math", "min", "max", "toDOMRange", "range", "anchor", "isBackward", "Range", "domAnchor", "domFocus", "isCollapsed", "domRange", "createRange", "startNode", "startOffset", "endNode", "endOffset", "startEl", "isStartAtZeroWidth", "endEl", "isEndAtZeroWidth", "setStart", "setEnd", "toSlateNode", "domEl", "findEventRange", "nativeEvent", "clientX", "x", "clientY", "y", "Element", "isElement", "isVoid", "rect", "getBoundingClientRect", "isPrev", "isInline", "left", "width", "top", "height", "edge", "before", "after", "caretRangeFromPoint", "position", "caretPositionFromPoint", "offsetNode", "toSlateRange", "exactMatch", "suppressThrow", "toSlatePoint", "nearestNode", "nearestOffset", "textNode", "potentialVoidNode", "voidNode", "leafNode", "contents", "cloneContents", "removals", "slice", "call", "forEach", "textContext", "removeChild", "leafNodes", "current", "endsWith", "slateNode", "querySelector", "startContainer", "anchorOffset", "focusNode", "focusOffset", "endContainer", "collapsed", "isEnd", "isStart", "isExpanded", "isForward", "mode", "unhangRange", "voids", "hasRange", "hasPath", "hasTarget", "hasEditableTarget", "hasSelectableTarget", "isTargetInsideNonReadonlyVoid", "androidScheduleFlush", "androidPendingDiffs", "shallowCompare", "obj1", "obj2", "Object", "keys", "every", "hasOwnProperty", "isDecorationFlagsEqual", "other", "rangeOwnProps", "otherOwnProps", "isElementDecorationsEqual", "list", "another", "equals", "isTextDecorationsEqual", "useIsomorphicLayoutEffect", "useLayoutEffect", "useEffect", "String", "props", "leaf", "useSlateStatic", "parentPath", "Path", "isMarkPlaceholder", "ZeroWidthString", "string", "children", "isLineBreak", "TextString", "isTrailing", "ref", "useRef", "getTextContent", "initialText", "useState", "textWithTrailing", "MemoizedText", "memo", "forwardRef", "attributes", "EditorContext", "createContext", "useContext", "disconnectPlaceholderResizeObserver", "placeholderResizeObserver", "releaseObserver", "disconnect", "clearTimeoutRef", "timeoutRef", "clearTimeout", "Leaf", "renderPlaceholder", "renderLeaf", "DefaultLeaf", "placeholderRef", "showPlaceholder", "setShowPlaceholder", "showPlaceholderTimeoutRef", "callbackPlaceholderRef", "useCallback", "placeholderEl", "delete", "onPlaceholderResize", "ResizeObserver", "ResizeObserverPolyfill", "observe", "leafIsPlaceholder", "setTimeout", "placeholderProps", "placeholder", "style", "pointerEvents", "maxWidth", "opacity", "userSelect", "textDecoration", "WebkitUserModify", "undefined", "contentEditable", "Fragment", "MemoizedLeaf", "prev", "next", "decorations", "leaves", "SlateText", "push", "callbackRef", "span", "element", "renderElement", "p", "DefaultElement", "readOnly", "useReadOnly", "useChildren", "hasInlines", "dir", "getDirection", "Tag", "color", "outline", "MemoizedElement", "DecorateContext", "useDecorate", "SelectedContext", "useSelected", "decorate", "isLeafBlock", "concat", "sel", "intersection", "ds", "dec", "d", "Provider", "ElementComponent", "TextComponent", "ReadOnlyContext", "SlateContext", "useSlate", "context", "useSlateWithV", "TRIPLE_CLICK", "HOTKEYS", "bold", "compose", "moveBackward", "moveForward", "moveWordBackward", "moveWordForward", "deleteBackward", "deleteForward", "extendBackward", "extendForward", "italic", "insertSoftBreak", "splitBlock", "undo", "APPLE_HOTKEYS", "moveLineBackward", "moveLineForward", "deleteLineBackward", "deleteLineForward", "deleteWordBackward", "deleteWordForward", "extendLineBackward", "extendLineForward", "redo", "transposeCharacter", "WINDOWS_HOTKEYS", "create", "generic", "apple", "windows", "isGeneric", "isKeyHotkey", "isApple", "isWindows", "isBold", "isCompose", "isMoveBackward", "isMoveForward", "isDeleteBackward", "isDeleteForward", "isDeleteLineBackward", "isDeleteLineForward", "isDeleteWordBackward", "isDeleteWordForward", "isExtendBackward", "isExtendForward", "isExtendLineBackward", "isExtendLineForward", "isItalic", "isMoveLineBackward", "isMoveLineForward", "isMoveWordBackward", "isMoveWordForward", "isRedo", "isSoftBreak", "isSplitBlock", "isTransposeCharacter", "isUndo", "createRestoreDomManager", "receivedUserInput", "bufferedMutations", "clear", "registerMutations", "mutations", "trackedMutations", "filter", "restoreDOM", "reverse", "type", "insertBefore", "nextSibling", "MUTATION_OBSERVER_CONFIG", "subtree", "childList", "characterData", "characterDataOldValue", "RestoreDOMComponent", "Component", "mutationObserver", "componentDidMount", "manager", "MutationObserver", "getSnapshotBeforeUpdate", "pendingMutations", "takeRecords", "componentDidUpdate", "componentWillUnmount", "render", "RestoreDOM", "verifyDiffState", "textDiff", "diff", "isText", "nextPath", "nextNode", "applyStringDiff", "diffs", "reduce", "longestCommonPrefixLength", "str", "charAt", "longestCommonSuffixLength", "normalizeStringDiff", "targetText", "removedText", "prefixLength", "suffixLength", "normalized", "mergeStringDiffs", "a", "b", "overlap", "applied", "sliceEnd", "targetRange", "normalizePoint", "parentBlock", "above", "isBlock", "entry", "isDescendant", "normalizeRange", "transformPendingPoint", "op", "pendingDiffs", "Point", "transform", "affinity", "transformed", "transformPendingRange", "transformTextDiff", "newPath", "RESOLVE_DELAY", "FLUSH_DELAY", "debug", "isDataTransfer", "name", "createAndroidInputManager", "scheduleOnDOMSelectionChange", "onDOMSelectionChange", "flushing", "compositionEndTimeoutId", "flushTimeoutId", "actionTimeoutId", "idCounter", "insertPositionHint", "applyPendingSelection", "pendingSelection", "select", "performAction", "action", "isPoint", "run", "flush", "hasPendingDiffs", "hasPendingAction", "selectionRef", "rangeRef", "marks", "scheduleSelectionChange", "pendingMarks", "insertText", "deleteFragment", "cancel", "unref", "userMarks", "onChange", "handleCompositionEnd", "_event", "handleCompositionStart", "updatePlaceholderVisibility", "forceHide", "placeholderElement", "removeProperty", "storeDiff", "idx", "findIndex", "change", "merged", "splice", "scheduleAction", "handleDOMBeforeInput", "inputType", "nativeTargetRange", "canStoreDiff", "edges", "relevantPendingDiffs", "handleUserSelect", "targetNode", "nativeCollapsed", "unit", "insertBreak", "replace", "parts", "line", "hintPosition", "search", "diffPosition", "scheduleFlush", "hasPendingChanges", "isFlushing", "pathChanged", "parentPathChanged", "handleInput", "handleKeyDown", "_", "handleDomMutations", "some", "useIsMounted", "isMountedRef", "useMutationObserver", "callback", "useAndroidInputManager", "isMounted", "inputManager", "useTrackUserInput", "animationFrameIdRef", "onUserInput", "cancelAnimationFrame", "requestAnimationFrame", "Children", "Editable", "defaultRenderPlaceholder", "DefaultPlaceholder", "autoFocus", "defaultDecorate", "onDOMBeforeInput", "propsOnDOMBeforeInput", "scrollSelectionIntoView", "defaultScrollSelectionIntoView", "userStyle", "as", "disableDefaultStyles", "setIsComposing", "deferredOperations", "placeholderHeight", "setPlaceholderHeight", "forceRender", "useReducer", "s", "state", "useMemo", "isDraggingInternally", "isUpdatingSelection", "latestElement", "hasMarkPlaceholder", "androidInputManagerRef", "throttle", "androidInputManager", "anchorNodeSelectable", "focusNodeSelectable", "debounce", "setDomSelection", "forceChange", "hasDomSelection", "editorElement", "hasDomSelectionInEditor", "slateRange", "newDomRange", "setBaseAndExtent", "ensureSelection", "timeoutId", "animationFrameId", "ensureDomSelection", "e", "isDOMEventHandled", "isCompositionChange", "native", "lastText", "createTreeWalker", "NodeFilter", "SHOW_TEXT", "lastChild", "whiteSpace", "block", "preventDefault", "toRestore", "removeEventListener", "addEventListener", "placeHolderResizeHandler", "rest", "loose", "unset", "fromEntries", "map", "mark", "role", "spellCheck", "autoCorrect", "autoCapitalize", "zindex", "suppressContentEditableWarning", "wordWrap", "minHeight", "onBeforeInput", "isEventHandled", "onInput", "onBlur", "relatedTarget", "onClick", "detail", "blockPath", "startVoid", "endVoid", "onCompositionEnd", "placeholderMarks", "onCompositionUpdate", "onCompositionStart", "inline", "inlinePath", "setSelection", "onCopy", "isDOMEventTargetInput", "onCut", "onDragOver", "onDragStart", "voidMatch", "onDrop", "draggedRange", "onDragEnd", "onFocus", "onKeyDown", "isRTL", "Hotkeys", "maybeHistoryEditor", "move", "collapse", "currentNode", "onPaste", "leafEl", "bind", "scrollIntoView", "scrollMode", "handler", "shouldTreatEventAsHandled", "isDefaultPrevented", "isPropagationStopped", "HTMLInputElement", "HTMLTextAreaElement", "defaultPrevented", "FocusedContext", "useFocused", "isError", "error", "SlateSelectorContext", "refEquality", "useSlateSelector", "equalityFn", "getSlate", "latestSubscriptionCallbackError", "latestSelector", "latestSelectedState", "selectedState", "stack", "checkForUpdates", "newSelectedState", "unsubscribe", "useSelectorContext", "eventListeners", "slateRef", "listener", "selectorContext", "indexOf", "Slate", "unmountRef", "setContext", "isNodeList", "assign", "v", "handleSelectorChange", "onContextChange", "prevContext", "setIsFocused", "fn", "useEditor", "useSlateSelection", "isSelectionEqual", "doRectsIntersect", "compareRect", "middle", "bottom", "areRangesSameLine", "range1", "range2", "rect1", "rect2", "findCurrentLineRange", "parentRange", "parentRangeBoundary", "positions", "right", "floor", "withReact", "clipboardFormatKey", "apply", "addMark", "removeMark", "parentBlockEntry", "parentBlockPath", "parentElementRange", "currentLineRange", "Boolean", "pendingAction", "getMatches", "prevPath", "previous", "commonPath", "common", "attach", "trim", "r", "cloneRange", "setEndAfter", "zw", "isNewline", "appendChild", "getFragment", "JSON", "encoded", "btoa", "encodeURIComponent", "setAttribute", "setData", "div", "body", "innerHTML", "decoded", "decodeURIComponent", "atob", "parsed", "parse", "insertFragment", "lines", "splitNodes", "always", "ReactDOM", "unstable_batchedUpdates", "levels"]
}
